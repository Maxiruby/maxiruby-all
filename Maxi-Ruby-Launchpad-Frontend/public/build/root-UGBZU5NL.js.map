{
  "version": 3,
  "sources": ["../../app/root.tsx", "css-bundle-update-plugin-ns:/Users/muzman/Desktop/maxiruby/Maxi-Ruby-Launchpad-Frontend/node_modules/@remix-run/css-bundle/dist/esm/index.js", "../../app/components/SearchBar.tsx", "../../app/components/shared/Toast.tsx", "../../node_modules/@radix-ui/react-collection/dist/packages/react/collection/src/index.ts", "../../node_modules/@radix-ui/react-collection/dist/packages/react/collection/src/Collection.tsx", "../../node_modules/@radix-ui/react-visually-hidden/dist/packages/react/visually-hidden/src/index.ts", "../../node_modules/@radix-ui/react-visually-hidden/dist/packages/react/visually-hidden/src/VisuallyHidden.tsx", "../../node_modules/@radix-ui/react-toast/dist/packages/react/toast/src/index.ts", "../../node_modules/@radix-ui/react-toast/dist/packages/react/toast/src/Toast.tsx", "../../node_modules/class-variance-authority/dist/index.mjs", "../../app/hooks/useHydrated.ts", "../../app/hooks/useToast.ts", "../../app/hooks/index.ts", "../../app/components/shared/ToastWrapper.tsx", "../../app/components/ClientOnly.tsx", "../../app/components/shared/Sheet.tsx", "../../app/components/shared/Dropdown.tsx", "../../node_modules/@radix-ui/react-direction/dist/packages/react/direction/src/index.ts", "../../node_modules/@radix-ui/react-direction/dist/packages/react/direction/src/Direction.tsx", "../../node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs", "../../node_modules/@floating-ui/core/dist/floating-ui.core.mjs", "../../node_modules/@floating-ui/utils/dom/dist/floating-ui.utils.dom.mjs", "../../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs", "../../node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.esm.js", "../../node_modules/@radix-ui/react-use-size/dist/packages/react/use-size/src/index.ts", "../../node_modules/@radix-ui/react-use-size/dist/packages/react/use-size/src/useSize.tsx", "../../node_modules/@radix-ui/react-popper/dist/packages/react/popper/src/index.ts", "../../node_modules/@radix-ui/react-popper/dist/packages/react/popper/src/Popper.tsx", "../../node_modules/@radix-ui/react-roving-focus/dist/packages/react/roving-focus/src/index.ts", "../../node_modules/@radix-ui/react-roving-focus/dist/packages/react/roving-focus/src/RovingFocusGroup.tsx", "../../node_modules/@radix-ui/react-menu/dist/packages/react/menu/src/index.ts", "../../node_modules/@radix-ui/react-menu/dist/packages/react/menu/src/Menu.tsx", "../../node_modules/@radix-ui/react-dropdown-menu/dist/packages/react/dropdown-menu/src/index.ts", "../../node_modules/@radix-ui/react-dropdown-menu/dist/packages/react/dropdown-menu/src/DropdownMenu.tsx", "../../app/utils/index.ts"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/root.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/root.tsx\");\n}\n// REMIX HMR END\n\nimport React from \"react\";\nimport { cssBundleHref } from \"@remix-run/css-bundle\";\nimport { Link, Links, LiveReload, Meta, NavLink, Outlet, Scripts, ScrollRestoration, useLocation, useNavigate } from \"@remix-run/react\";\n// import { useAccount } from \"wagmi\";\n// import { signMessage } from \"@wagmi/core\";\n// styles\nimport globals from \"~/static/globals.css\";\n\n// components\nimport Image from \"~/components/shared/Image\";\nimport SearchBar from \"~/components/SearchBar\";\nimport { Container } from \"~/components/Layout\";\nimport { ToastWrapper } from \"~/components/shared/ToastWrapper\";\nimport Button from \"~/components/shared/Button\";\nimport Icon from \"~/components/shared/Icon\";\nimport ClientOnly from \"~/components/ClientOnly\";\nimport { Sheet, SheetContent, SheetFooter, SheetHeader, SheetTitle, SheetTrigger } from \"~/components/shared/Sheet\";\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuGroup, DropdownMenuItem, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuTrigger } from \"~/components/shared/Dropdown\";\n\n// store\nimport { useAppStore } from \"~/store\";\n\n// config\nimport { Constants, Images, Meta as MetaConfig } from \"~/config\";\n\n// utils\nimport { cn } from \"~/utils/cn\";\nimport { storage } from \"~/utils/storage\";\n\n// types\nimport { Theme } from \"~/types/context.types\";\nimport { truncate } from \"./utils\";\nexport const links = () => [{\n  rel: \"stylesheet\",\n  href: globals\n}, {\n  rel: \"preconnect\",\n  href: \"https://fonts.googleapis.com\"\n}, {\n  rel: \"preconnect\",\n  href: \"https://fonts.gstatic.com\"\n}, {\n  rel: \"stylesheet\",\n  href: \"https://fonts.googleapis.com/css2?family=Nunito+Sans:opsz,wght@6..12,300;6..12,400;6..12,500;6..12,600;6..12,700&display=swap\"\n}, ...(cssBundleHref ? [{\n  rel: \"stylesheet\",\n  href: cssBundleHref\n}] : [])];\nexport default function App() {\n  _s();\n  const {\n    pathname\n  } = useLocation();\n  const {\n    theme,\n    setTheme\n  } = useAppStore(store => store);\n\n  // temporary way to prevent glitch\n  const [appLoaded, setAppLoaded] = React.useState(false);\n\n  // import user global settings from storage\n  React.useEffect(() => {\n    const savedTheme = storage.get(Constants.Theme);\n    if (savedTheme) {\n      setTheme(savedTheme);\n    }\n  }, []);\n\n  // apply saved theme on initialize\n  React.useEffect(() => {\n    if (theme === Theme.Dark) {\n      document.getElementsByTagName(\"html\")[0].classList.add(\"dark\");\n    } else {\n      document.getElementsByTagName(\"html\")[0].classList.remove(\"dark\");\n    }\n    setAppLoaded(true);\n  }, [storage, theme]);\n  const isAuthPage = React.useMemo(() => {\n    return pathname.startsWith(\"/login\") || pathname.startsWith(\"/signup\");\n  }, [pathname]);\n  return <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"bg-background text-foreground\">\n        {appLoaded ? isAuthPage ? <Outlet /> : <AppLayout>\n              <Outlet />\n            </AppLayout> : null}\n\n        <ToastWrapper />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>;\n}\n_s(App, \"ShNm+nztcoEIHILLYkMSxfADC34=\", false, function () {\n  return [useLocation, useAppStore];\n});\n_c = App;\nfunction AppLayout({\n  children\n}) {\n  return <div className=\"w-full h-full\">\n      <MobileHeader />\n      <AppHeader />\n\n      <main className=\"relative flex flex-col h-full pt-16\">{children}</main>\n\n      <AppFooter />\n    </div>;\n}\n_c2 = AppLayout;\nfunction AppHeader() {\n  return <header className=\"hidden sm:block fixed inset-0 bottom-[initial] w-full h-16 bg-background/40 supports-backdrop-blur:bg-background-60 backdrop-blur z-10\">\n      <Container>\n        <div className=\"flex flex-1 items-center justify-between w-full h-full gap-x-4\">\n          <NavLink to=\"/\" className=\"flex\">\n            <Image src={Images.Logo} alt=\"Maxiruby\" width={215} height={26} objectFit=\"contain\" />\n\n          </NavLink>\n\n          <AppNavigation />\n\n          <AppActions />\n        </div>\n      </Container>\n    </header>;\n}\n_c3 = AppHeader;\nfunction MobileHeader() {\n  return <header className=\"block sm:hidden fixed inset-0 bottom-[initial] w-full h-16 bg-background/90 supports-backdrop-blur:bg-background-60 backdrop-blur z-10\">\n      <Container>\n        <div className=\"flex flex-1 items-center justify-between w-full h-full gap-x-4\">\n          <NavLink to=\"/\" className=\"flex\">\n            <Image src={Images.Logo} alt=\"Balance Network\" width={142} height={50} />\n\n          </NavLink>\n          <div>\n            <ClientOnly>\n              {() => <Sheet>\n                  <SheetTrigger>\n                    <div className=\"flex\">\n                      <Button variant=\"border\" type=\"button\" title=\"Shopping Bag\" className=\"w-11 h-11 p-0\">\n\n                        <Icon icon=\"search\" />\n                      </Button>\n                      <Button variant=\"border\" type=\"button\" title=\"Shopping Bag\" className=\"w-11 h-11 p-0\">\n\n                        <Icon icon=\"dashboard\" />\n                      </Button>\n                    </div>\n                  </SheetTrigger>\n\n                  <SheetContent>\n                    <SheetHeader>\n                      <SheetTitle>MENU</SheetTitle>\n                    </SheetHeader>\n                    <div className=\"flex items-center justify-center\">\n                      <NavLink to=\"/\" className=\"flex\">\n                        <Image src={Images.Logo} alt=\"Balance Network\" width={200} height={76} />\n\n                      </NavLink>\n                    </div>\n                    <SheetFooter>\n                      <div className=\"h-full flex items-center justify-center flex-col gap-y-20 mt-7\">\n                        <SearchBar />\n                        <AppNavigation />\n                        <AppActions />\n                      </div>\n                    </SheetFooter>\n                  </SheetContent>\n                </Sheet>}\n\n            </ClientOnly>\n          </div>\n        </div>\n      </Container>\n    </header>;\n}\n_c4 = MobileHeader;\nfunction AppNavigation() {\n  return <nav role=\"navigation\" className=\"flex items-center gap-x-8\">\n      <AppNavigationLink title=\"Home\" path=\"/\" />\n      <AppNavigationLink title=\"Projects\" path=\"/projects\" />\n      <AppNavigationLink title=\"Staking\" path=\"/staking\" />\n    </nav>;\n}\n_c5 = AppNavigation;\nfunction AppNavigationLink({\n  title,\n  path\n}) {\n  return <NavLink to={path} className={({\n    isActive\n  }) => cn(\"relative text-base font-semibold transition-colors duration-150\", {\n    \"text-foreground/80 hover:text-foreground\": !isActive,\n    \"text-accent hover:text-accent after:absolute after:top-full after:left-0 after:right-0 after:w-full after:h-0.5 after:mt-1 after:bg-accent after:rounded-md\": isActive\n  })}>\n\n\n      {title}\n    </NavLink>;\n}\n_c6 = AppNavigationLink;\nfunction AppActions() {\n  _s2();\n  const auth = useAppStore(store => store.token);\n  const navigate = useNavigate();\n  const user = localStorage.getItem(\"profile\");\n  const userToken = localStorage.getItem(\"token\");\n  const handleLogout = () => {\n    localStorage.removeItem(\"profile\");\n    localStorage.removeItem(\"token\");\n    navigate(\"/login\");\n  };\n  return <div className=\"flex items-center justify-center gap-x-3\">\n      {/* <Button\n         type=\"button\"\n         title=\"Connect Wallet\"\n         variant=\"border\"\n         className=\"bg-background\"\n        >\n         Connect Wallet\n        </Button> */}\n      {user ? <React.Fragment>\n          <Button type=\"button\" title=\"0x1f9090aaE28b8a3dCeaDf281B0F12828e676c326\" variant=\"ghost\" className=\"border border-solid border-accent text-accent hover:bg-accent hover:text-background\">\n\n            {truncate(\"0x1f9090aaE28b8a3dCeaDf281B0F12828e676c326\")}\n          </Button>\n\n          <DropdownMenu>\n            <DropdownMenuTrigger>\n              <Button type=\"button\" title=\"My Account\" variant=\"secondary\" className=\"pl-4 pr-2 gap-1\">\n\n                My Account\n                <Icon icon=\"chevron-down\" />\n              </Button>\n            </DropdownMenuTrigger>\n\n            <DropdownMenuContent>\n              <DropdownMenuLabel>My Account</DropdownMenuLabel>\n              <DropdownMenuSeparator />\n              <DropdownMenuGroup>\n                <DropdownMenuItem>\n                  <Link to=\"/profile\" className=\"flex flex-1 py-2\">\n                    <span>Profile</span>\n                  </Link>\n                </DropdownMenuItem>\n                <DropdownMenuItem>\n                  <Link to=\"/portfolio\" className=\"flex flex-1 py-2\">\n                    <span>Portfolio</span>\n                  </Link>\n                </DropdownMenuItem>\n                <DropdownMenuItem>\n                  <div onClick={handleLogout} role=\"button\" className=\"flex flex-1 items-center gap-x-1.5 py-2\">\n\n                    <Icon icon=\"log-out\" className=\"w-4 h-4\" />\n                    Log Out\n                  </div>\n                </DropdownMenuItem>\n              </DropdownMenuGroup>\n            </DropdownMenuContent>\n          </DropdownMenu>\n        </React.Fragment> : <NavLink to=\"/login\" className=\"text-sm font-semibold py-3 px-5 rounded-xl border border-solid border-border hover:bg-secondary transition-colors duration-150\">\n\n          Log In / Sign Up\n        </NavLink>}\n\n    </div>;\n}\n_s2(AppActions, \"eo5MRvlrKseiMlganGM6B4mZ05g=\", false, function () {\n  return [useAppStore, useNavigate];\n});\n_c7 = AppActions;\nfunction AppFooter() {\n  return <footer className=\"relative w-full border-t border-solid border-border pt-12 mt-8\">\n      <Container>\n        <div className=\"flex flex-1 flex-col\">\n          {/* main */}\n          <div className=\"flex sm:flex-row flex-col flex-wrap items-start justify-start gap-5 pb-24\">\n            {/* logo */}\n            <div className=\"flex flex-col flex-1 min-w-[200px] max-w-[460px]\">\n              <div className=\"flex flex-col gap-y-5\">\n                <NavLink to=\"/\" className=\"flex\">\n                  <Image src={Images.Logo} alt=\"Maxiruby\" width={238} height={36} />\n\n                </NavLink>\n\n                <p className=\"text-muted-foreground text-sm font-medium\">\n                  A Lorem Ipsum is simply dummy text of the printing and\n                  typesetting industry.\n                </p>\n              </div>\n            </div>\n\n            {/* navigation */}\n            <nav role=\"navigation\" className=\"flex flex-1 flex-wrap items-start justify-center gap-5\">\n\n              {Object.entries(MetaConfig.HelpfulLinks).map(([key, values], index) => <div key={index} className=\"flex flex-col min-w-[150px] gap-y-4\">\n\n                    <h6 className=\"text-xl font-semibold capitalize\">{key}</h6>\n\n                    <ul className=\"flex flex-col gap-y-2\">\n                      {values.map((v, i) => <Link key={i} to={v.path} target={v.target} rel={v.target === \"_blank\" ? \"norefeerer noopenner\" : \"\"} className=\"text-muted-foreground text-sm font-medium hover:text-foreground transition-colors duration-150\">\n\n                          {v.title}\n                        </Link>)}\n                    </ul>\n                  </div>)}\n            </nav>\n          </div>\n\n          {/* copyright */}\n          <div className=\"flex items-center justify-between flex-col sm:flex-row gap-3 py-3 border-t border-solid border-border text-xs text-muted-foreground font-medium\">\n            <pre>\n              \u00A9 2023{\"  \"}\u2014{\"  \"}All rights reserved\n            </pre>\n\n            <div className=\"flex items-center gap-x-3\">\n              <Link to=\"https://docs.balancenetwork.io/views/About/aboutus.html\" target=\"_blank\" rel=\"norefeerer noopenner\" className=\"hover:text-foreground transition-colors duration-150\">\n\n                Disclaimer\n              </Link>\n              <Link to=\"https://docs.balancenetwork.io/views/About/privacypolicy.html\" target=\"_blank\" rel=\"norefeerer noopenner\" className=\"hover:text-foreground transition-colors duration-150\">\n\n                Privacy Policy\n              </Link>\n              <Link to=\"https://docs.balancenetwork.io/views/About/termsofuse.html\" target=\"_blank\" rel=\"norefeerer noopenner\" className=\"hover:text-foreground transition-colors duration-150\">\n\n                Terms & Conditions\n              </Link>\n            </div>\n          </div>\n        </div>\n      </Container>\n    </footer>;\n}\n_c8 = AppFooter;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppLayout\");\n$RefreshReg$(_c3, \"AppHeader\");\n$RefreshReg$(_c4, \"MobileHeader\");\n$RefreshReg$(_c5, \"AppNavigation\");\n$RefreshReg$(_c6, \"AppNavigationLink\");\n$RefreshReg$(_c7, \"AppActions\");\n$RefreshReg$(_c8, \"AppFooter\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "/**\n * @remix-run/css-bundle v1.19.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n// Injected by `cssBundlePlugin`\nlet cssBundleHref = typeof undefined === \"string\" ? undefined : undefined;\n\nexport { cssBundleHref };\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/SearchBar.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/SearchBar.tsx\");\n  import.meta.hot.lastModified = \"1691945345599.964\";\n}\n// REMIX HMR END\n\nimport React from \"react\";\n\n// components\nimport Icon from \"~/components/shared/Icon\";\nimport Input from \"~/components/shared/Input\";\nexport default function SearchBar() {\n  _s();\n  const searchbar = React.useRef(null);\n  const [query, setQuery] = React.useState(\"\");\n  const handleOnChange = event => {\n    setQuery(event.target.value);\n  };\n\n  // add keyboard shortcuts\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === \"/\" && document.activeElement !== searchbar.current) {\n      event.preventDefault();\n      searchbar.current.focus();\n    }\n    if (event.key === \"Escape\" && document.activeElement === searchbar.current) {\n      event.preventDefault();\n      searchbar.current.blur();\n    }\n  }, []);\n\n  // initialize keyboard shortcut listener\n  React.useEffect(() => {\n    if (!searchbar.current) return;\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [searchbar.current]);\n  return <div className=\"flex flex-1 sm:min-w-[600px] w-full mx-auto px-3\" tabIndex={-1}>\n      <div className=\"relative flex flex-1 items-center\">\n        <Input ref={searchbar} type=\"text\" className=\"peer flex-1 pl-11 rounded-xl\" placeholder=\"Search items, collections, creators...\" value={query} onChange={handleOnChange} />\n\n        <Icon icon=\"search\" className=\"absolute left-3 text-muted-foreground peer-focus:text-foreground transition-colors\" />\n\n        <span className=\"absolute right-3 min-w-[24px] flex items-center justify-center py-1 px-1.5 rounded-lg bg-secondary/50 text-xs text-muted-foreground font-bold after:content-['/'] peer-focus:after:content-['esc']\"></span>\n      </div>\n    </div>;\n}\n_s(SearchBar, \"QcEhSTRHRcxK0x6KRy/8Mx1dWso=\");\n_c = SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/shared/Toast.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/shared/Toast.tsx\");\n  import.meta.hot.lastModified = \"1691945345601.7332\";\n}\n// REMIX HMR END\n\nimport React from \"react\";\nimport * as ToastPrimitives from \"@radix-ui/react-toast\";\nimport { cva } from \"class-variance-authority\";\n\n// components\nimport Icon from \"~/components/shared/Icon\";\n\n// utils\nimport { cn } from \"~/utils/cn\";\nconst ToastProvider = ToastPrimitives.Provider;\nconst ToastViewport = React.forwardRef(_c = ({\n  className,\n  ...props\n}, ref) => <ToastPrimitives.Viewport ref={ref} className={cn(\"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\", className)} {...props} />);\n_c2 = ToastViewport;\nToastViewport.displayName = ToastPrimitives.Viewport.displayName;\nconst toastVariants = cva(\"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-lg border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\", {\n  variants: {\n    variant: {\n      default: \"border border-solid border-border bg-background\",\n      destructive: \"destructive group border-destructive bg-destructive text-destructive-foreground\"\n    }\n  },\n  defaultVariants: {\n    variant: \"default\"\n  }\n});\nconst Toast = React.forwardRef(_c3 = ({\n  className,\n  variant,\n  ...props\n}, ref) => {\n  return <ToastPrimitives.Root ref={ref} className={cn(toastVariants({\n    variant\n  }), className)} {...props} />;\n});\n_c4 = Toast;\nToast.displayName = ToastPrimitives.Root.displayName;\nconst ToastAction = React.forwardRef(_c5 = ({\n  className,\n  ...props\n}, ref) => <ToastPrimitives.Action ref={ref} className={cn(\"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\", className)} {...props} />);\n_c6 = ToastAction;\nToastAction.displayName = ToastPrimitives.Action.displayName;\nconst ToastClose = React.forwardRef(_c7 = ({\n  className,\n  ...props\n}, ref) => <ToastPrimitives.Close ref={ref} className={cn(\"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\", className)} toast-close=\"\" {...props}>\n    <Icon icon=\"cross\" />\n  </ToastPrimitives.Close>);\n_c8 = ToastClose;\nToastClose.displayName = ToastPrimitives.Close.displayName;\nconst ToastTitle = React.forwardRef(_c9 = ({\n  className,\n  ...props\n}, ref) => <ToastPrimitives.Title ref={ref} className={cn(\"text-sm font-semibold\", className)} {...props} />);\n_c10 = ToastTitle;\nToastTitle.displayName = ToastPrimitives.Title.displayName;\nconst ToastDescription = React.forwardRef(_c11 = ({\n  className,\n  ...props\n}, ref) => <ToastPrimitives.Description ref={ref} className={cn(\"text-sm opacity-90\", className)} {...props} />);\n_c12 = ToastDescription;\nToastDescription.displayName = ToastPrimitives.Description.displayName;\nexport { ToastProvider, ToastViewport, Toast, ToastTitle, ToastDescription, ToastClose, ToastAction };\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"ToastViewport$React.forwardRef\");\n$RefreshReg$(_c2, \"ToastViewport\");\n$RefreshReg$(_c3, \"Toast$React.forwardRef\");\n$RefreshReg$(_c4, \"Toast\");\n$RefreshReg$(_c5, \"ToastAction$React.forwardRef\");\n$RefreshReg$(_c6, \"ToastAction\");\n$RefreshReg$(_c7, \"ToastClose$React.forwardRef\");\n$RefreshReg$(_c8, \"ToastClose\");\n$RefreshReg$(_c9, \"ToastTitle$React.forwardRef\");\n$RefreshReg$(_c10, \"ToastTitle\");\n$RefreshReg$(_c11, \"ToastDescription$React.forwardRef\");\n$RefreshReg$(_c12, \"ToastDescription\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "export { createCollection } from './Collection';\nexport type { CollectionProps } from './Collection';\n", "import React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\ntype SlotProps = Radix.ComponentPropsWithoutRef<typeof Slot>;\ntype CollectionElement = HTMLElement;\ninterface CollectionProps extends SlotProps {\n  scope: any;\n}\n\n// We have resorted to returning slots directly rather than exposing primitives that can then\n// be slotted like `<CollectionItem as={Slot}>…</CollectionItem>`.\n// This is because we encountered issues with generic types that cannot be statically analysed\n// due to creating them dynamically via createCollection.\n\nfunction createCollection<ItemElement extends HTMLElement, ItemData = {}>(name: string) {\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionProvider\n   * ---------------------------------------------------------------------------------------------*/\n\n  const PROVIDER_NAME = name + 'CollectionProvider';\n  const [createCollectionContext, createCollectionScope] = createContextScope(PROVIDER_NAME);\n\n  type ContextValue = {\n    collectionRef: React.RefObject<CollectionElement>;\n    itemMap: Map<React.RefObject<ItemElement>, { ref: React.RefObject<ItemElement> } & ItemData>;\n  };\n\n  const [CollectionProviderImpl, useCollectionContext] = createCollectionContext<ContextValue>(\n    PROVIDER_NAME,\n    { collectionRef: { current: null }, itemMap: new Map() }\n  );\n\n  const CollectionProvider: React.FC<{ children?: React.ReactNode; scope: any }> = (props) => {\n    const { scope, children } = props;\n    const ref = React.useRef<CollectionElement>(null);\n    const itemMap = React.useRef<ContextValue['itemMap']>(new Map()).current;\n    return (\n      <CollectionProviderImpl scope={scope} itemMap={itemMap} collectionRef={ref}>\n        {children}\n      </CollectionProviderImpl>\n    );\n  };\n\n  CollectionProvider.displayName = PROVIDER_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionSlot\n   * ---------------------------------------------------------------------------------------------*/\n\n  const COLLECTION_SLOT_NAME = name + 'CollectionSlot';\n\n  const CollectionSlot = React.forwardRef<CollectionElement, CollectionProps>(\n    (props, forwardedRef) => {\n      const { scope, children } = props;\n      const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);\n      const composedRefs = useComposedRefs(forwardedRef, context.collectionRef);\n      return <Slot ref={composedRefs}>{children}</Slot>;\n    }\n  );\n\n  CollectionSlot.displayName = COLLECTION_SLOT_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * CollectionItem\n   * ---------------------------------------------------------------------------------------------*/\n\n  const ITEM_SLOT_NAME = name + 'CollectionItemSlot';\n  const ITEM_DATA_ATTR = 'data-radix-collection-item';\n\n  type CollectionItemSlotProps = ItemData & {\n    children: React.ReactNode;\n    scope: any;\n  };\n\n  const CollectionItemSlot = React.forwardRef<ItemElement, CollectionItemSlotProps>(\n    (props, forwardedRef) => {\n      const { scope, children, ...itemData } = props;\n      const ref = React.useRef<ItemElement>(null);\n      const composedRefs = useComposedRefs(forwardedRef, ref);\n      const context = useCollectionContext(ITEM_SLOT_NAME, scope);\n\n      React.useEffect(() => {\n        context.itemMap.set(ref, { ref, ...(itemData as unknown as ItemData) });\n        return () => void context.itemMap.delete(ref);\n      });\n\n      return (\n        <Slot {...{ [ITEM_DATA_ATTR]: '' }} ref={composedRefs}>\n          {children}\n        </Slot>\n      );\n    }\n  );\n\n  CollectionItemSlot.displayName = ITEM_SLOT_NAME;\n\n  /* -----------------------------------------------------------------------------------------------\n   * useCollection\n   * ---------------------------------------------------------------------------------------------*/\n\n  function useCollection(scope: any) {\n    const context = useCollectionContext(name + 'CollectionConsumer', scope);\n\n    const getItems = React.useCallback(() => {\n      const collectionNode = context.collectionRef.current;\n      if (!collectionNode) return [];\n      const orderedNodes = Array.from(collectionNode.querySelectorAll(`[${ITEM_DATA_ATTR}]`));\n      const items = Array.from(context.itemMap.values());\n      const orderedItems = items.sort(\n        (a, b) => orderedNodes.indexOf(a.ref.current!) - orderedNodes.indexOf(b.ref.current!)\n      );\n      return orderedItems;\n    }, [context.collectionRef, context.itemMap]);\n\n    return getItems;\n  }\n\n  return [\n    { Provider: CollectionProvider, Slot: CollectionSlot, ItemSlot: CollectionItemSlot },\n    useCollection,\n    createCollectionScope,\n  ] as const;\n}\n\nexport { createCollection };\nexport type { CollectionProps };\n", "export {\n  VisuallyHidden,\n  //\n  Root,\n} from './VisuallyHidden';\nexport type { VisuallyHiddenProps } from './VisuallyHidden';\n", "import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * VisuallyHidden\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'VisuallyHidden';\n\ntype VisuallyHiddenElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = Radix.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface VisuallyHiddenProps extends PrimitiveSpanProps {}\n\nconst VisuallyHidden = React.forwardRef<VisuallyHiddenElement, VisuallyHiddenProps>(\n  (props, forwardedRef) => {\n    return (\n      <Primitive.span\n        {...props}\n        ref={forwardedRef}\n        style={{\n          // See: https://github.com/twbs/bootstrap/blob/master/scss/mixins/_screen-reader.scss\n          position: 'absolute',\n          border: 0,\n          width: 1,\n          height: 1,\n          padding: 0,\n          margin: -1,\n          overflow: 'hidden',\n          clip: 'rect(0, 0, 0, 0)',\n          whiteSpace: 'nowrap',\n          wordWrap: 'normal',\n          ...props.style,\n        }}\n      />\n    );\n  }\n);\n\nVisuallyHidden.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = VisuallyHidden;\n\nexport {\n  VisuallyHidden,\n  //\n  Root,\n};\nexport type { VisuallyHiddenProps };\n", "export {\n  createToastScope,\n  //\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastAction,\n  ToastClose,\n  //\n  Provider,\n  Viewport,\n  Root,\n  Title,\n  Description,\n  Action,\n  Close,\n} from './Toast';\nexport type {\n  ToastProviderProps,\n  ToastViewportProps,\n  ToastProps,\n  ToastTitleProps,\n  ToastDescriptionProps,\n  ToastActionProps,\n  ToastCloseProps,\n} from './Toast';\n", "import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { createContextScope } from '@radix-ui/react-context';\nimport * as DismissableLayer from '@radix-ui/react-dismissable-layer';\nimport { Portal } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive, dispatchDiscreteCustomEvent } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { VisuallyHidden } from '@radix-ui/react-visually-hidden';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * ToastProvider\n * -----------------------------------------------------------------------------------------------*/\n\nconst PROVIDER_NAME = 'ToastProvider';\n\nconst [Collection, useCollection, createCollectionScope] = createCollection<ToastElement>('Toast');\n\ntype SwipeDirection = 'up' | 'down' | 'left' | 'right';\ntype ToastProviderContextValue = {\n  label: string;\n  duration: number;\n  swipeDirection: SwipeDirection;\n  swipeThreshold: number;\n  toastCount: number;\n  viewport: ToastViewportElement | null;\n  onViewportChange(viewport: ToastViewportElement): void;\n  onToastAdd(): void;\n  onToastRemove(): void;\n  isFocusedToastEscapeKeyDownRef: React.MutableRefObject<boolean>;\n  isClosePausedRef: React.MutableRefObject<boolean>;\n};\n\ntype ScopedProps<P> = P & { __scopeToast?: Scope };\nconst [createToastContext, createToastScope] = createContextScope('Toast', [createCollectionScope]);\nconst [ToastProviderProvider, useToastProviderContext] =\n  createToastContext<ToastProviderContextValue>(PROVIDER_NAME);\n\ninterface ToastProviderProps {\n  children?: React.ReactNode;\n  /**\n   * An author-localized label for each toast. Used to help screen reader users\n   * associate the interruption with a toast.\n   * @defaultValue 'Notification'\n   */\n  label?: string;\n  /**\n   * Time in milliseconds that each toast should remain visible for.\n   * @defaultValue 5000\n   */\n  duration?: number;\n  /**\n   * Direction of pointer swipe that should close the toast.\n   * @defaultValue 'right'\n   */\n  swipeDirection?: SwipeDirection;\n  /**\n   * Distance in pixels that the swipe must pass before a close is triggered.\n   * @defaultValue 50\n   */\n  swipeThreshold?: number;\n}\n\nconst ToastProvider: React.FC<ToastProviderProps> = (props: ScopedProps<ToastProviderProps>) => {\n  const {\n    __scopeToast,\n    label = 'Notification',\n    duration = 5000,\n    swipeDirection = 'right',\n    swipeThreshold = 50,\n    children,\n  } = props;\n  const [viewport, setViewport] = React.useState<ToastViewportElement | null>(null);\n  const [toastCount, setToastCount] = React.useState(0);\n  const isFocusedToastEscapeKeyDownRef = React.useRef(false);\n  const isClosePausedRef = React.useRef(false);\n  return (\n    <Collection.Provider scope={__scopeToast}>\n      <ToastProviderProvider\n        scope={__scopeToast}\n        label={label}\n        duration={duration}\n        swipeDirection={swipeDirection}\n        swipeThreshold={swipeThreshold}\n        toastCount={toastCount}\n        viewport={viewport}\n        onViewportChange={setViewport}\n        onToastAdd={React.useCallback(() => setToastCount((prevCount) => prevCount + 1), [])}\n        onToastRemove={React.useCallback(() => setToastCount((prevCount) => prevCount - 1), [])}\n        isFocusedToastEscapeKeyDownRef={isFocusedToastEscapeKeyDownRef}\n        isClosePausedRef={isClosePausedRef}\n      >\n        {children}\n      </ToastProviderProvider>\n    </Collection.Provider>\n  );\n};\n\nToastProvider.propTypes = {\n  label(props) {\n    if (props.label && typeof props.label === 'string' && !props.label.trim()) {\n      const error = `Invalid prop \\`label\\` supplied to \\`${PROVIDER_NAME}\\`. Expected non-empty \\`string\\`.`;\n      return new Error(error);\n    }\n    return null;\n  },\n};\n\nToastProvider.displayName = PROVIDER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ToastViewport\n * -----------------------------------------------------------------------------------------------*/\n\nconst VIEWPORT_NAME = 'ToastViewport';\nconst VIEWPORT_DEFAULT_HOTKEY = ['F8'];\nconst VIEWPORT_PAUSE = 'toast.viewportPause';\nconst VIEWPORT_RESUME = 'toast.viewportResume';\n\ntype ToastViewportElement = React.ElementRef<typeof Primitive.ol>;\ntype PrimitiveOrderedListProps = Radix.ComponentPropsWithoutRef<typeof Primitive.ol>;\ninterface ToastViewportProps extends PrimitiveOrderedListProps {\n  /**\n   * The keys to use as the keyboard shortcut that will move focus to the toast viewport.\n   * @defaultValue ['F8']\n   */\n  hotkey?: string[];\n  /**\n   * An author-localized label for the toast viewport to provide context for screen reader users\n   * when navigating page landmarks. The available `{hotkey}` placeholder will be replaced for you.\n   * @defaultValue 'Notifications ({hotkey})'\n   */\n  label?: string;\n}\n\nconst ToastViewport = React.forwardRef<ToastViewportElement, ToastViewportProps>(\n  (props: ScopedProps<ToastViewportProps>, forwardedRef) => {\n    const {\n      __scopeToast,\n      hotkey = VIEWPORT_DEFAULT_HOTKEY,\n      label = 'Notifications ({hotkey})',\n      ...viewportProps\n    } = props;\n    const context = useToastProviderContext(VIEWPORT_NAME, __scopeToast);\n    const getItems = useCollection(__scopeToast);\n    const wrapperRef = React.useRef<HTMLDivElement>(null);\n    const headFocusProxyRef = React.useRef<FocusProxyElement>(null);\n    const tailFocusProxyRef = React.useRef<FocusProxyElement>(null);\n    const ref = React.useRef<ToastViewportElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref, context.onViewportChange);\n    const hotkeyLabel = hotkey.join('+').replace(/Key/g, '').replace(/Digit/g, '');\n    const hasToasts = context.toastCount > 0;\n\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        // we use `event.code` as it is consistent regardless of meta keys that were pressed.\n        // for example, `event.key` for `Control+Alt+t` is `†` and `t !== †`\n        const isHotkeyPressed = hotkey.every((key) => (event as any)[key] || event.code === key);\n        if (isHotkeyPressed) ref.current?.focus();\n      };\n      document.addEventListener('keydown', handleKeyDown);\n      return () => document.removeEventListener('keydown', handleKeyDown);\n    }, [hotkey]);\n\n    React.useEffect(() => {\n      const wrapper = wrapperRef.current;\n      const viewport = ref.current;\n      if (hasToasts && wrapper && viewport) {\n        const handlePause = () => {\n          if (!context.isClosePausedRef.current) {\n            const pauseEvent = new CustomEvent(VIEWPORT_PAUSE);\n            viewport.dispatchEvent(pauseEvent);\n            context.isClosePausedRef.current = true;\n          }\n        };\n\n        const handleResume = () => {\n          if (context.isClosePausedRef.current) {\n            const resumeEvent = new CustomEvent(VIEWPORT_RESUME);\n            viewport.dispatchEvent(resumeEvent);\n            context.isClosePausedRef.current = false;\n          }\n        };\n\n        const handleFocusOutResume = (event: FocusEvent) => {\n          const isFocusMovingOutside = !wrapper.contains(event.relatedTarget as HTMLElement);\n          if (isFocusMovingOutside) handleResume();\n        };\n\n        const handlePointerLeaveResume = () => {\n          const isFocusInside = wrapper.contains(document.activeElement);\n          if (!isFocusInside) handleResume();\n        };\n\n        // Toasts are not in the viewport React tree so we need to bind DOM events\n        wrapper.addEventListener('focusin', handlePause);\n        wrapper.addEventListener('focusout', handleFocusOutResume);\n        wrapper.addEventListener('pointermove', handlePause);\n        wrapper.addEventListener('pointerleave', handlePointerLeaveResume);\n        window.addEventListener('blur', handlePause);\n        window.addEventListener('focus', handleResume);\n        return () => {\n          wrapper.removeEventListener('focusin', handlePause);\n          wrapper.removeEventListener('focusout', handleFocusOutResume);\n          wrapper.removeEventListener('pointermove', handlePause);\n          wrapper.removeEventListener('pointerleave', handlePointerLeaveResume);\n          window.removeEventListener('blur', handlePause);\n          window.removeEventListener('focus', handleResume);\n        };\n      }\n    }, [hasToasts, context.isClosePausedRef]);\n\n    const getSortedTabbableCandidates = React.useCallback(\n      ({ tabbingDirection }: { tabbingDirection: 'forwards' | 'backwards' }) => {\n        const toastItems = getItems();\n        const tabbableCandidates = toastItems.map((toastItem) => {\n          const toastNode = toastItem.ref.current!;\n          const toastTabbableCandidates = [toastNode, ...getTabbableCandidates(toastNode)];\n          return tabbingDirection === 'forwards'\n            ? toastTabbableCandidates\n            : toastTabbableCandidates.reverse();\n        });\n        return (\n          tabbingDirection === 'forwards' ? tabbableCandidates.reverse() : tabbableCandidates\n        ).flat();\n      },\n      [getItems]\n    );\n\n    React.useEffect(() => {\n      const viewport = ref.current;\n      // We programmatically manage tabbing as we are unable to influence\n      // the source order with portals, this allows us to reverse the\n      // tab order so that it runs from most recent toast to least\n      if (viewport) {\n        const handleKeyDown = (event: KeyboardEvent) => {\n          const isMetaKey = event.altKey || event.ctrlKey || event.metaKey;\n          const isTabKey = event.key === 'Tab' && !isMetaKey;\n\n          if (isTabKey) {\n            const focusedElement = document.activeElement;\n            const isTabbingBackwards = event.shiftKey;\n            const targetIsViewport = event.target === viewport;\n\n            // If we're back tabbing after jumping to the viewport then we simply\n            // proxy focus out to the preceding document\n            if (targetIsViewport && isTabbingBackwards) {\n              headFocusProxyRef.current?.focus();\n              return;\n            }\n\n            const tabbingDirection = isTabbingBackwards ? 'backwards' : 'forwards';\n            const sortedCandidates = getSortedTabbableCandidates({ tabbingDirection });\n            const index = sortedCandidates.findIndex((candidate) => candidate === focusedElement);\n            if (focusFirst(sortedCandidates.slice(index + 1))) {\n              event.preventDefault();\n            } else {\n              // If we can't focus that means we're at the edges so we\n              // proxy to the corresponding exit point and let the browser handle\n              // tab/shift+tab keypress and implicitly pass focus to the next valid element in the document\n              isTabbingBackwards\n                ? headFocusProxyRef.current?.focus()\n                : tailFocusProxyRef.current?.focus();\n            }\n          }\n        };\n\n        // Toasts are not in the viewport React tree so we need to bind DOM events\n        viewport.addEventListener('keydown', handleKeyDown);\n        return () => viewport.removeEventListener('keydown', handleKeyDown);\n      }\n    }, [getItems, getSortedTabbableCandidates]);\n\n    return (\n      <DismissableLayer.Branch\n        ref={wrapperRef}\n        role=\"region\"\n        aria-label={label.replace('{hotkey}', hotkeyLabel)}\n        // Ensure virtual cursor from landmarks menus triggers focus/blur for pause/resume\n        tabIndex={-1}\n        // incase list has size when empty (e.g. padding), we remove pointer events so\n        // it doesn't prevent interactions with page elements that it overlays\n        style={{ pointerEvents: hasToasts ? undefined : 'none' }}\n      >\n        {hasToasts && (\n          <FocusProxy\n            ref={headFocusProxyRef}\n            onFocusFromOutsideViewport={() => {\n              const tabbableCandidates = getSortedTabbableCandidates({\n                tabbingDirection: 'forwards',\n              });\n              focusFirst(tabbableCandidates);\n            }}\n          />\n        )}\n        {/**\n         * tabindex on the the list so that it can be focused when items are removed. we focus\n         * the list instead of the viewport so it announces number of items remaining.\n         */}\n        <Collection.Slot scope={__scopeToast}>\n          <Primitive.ol tabIndex={-1} {...viewportProps} ref={composedRefs} />\n        </Collection.Slot>\n        {hasToasts && (\n          <FocusProxy\n            ref={tailFocusProxyRef}\n            onFocusFromOutsideViewport={() => {\n              const tabbableCandidates = getSortedTabbableCandidates({\n                tabbingDirection: 'backwards',\n              });\n              focusFirst(tabbableCandidates);\n            }}\n          />\n        )}\n      </DismissableLayer.Branch>\n    );\n  }\n);\n\nToastViewport.displayName = VIEWPORT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst FOCUS_PROXY_NAME = 'ToastFocusProxy';\n\ntype FocusProxyElement = React.ElementRef<typeof VisuallyHidden>;\ntype VisuallyHiddenProps = Radix.ComponentPropsWithoutRef<typeof VisuallyHidden>;\ninterface FocusProxyProps extends VisuallyHiddenProps {\n  onFocusFromOutsideViewport(): void;\n}\n\nconst FocusProxy = React.forwardRef<FocusProxyElement, ScopedProps<FocusProxyProps>>(\n  (props, forwardedRef) => {\n    const { __scopeToast, onFocusFromOutsideViewport, ...proxyProps } = props;\n    const context = useToastProviderContext(FOCUS_PROXY_NAME, __scopeToast);\n\n    return (\n      <VisuallyHidden\n        aria-hidden\n        tabIndex={0}\n        {...proxyProps}\n        ref={forwardedRef}\n        // Avoid page scrolling when focus is on the focus proxy\n        style={{ position: 'fixed' }}\n        onFocus={(event) => {\n          const prevFocusedElement = event.relatedTarget as HTMLElement | null;\n          const isFocusFromOutsideViewport = !context.viewport?.contains(prevFocusedElement);\n          if (isFocusFromOutsideViewport) onFocusFromOutsideViewport();\n        }}\n      />\n    );\n  }\n);\n\nFocusProxy.displayName = FOCUS_PROXY_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * Toast\n * -----------------------------------------------------------------------------------------------*/\n\nconst TOAST_NAME = 'Toast';\nconst TOAST_SWIPE_START = 'toast.swipeStart';\nconst TOAST_SWIPE_MOVE = 'toast.swipeMove';\nconst TOAST_SWIPE_CANCEL = 'toast.swipeCancel';\nconst TOAST_SWIPE_END = 'toast.swipeEnd';\n\ntype ToastElement = ToastImplElement;\ninterface ToastProps extends Omit<ToastImplProps, keyof ToastImplPrivateProps> {\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst Toast = React.forwardRef<ToastElement, ToastProps>(\n  (props: ScopedProps<ToastProps>, forwardedRef) => {\n    const { forceMount, open: openProp, defaultOpen, onOpenChange, ...toastProps } = props;\n    const [open = true, setOpen] = useControllableState({\n      prop: openProp,\n      defaultProp: defaultOpen,\n      onChange: onOpenChange,\n    });\n    return (\n      <Presence present={forceMount || open}>\n        <ToastImpl\n          open={open}\n          {...toastProps}\n          ref={forwardedRef}\n          onClose={() => setOpen(false)}\n          onPause={useCallbackRef(props.onPause)}\n          onResume={useCallbackRef(props.onResume)}\n          onSwipeStart={composeEventHandlers(props.onSwipeStart, (event) => {\n            event.currentTarget.setAttribute('data-swipe', 'start');\n          })}\n          onSwipeMove={composeEventHandlers(props.onSwipeMove, (event) => {\n            const { x, y } = event.detail.delta;\n            event.currentTarget.setAttribute('data-swipe', 'move');\n            event.currentTarget.style.setProperty('--radix-toast-swipe-move-x', `${x}px`);\n            event.currentTarget.style.setProperty('--radix-toast-swipe-move-y', `${y}px`);\n          })}\n          onSwipeCancel={composeEventHandlers(props.onSwipeCancel, (event) => {\n            event.currentTarget.setAttribute('data-swipe', 'cancel');\n            event.currentTarget.style.removeProperty('--radix-toast-swipe-move-x');\n            event.currentTarget.style.removeProperty('--radix-toast-swipe-move-y');\n            event.currentTarget.style.removeProperty('--radix-toast-swipe-end-x');\n            event.currentTarget.style.removeProperty('--radix-toast-swipe-end-y');\n          })}\n          onSwipeEnd={composeEventHandlers(props.onSwipeEnd, (event) => {\n            const { x, y } = event.detail.delta;\n            event.currentTarget.setAttribute('data-swipe', 'end');\n            event.currentTarget.style.removeProperty('--radix-toast-swipe-move-x');\n            event.currentTarget.style.removeProperty('--radix-toast-swipe-move-y');\n            event.currentTarget.style.setProperty('--radix-toast-swipe-end-x', `${x}px`);\n            event.currentTarget.style.setProperty('--radix-toast-swipe-end-y', `${y}px`);\n            setOpen(false);\n          })}\n        />\n      </Presence>\n    );\n  }\n);\n\nToast.displayName = TOAST_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype SwipeEvent = { currentTarget: EventTarget & ToastElement } & Omit<\n  CustomEvent<{ originalEvent: React.PointerEvent; delta: { x: number; y: number } }>,\n  'currentTarget'\n>;\n\nconst [ToastInteractiveProvider, useToastInteractiveContext] = createToastContext(TOAST_NAME, {\n  onClose() {},\n});\n\ntype ToastImplElement = React.ElementRef<typeof Primitive.li>;\ntype DismissableLayerProps = Radix.ComponentPropsWithoutRef<typeof DismissableLayer.Root>;\ntype ToastImplPrivateProps = { open: boolean; onClose(): void };\ntype PrimitiveListItemProps = Radix.ComponentPropsWithoutRef<typeof Primitive.li>;\ninterface ToastImplProps extends ToastImplPrivateProps, PrimitiveListItemProps {\n  type?: 'foreground' | 'background';\n  /**\n   * Time in milliseconds that toast should remain visible for. Overrides value\n   * given to `ToastProvider`.\n   */\n  duration?: number;\n  onEscapeKeyDown?: DismissableLayerProps['onEscapeKeyDown'];\n  onPause?(): void;\n  onResume?(): void;\n  onSwipeStart?(event: SwipeEvent): void;\n  onSwipeMove?(event: SwipeEvent): void;\n  onSwipeCancel?(event: SwipeEvent): void;\n  onSwipeEnd?(event: SwipeEvent): void;\n}\n\nconst ToastImpl = React.forwardRef<ToastImplElement, ToastImplProps>(\n  (props: ScopedProps<ToastImplProps>, forwardedRef) => {\n    const {\n      __scopeToast,\n      type = 'foreground',\n      duration: durationProp,\n      open,\n      onClose,\n      onEscapeKeyDown,\n      onPause,\n      onResume,\n      onSwipeStart,\n      onSwipeMove,\n      onSwipeCancel,\n      onSwipeEnd,\n      ...toastProps\n    } = props;\n    const context = useToastProviderContext(TOAST_NAME, __scopeToast);\n    const [node, setNode] = React.useState<ToastImplElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setNode(node));\n    const pointerStartRef = React.useRef<{ x: number; y: number } | null>(null);\n    const swipeDeltaRef = React.useRef<{ x: number; y: number } | null>(null);\n    const duration = durationProp || context.duration;\n    const closeTimerStartTimeRef = React.useRef(0);\n    const closeTimerRemainingTimeRef = React.useRef(duration);\n    const closeTimerRef = React.useRef(0);\n    const { onToastAdd, onToastRemove } = context;\n    const handleClose = useCallbackRef(() => {\n      // focus viewport if focus is within toast to read the remaining toast\n      // count to SR users and ensure focus isn't lost\n      const isFocusInToast = node?.contains(document.activeElement);\n      if (isFocusInToast) context.viewport?.focus();\n      onClose();\n    });\n\n    const startTimer = React.useCallback(\n      (duration: number) => {\n        if (!duration || duration === Infinity) return;\n        window.clearTimeout(closeTimerRef.current);\n        closeTimerStartTimeRef.current = new Date().getTime();\n        closeTimerRef.current = window.setTimeout(handleClose, duration);\n      },\n      [handleClose]\n    );\n\n    React.useEffect(() => {\n      const viewport = context.viewport;\n      if (viewport) {\n        const handleResume = () => {\n          startTimer(closeTimerRemainingTimeRef.current);\n          onResume?.();\n        };\n        const handlePause = () => {\n          const elapsedTime = new Date().getTime() - closeTimerStartTimeRef.current;\n          closeTimerRemainingTimeRef.current = closeTimerRemainingTimeRef.current - elapsedTime;\n          window.clearTimeout(closeTimerRef.current);\n          onPause?.();\n        };\n        viewport.addEventListener(VIEWPORT_PAUSE, handlePause);\n        viewport.addEventListener(VIEWPORT_RESUME, handleResume);\n        return () => {\n          viewport.removeEventListener(VIEWPORT_PAUSE, handlePause);\n          viewport.removeEventListener(VIEWPORT_RESUME, handleResume);\n        };\n      }\n    }, [context.viewport, duration, onPause, onResume, startTimer]);\n\n    // start timer when toast opens or duration changes.\n    // we include `open` in deps because closed !== unmounted when animating\n    // so it could reopen before being completely unmounted\n    React.useEffect(() => {\n      if (open && !context.isClosePausedRef.current) startTimer(duration);\n    }, [open, duration, context.isClosePausedRef, startTimer]);\n\n    React.useEffect(() => {\n      onToastAdd();\n      return () => onToastRemove();\n    }, [onToastAdd, onToastRemove]);\n\n    const announceTextContent = React.useMemo(() => {\n      return node ? getAnnounceTextContent(node) : null;\n    }, [node]);\n\n    if (!context.viewport) return null;\n\n    return (\n      <>\n        {announceTextContent && (\n          <ToastAnnounce\n            __scopeToast={__scopeToast}\n            // Toasts are always role=status to avoid stuttering issues with role=alert in SRs.\n            role=\"status\"\n            aria-live={type === 'foreground' ? 'assertive' : 'polite'}\n            aria-atomic\n          >\n            {announceTextContent}\n          </ToastAnnounce>\n        )}\n\n        <ToastInteractiveProvider scope={__scopeToast} onClose={handleClose}>\n          {ReactDOM.createPortal(\n            <Collection.ItemSlot scope={__scopeToast}>\n              <DismissableLayer.Root\n                asChild\n                onEscapeKeyDown={composeEventHandlers(onEscapeKeyDown, () => {\n                  if (!context.isFocusedToastEscapeKeyDownRef.current) handleClose();\n                  context.isFocusedToastEscapeKeyDownRef.current = false;\n                })}\n              >\n                <Primitive.li\n                  // Ensure toasts are announced as status list or status when focused\n                  role=\"status\"\n                  aria-live=\"off\"\n                  aria-atomic\n                  tabIndex={0}\n                  data-state={open ? 'open' : 'closed'}\n                  data-swipe-direction={context.swipeDirection}\n                  {...toastProps}\n                  ref={composedRefs}\n                  style={{ userSelect: 'none', touchAction: 'none', ...props.style }}\n                  onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n                    if (event.key !== 'Escape') return;\n                    onEscapeKeyDown?.(event.nativeEvent);\n                    if (!event.nativeEvent.defaultPrevented) {\n                      context.isFocusedToastEscapeKeyDownRef.current = true;\n                      handleClose();\n                    }\n                  })}\n                  onPointerDown={composeEventHandlers(props.onPointerDown, (event) => {\n                    if (event.button !== 0) return;\n                    pointerStartRef.current = { x: event.clientX, y: event.clientY };\n                  })}\n                  onPointerMove={composeEventHandlers(props.onPointerMove, (event) => {\n                    if (!pointerStartRef.current) return;\n                    const x = event.clientX - pointerStartRef.current.x;\n                    const y = event.clientY - pointerStartRef.current.y;\n                    const hasSwipeMoveStarted = Boolean(swipeDeltaRef.current);\n                    const isHorizontalSwipe = ['left', 'right'].includes(context.swipeDirection);\n                    const clamp = ['left', 'up'].includes(context.swipeDirection)\n                      ? Math.min\n                      : Math.max;\n                    const clampedX = isHorizontalSwipe ? clamp(0, x) : 0;\n                    const clampedY = !isHorizontalSwipe ? clamp(0, y) : 0;\n                    const moveStartBuffer = event.pointerType === 'touch' ? 10 : 2;\n                    const delta = { x: clampedX, y: clampedY };\n                    const eventDetail = { originalEvent: event, delta };\n                    if (hasSwipeMoveStarted) {\n                      swipeDeltaRef.current = delta;\n                      handleAndDispatchCustomEvent(TOAST_SWIPE_MOVE, onSwipeMove, eventDetail, {\n                        discrete: false,\n                      });\n                    } else if (isDeltaInDirection(delta, context.swipeDirection, moveStartBuffer)) {\n                      swipeDeltaRef.current = delta;\n                      handleAndDispatchCustomEvent(TOAST_SWIPE_START, onSwipeStart, eventDetail, {\n                        discrete: false,\n                      });\n                      (event.target as HTMLElement).setPointerCapture(event.pointerId);\n                    } else if (Math.abs(x) > moveStartBuffer || Math.abs(y) > moveStartBuffer) {\n                      // User is swiping in wrong direction so we disable swipe gesture\n                      // for the current pointer down interaction\n                      pointerStartRef.current = null;\n                    }\n                  })}\n                  onPointerUp={composeEventHandlers(props.onPointerUp, (event) => {\n                    const delta = swipeDeltaRef.current;\n                    const target = event.target as HTMLElement;\n                    if (target.hasPointerCapture(event.pointerId)) {\n                      target.releasePointerCapture(event.pointerId);\n                    }\n                    swipeDeltaRef.current = null;\n                    pointerStartRef.current = null;\n                    if (delta) {\n                      const toast = event.currentTarget;\n                      const eventDetail = { originalEvent: event, delta };\n                      if (\n                        isDeltaInDirection(delta, context.swipeDirection, context.swipeThreshold)\n                      ) {\n                        handleAndDispatchCustomEvent(TOAST_SWIPE_END, onSwipeEnd, eventDetail, {\n                          discrete: true,\n                        });\n                      } else {\n                        handleAndDispatchCustomEvent(\n                          TOAST_SWIPE_CANCEL,\n                          onSwipeCancel,\n                          eventDetail,\n                          {\n                            discrete: true,\n                          }\n                        );\n                      }\n                      // Prevent click event from triggering on items within the toast when\n                      // pointer up is part of a swipe gesture\n                      toast.addEventListener('click', (event) => event.preventDefault(), {\n                        once: true,\n                      });\n                    }\n                  })}\n                />\n              </DismissableLayer.Root>\n            </Collection.ItemSlot>,\n            context.viewport\n          )}\n        </ToastInteractiveProvider>\n      </>\n    );\n  }\n);\n\nToastImpl.propTypes = {\n  type(props) {\n    if (props.type && !['foreground', 'background'].includes(props.type)) {\n      const error = `Invalid prop \\`type\\` supplied to \\`${TOAST_NAME}\\`. Expected \\`foreground | background\\`.`;\n      return new Error(error);\n    }\n    return null;\n  },\n};\n\n/* -----------------------------------------------------------------------------------------------*/\n\ninterface ToastAnnounceProps\n  extends Omit<React.ComponentPropsWithoutRef<'div'>, 'children'>,\n    ScopedProps<{ children: string[] }> {}\n\nconst ToastAnnounce: React.FC<ToastAnnounceProps> = (props: ScopedProps<ToastAnnounceProps>) => {\n  const { __scopeToast, children, ...announceProps } = props;\n  const context = useToastProviderContext(TOAST_NAME, __scopeToast);\n  const [renderAnnounceText, setRenderAnnounceText] = React.useState(false);\n  const [isAnnounced, setIsAnnounced] = React.useState(false);\n\n  // render text content in the next frame to ensure toast is announced in NVDA\n  useNextFrame(() => setRenderAnnounceText(true));\n\n  // cleanup after announcing\n  React.useEffect(() => {\n    const timer = window.setTimeout(() => setIsAnnounced(true), 1000);\n    return () => window.clearTimeout(timer);\n  }, []);\n\n  return isAnnounced ? null : (\n    <Portal asChild>\n      <VisuallyHidden {...announceProps}>\n        {renderAnnounceText && (\n          <>\n            {context.label} {children}\n          </>\n        )}\n      </VisuallyHidden>\n    </Portal>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * ToastTitle\n * -----------------------------------------------------------------------------------------------*/\n\nconst TITLE_NAME = 'ToastTitle';\n\ntype ToastTitleElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface ToastTitleProps extends PrimitiveDivProps {}\n\nconst ToastTitle = React.forwardRef<ToastTitleElement, ToastTitleProps>(\n  (props: ScopedProps<ToastTitleProps>, forwardedRef) => {\n    const { __scopeToast, ...titleProps } = props;\n    return <Primitive.div {...titleProps} ref={forwardedRef} />;\n  }\n);\n\nToastTitle.displayName = TITLE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ToastDescription\n * -----------------------------------------------------------------------------------------------*/\n\nconst DESCRIPTION_NAME = 'ToastDescription';\n\ntype ToastDescriptionElement = React.ElementRef<typeof Primitive.div>;\ninterface ToastDescriptionProps extends PrimitiveDivProps {}\n\nconst ToastDescription = React.forwardRef<ToastDescriptionElement, ToastDescriptionProps>(\n  (props: ScopedProps<ToastDescriptionProps>, forwardedRef) => {\n    const { __scopeToast, ...descriptionProps } = props;\n    return <Primitive.div {...descriptionProps} ref={forwardedRef} />;\n  }\n);\n\nToastDescription.displayName = DESCRIPTION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ToastAction\n * -----------------------------------------------------------------------------------------------*/\n\nconst ACTION_NAME = 'ToastAction';\n\ntype ToastActionElement = ToastCloseElement;\ninterface ToastActionProps extends ToastCloseProps {\n  /**\n   * A short description for an alternate way to carry out the action. For screen reader users\n   * who will not be able to navigate to the button easily/quickly.\n   * @example <ToastAction altText=\"Goto account settings to upgrade\">Upgrade</ToastAction>\n   * @example <ToastAction altText=\"Undo (Alt+U)\">Undo</ToastAction>\n   */\n  altText: string;\n}\n\nconst ToastAction = React.forwardRef<ToastActionElement, ToastActionProps>(\n  (props: ScopedProps<ToastActionProps>, forwardedRef) => {\n    const { altText, ...actionProps } = props;\n    if (!altText) return null;\n    return (\n      <ToastAnnounceExclude altText={altText} asChild>\n        <ToastClose {...actionProps} ref={forwardedRef} />\n      </ToastAnnounceExclude>\n    );\n  }\n);\n\nToastAction.propTypes = {\n  altText(props) {\n    if (!props.altText) {\n      return new Error(`Missing prop \\`altText\\` expected on \\`${ACTION_NAME}\\``);\n    }\n    return null;\n  },\n};\n\nToastAction.displayName = ACTION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ToastClose\n * -----------------------------------------------------------------------------------------------*/\n\nconst CLOSE_NAME = 'ToastClose';\n\ntype ToastCloseElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface ToastCloseProps extends PrimitiveButtonProps {}\n\nconst ToastClose = React.forwardRef<ToastCloseElement, ToastCloseProps>(\n  (props: ScopedProps<ToastCloseProps>, forwardedRef) => {\n    const { __scopeToast, ...closeProps } = props;\n    const interactiveContext = useToastInteractiveContext(CLOSE_NAME, __scopeToast);\n\n    return (\n      <ToastAnnounceExclude asChild>\n        <Primitive.button\n          type=\"button\"\n          {...closeProps}\n          ref={forwardedRef}\n          onClick={composeEventHandlers(props.onClick, interactiveContext.onClose)}\n        />\n      </ToastAnnounceExclude>\n    );\n  }\n);\n\nToastClose.displayName = CLOSE_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype ToastAnnounceExcludeElement = React.ElementRef<typeof Primitive.div>;\ninterface ToastAnnounceExcludeProps extends PrimitiveDivProps {\n  altText?: string;\n}\n\nconst ToastAnnounceExclude = React.forwardRef<\n  ToastAnnounceExcludeElement,\n  ToastAnnounceExcludeProps\n>((props: ScopedProps<ToastAnnounceExcludeProps>, forwardedRef) => {\n  const { __scopeToast, altText, ...announceExcludeProps } = props;\n\n  return (\n    <Primitive.div\n      data-radix-toast-announce-exclude=\"\"\n      data-radix-toast-announce-alt={altText || undefined}\n      {...announceExcludeProps}\n      ref={forwardedRef}\n    />\n  );\n});\n\nfunction getAnnounceTextContent(container: HTMLElement) {\n  const textContent: string[] = [];\n  const childNodes = Array.from(container.childNodes);\n\n  childNodes.forEach((node) => {\n    if (node.nodeType === node.TEXT_NODE && node.textContent) textContent.push(node.textContent);\n    if (isHTMLElement(node)) {\n      const isHidden = node.ariaHidden || node.hidden || node.style.display === 'none';\n      const isExcluded = node.dataset.radixToastAnnounceExclude === '';\n\n      if (!isHidden) {\n        if (isExcluded) {\n          const altText = node.dataset.radixToastAnnounceAlt;\n          if (altText) textContent.push(altText);\n        } else {\n          textContent.push(...getAnnounceTextContent(node));\n        }\n      }\n    }\n  });\n\n  // We return a collection of text rather than a single concatenated string.\n  // This allows SR VO to naturally pause break between nodes while announcing.\n  return textContent;\n}\n\n/* ---------------------------------------------------------------------------------------------- */\n\nfunction handleAndDispatchCustomEvent<\n  E extends CustomEvent,\n  ReactEvent extends React.SyntheticEvent\n>(\n  name: string,\n  handler: ((event: E) => void) | undefined,\n  detail: { originalEvent: ReactEvent } & (E extends CustomEvent<infer D> ? D : never),\n  { discrete }: { discrete: boolean }\n) {\n  const currentTarget = detail.originalEvent.currentTarget as HTMLElement;\n  const event = new CustomEvent(name, { bubbles: true, cancelable: true, detail });\n  if (handler) currentTarget.addEventListener(name, handler as EventListener, { once: true });\n\n  if (discrete) {\n    dispatchDiscreteCustomEvent(currentTarget, event);\n  } else {\n    currentTarget.dispatchEvent(event);\n  }\n}\n\nconst isDeltaInDirection = (\n  delta: { x: number; y: number },\n  direction: SwipeDirection,\n  threshold = 0\n) => {\n  const deltaX = Math.abs(delta.x);\n  const deltaY = Math.abs(delta.y);\n  const isDeltaX = deltaX > deltaY;\n  if (direction === 'left' || direction === 'right') {\n    return isDeltaX && deltaX > threshold;\n  } else {\n    return !isDeltaX && deltaY > threshold;\n  }\n};\n\nfunction useNextFrame(callback = () => {}) {\n  const fn = useCallbackRef(callback);\n  useLayoutEffect(() => {\n    let raf1 = 0;\n    let raf2 = 0;\n    raf1 = window.requestAnimationFrame(() => (raf2 = window.requestAnimationFrame(fn)));\n    return () => {\n      window.cancelAnimationFrame(raf1);\n      window.cancelAnimationFrame(raf2);\n    };\n  }, [fn]);\n}\n\nfunction isHTMLElement(node: any): node is HTMLElement {\n  return node.nodeType === node.ELEMENT_NODE;\n}\n\n/**\n * Returns a list of potential tabbable candidates.\n *\n * NOTE: This is only a close approximation. For example it doesn't take into account cases like when\n * elements are not visible. This cannot be worked out easily by just reading a property, but rather\n * necessitate runtime knowledge (computed styles, etc). We deal with these cases separately.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker\n * Credit: https://github.com/discord/focus-layers/blob/master/src/util/wrapFocus.tsx#L1\n */\nfunction getTabbableCandidates(container: HTMLElement) {\n  const nodes: HTMLElement[] = [];\n  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: (node: any) => {\n      const isHiddenInput = node.tagName === 'INPUT' && node.type === 'hidden';\n      if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;\n      // `.tabIndex` is not the same as the `tabindex` attribute. It works on the\n      // runtime's understanding of tabbability, so this automatically accounts\n      // for any kind of element that could be tabbed to.\n      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n    },\n  });\n  while (walker.nextNode()) nodes.push(walker.currentNode as HTMLElement);\n  // we do not take into account the order of nodes with positive `tabIndex` as it\n  // hinders accessibility to have tab order different from visual order.\n  return nodes;\n}\n\nfunction focusFirst(candidates: HTMLElement[]) {\n  const previouslyFocusedElement = document.activeElement;\n  return candidates.some((candidate) => {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === previouslyFocusedElement) return true;\n    candidate.focus();\n    return document.activeElement !== previouslyFocusedElement;\n  });\n}\n\nconst Provider = ToastProvider;\nconst Viewport = ToastViewport;\nconst Root = Toast;\nconst Title = ToastTitle;\nconst Description = ToastDescription;\nconst Action = ToastAction;\nconst Close = ToastClose;\n\nexport {\n  createToastScope,\n  //\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastAction,\n  ToastClose,\n  //\n  Provider,\n  Viewport,\n  Root,\n  Title,\n  Description,\n  Action,\n  Close,\n};\nexport type {\n  ToastProviderProps,\n  ToastViewportProps,\n  ToastProps,\n  ToastTitleProps,\n  ToastDescriptionProps,\n  ToastActionProps,\n  ToastCloseProps,\n};\n", "import { clsx } from \"clsx\";\nconst falsyToString = (value)=>typeof value === \"boolean\" ? \"\".concat(value) : value === 0 ? \"0\" : value;\nexport const cx = clsx;\nexport const cva = (base, config)=>{\n    return (props)=>{\n        var ref;\n        if ((config === null || config === void 0 ? void 0 : config.variants) == null) return cx(base, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n        const { variants , defaultVariants  } = config;\n        const getVariantClassNames = Object.keys(variants).map((variant)=>{\n            const variantProp = props === null || props === void 0 ? void 0 : props[variant];\n            const defaultVariantProp = defaultVariants === null || defaultVariants === void 0 ? void 0 : defaultVariants[variant];\n            if (variantProp === null) return null;\n            const variantKey = falsyToString(variantProp) || falsyToString(defaultVariantProp);\n            return variants[variant][variantKey];\n        });\n        const propsWithoutUndefined = props && Object.entries(props).reduce((acc, param)=>{\n            let [key, value] = param;\n            if (value === undefined) {\n                return acc;\n            }\n            acc[key] = value;\n            return acc;\n        }, {});\n        const getCompoundVariantClassNames = config === null || config === void 0 ? void 0 : (ref = config.compoundVariants) === null || ref === void 0 ? void 0 : ref.reduce((acc, param1)=>{\n            let { class: cvClass , className: cvClassName , ...compoundVariantOptions } = param1;\n            return Object.entries(compoundVariantOptions).every((param)=>{\n                let [key, value] = param;\n                return Array.isArray(value) ? value.includes({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                }[key]) : ({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                })[key] === value;\n            }) ? [\n                ...acc,\n                cvClass,\n                cvClassName\n            ] : acc;\n        }, []);\n        return cx(base, getVariantClassNames, getCompoundVariantClassNames, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n    };\n};\n\n\n//# sourceMappingURL=index.mjs.map", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/hooks/useHydrated.ts\"\n);\nimport.meta.hot.lastModified = \"1691945345603.0273\";\n}\n// REMIX HMR END\n\nimport React from \"react\";\n\nlet hydrating: boolean = true;\n\nexport function useHydrated() {\n  const [hydrated, setHydrated] = React.useState<boolean>(() => !hydrating);\n\n  React.useEffect(() => {\n    hydrating = false;\n    setHydrated(true);\n  }, []);\n\n  return hydrated;\n}\n", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/hooks/useToast.ts\"\n);\nimport.meta.hot.lastModified = \"1691945345603.3975\";\n}\n// REMIX HMR END\n\n// Inspired by react-hot-toast library\nimport * as React from \"react\";\n\nimport type { ToastActionElement, ToastProps } from \"~/components/shared/Toast\";\n\nconst TOAST_LIMIT = 1;\nconst TOAST_REMOVE_DELAY = 1000000;\n\ntype ToasterToast = ToastProps & {\n  id: string;\n  title?: React.ReactNode;\n  description?: React.ReactNode;\n  action?: ToastActionElement;\n};\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\"\n} as const;\n\nlet count = 0;\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_VALUE;\n  return count.toString();\n}\n\ntype ActionType = typeof actionTypes;\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"];\n      toast: ToasterToast;\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"];\n      toast: Partial<ToasterToast>;\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"];\n      toastId?: ToasterToast[\"id\"];\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"];\n      toastId?: ToasterToast[\"id\"];\n    };\n\ninterface State {\n  toasts: ToasterToast[];\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>();\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return;\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId);\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId\n    });\n  }, TOAST_REMOVE_DELAY);\n\n  toastTimeouts.set(toastId, timeout);\n};\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT)\n      };\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map(t => (t.id === action.toast.id ? { ...t, ...action.toast } : t))\n      };\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action;\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId);\n      } else {\n        state.toasts.forEach(toast => {\n          addToRemoveQueue(toast.id);\n        });\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map(t =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false\n              }\n            : t\n        )\n      };\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: []\n        };\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter(t => t.id !== action.toastId)\n      };\n  }\n};\n\nconst listeners: Array<(state: State) => void> = [];\n\nlet memoryState: State = { toasts: [] };\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action);\n  listeners.forEach(listener => {\n    listener(memoryState);\n  });\n}\n\ntype Toast = Omit<ToasterToast, \"id\">;\n\nfunction toast({ ...props }: Toast) {\n  const id = genId();\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id }\n    });\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id });\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: open => {\n        if (!open) dismiss();\n      }\n    }\n  });\n\n  return {\n    id: id,\n    dismiss,\n    update\n  };\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState);\n\n  React.useEffect(() => {\n    listeners.push(setState);\n    return () => {\n      const index = listeners.indexOf(setState);\n      if (index > -1) {\n        listeners.splice(index, 1);\n      }\n    };\n  }, [state]);\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId })\n  };\n}\n\nexport { useToast, toast };\n", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/hooks/index.ts\"\n);\nimport.meta.hot.lastModified = \"1691945345602.8633\";\n}\n// REMIX HMR END\n\nimport { useEventListener } from \"./useEventListener\";\nimport { useIsomorphicLayoutEffect } from \"./useIsomorphicLayoutEffect\";\nimport { useOnClickOutside } from \"./useOnClickOutside\";\nimport { useOnScreen } from \"./useOnScreen\";\nimport { useHydrated } from \"./useHydrated\";\nimport { useToast } from \"./useToast\";\n\nexport {\n  useEventListener,\n  useIsomorphicLayoutEffect,\n  useOnClickOutside,\n  useOnScreen,\n  useHydrated,\n  useToast\n};\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/shared/ToastWrapper.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/shared/ToastWrapper.tsx\");\n  import.meta.hot.lastModified = \"1691945345601.8044\";\n}\n// REMIX HMR END\n\n// components\nimport { Toast, ToastClose, ToastDescription, ToastProvider, ToastTitle, ToastViewport } from \"~/components/shared/Toast\";\n\n// hooks\nimport { useToast } from \"~/hooks\";\nexport function ToastWrapper() {\n  _s();\n  const {\n    toasts\n  } = useToast();\n  return <ToastProvider>\n      {toasts.map(function ({\n      id,\n      title,\n      description,\n      action,\n      ...props\n    }) {\n      return <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && <ToastDescription>{description}</ToastDescription>}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>;\n    })}\n      <ToastViewport />\n    </ToastProvider>;\n}\n_s(ToastWrapper, \"1YTCnXrq2qRowe0H/LBWLjtXoYc=\", false, function () {\n  return [useToast];\n});\n_c = ToastWrapper;\nvar _c;\n$RefreshReg$(_c, \"ToastWrapper\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/ClientOnly.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/ClientOnly.tsx\");\n  import.meta.hot.lastModified = \"1691945345599.6785\";\n}\n// REMIX HMR END\n\nimport { useHydrated } from \"~/hooks\";\n/**\n * Render the children only after the JS has loaded client-side. Use an optional\n * fallback component if the JS is not yet loaded.\n *\n * Example: Render a Chart component if JS loads, renders a simple FakeChart\n * component server-side or if there is no JS. The FakeChart can have only the\n * UI without the behavior or be a loading spinner or skeleton.\n * ```tsx\n * return (\n *   <ClientOnly fallback={<FakeChart />}>\n *     {() => <Chart />}\n *   </ClientOnly>\n * );\n * ```\n */\nexport default function ClientOnly({\n  children,\n  fallback = null\n}) {\n  _s();\n  return useHydrated() ? <>{children()}</> : <>{fallback}</>;\n}\n_s(ClientOnly, \"C0k0BFxzCOs2/7WvjhO8H2Jzc4g=\", false, function () {\n  return [useHydrated];\n});\n_c = ClientOnly;\nvar _c;\n$RefreshReg$(_c, \"ClientOnly\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/shared/Sheet.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/shared/Sheet.tsx\");\n  import.meta.hot.lastModified = \"1691945345601.6494\";\n}\n// REMIX HMR END\n\nimport React from \"react\";\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\";\nimport { cva } from \"class-variance-authority\";\n\n// components\nimport Icon from \"~/components/shared/Icon\";\n\n// utils\nimport { cn } from \"~/utils/cn\";\nconst Sheet = SheetPrimitive.Root;\nconst SheetTrigger = SheetPrimitive.Trigger;\nconst SheetClose = SheetPrimitive.Close;\nconst SheetPortal = ({\n  className,\n  ...props\n}) => <SheetPrimitive.Portal className={cn(className)} {...props} />;\n_c = SheetPortal;\nSheetPortal.displayName = SheetPrimitive.Portal.displayName;\nconst SheetOverlay = React.forwardRef(_c2 = ({\n  className,\n  ...props\n}, ref) => <SheetPrimitive.Overlay className={cn(\"fixed inset-0 z-50 bg-background/80 backdrop-blur-sm data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\", className)} {...props} ref={ref} />);\n_c3 = SheetOverlay;\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName;\nconst sheetVariants = cva(\"fixed z-50 gap-4 bg-background p-6 shadow-lg transition !ease-curve data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-150 data-[state=open]:duration-300\", {\n  variants: {\n    side: {\n      top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n      bottom: \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n      left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n      right: \"inset-y-0 right-4 top-4 bottom-4 h-[calc(100%-2rem)] w-[calc(100%-2rem)] border border-solid border-input rounded-xl data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\"\n    }\n  },\n  defaultVariants: {\n    side: \"right\"\n  }\n});\nconst SheetContent = React.forwardRef(_c4 = ({\n  side = \"right\",\n  className,\n  children,\n  ...props\n}, ref) => <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content ref={ref} className={cn(sheetVariants({\n    side\n  }), className)} {...props}>\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <Icon icon=\"cross\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>);\n_c5 = SheetContent;\nSheetContent.displayName = SheetPrimitive.Content.displayName;\nconst SheetHeader = ({\n  className,\n  ...props\n}) => <div className={cn(\"flex flex-col space-y-2 text-center sm:text-left\", className)} {...props} />;\n_c6 = SheetHeader;\nSheetHeader.displayName = \"SheetHeader\";\nconst SheetFooter = ({\n  className,\n  ...props\n}) => <div className={cn(\"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\", className)} {...props} />;\n_c7 = SheetFooter;\nSheetFooter.displayName = \"SheetFooter\";\nconst SheetTitle = React.forwardRef(_c8 = ({\n  className,\n  ...props\n}, ref) => <SheetPrimitive.Title ref={ref} className={cn(\"text-lg font-semibold text-foreground\", className)} {...props} />);\n_c9 = SheetTitle;\nSheetTitle.displayName = SheetPrimitive.Title.displayName;\nconst SheetDescription = React.forwardRef(_c10 = ({\n  className,\n  ...props\n}, ref) => <SheetPrimitive.Description ref={ref} className={cn(\"text-sm text-muted-foreground\", className)} {...props} />);\n_c11 = SheetDescription;\nSheetDescription.displayName = SheetPrimitive.Description.displayName;\nexport { Sheet, SheetTrigger, SheetClose, SheetContent, SheetHeader, SheetFooter, SheetTitle, SheetDescription };\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"SheetPortal\");\n$RefreshReg$(_c2, \"SheetOverlay$React.forwardRef\");\n$RefreshReg$(_c3, \"SheetOverlay\");\n$RefreshReg$(_c4, \"SheetContent$React.forwardRef\");\n$RefreshReg$(_c5, \"SheetContent\");\n$RefreshReg$(_c6, \"SheetHeader\");\n$RefreshReg$(_c7, \"SheetFooter\");\n$RefreshReg$(_c8, \"SheetTitle$React.forwardRef\");\n$RefreshReg$(_c9, \"SheetTitle\");\n$RefreshReg$(_c10, \"SheetDescription$React.forwardRef\");\n$RefreshReg$(_c11, \"SheetDescription\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/shared/Dropdown.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/shared/Dropdown.tsx\");\n  import.meta.hot.lastModified = \"1691945345600.9963\";\n}\n// REMIX HMR END\n\nimport React from \"react\";\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\";\n\n// components\nimport Icon from \"~/components/shared/Icon\";\n\n// utils\nimport { cn } from \"~/utils/cn\";\nconst DropdownMenu = DropdownMenuPrimitive.Root;\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger;\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group;\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal;\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub;\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup;\nconst DropdownMenuSubTrigger = React.forwardRef(_c = ({\n  className,\n  inset,\n  children,\n  ...props\n}, ref) => <DropdownMenuPrimitive.SubTrigger ref={ref} className={cn(\"flex cursor-default select-none items-center rounded-xl px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent\", inset && \"pl-8\", className)} {...props}>\n    {children}\n    <Icon icon=\"chevron-right\" className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>);\n_c2 = DropdownMenuSubTrigger;\nDropdownMenuSubTrigger.displayName = DropdownMenuPrimitive.SubTrigger.displayName;\nconst DropdownMenuSubContent = React.forwardRef(_c3 = ({\n  className,\n  ...props\n}, ref) => <DropdownMenuPrimitive.SubContent ref={ref} className={cn(\"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\", className)} {...props} />);\n_c4 = DropdownMenuSubContent;\nDropdownMenuSubContent.displayName = DropdownMenuPrimitive.SubContent.displayName;\nconst DropdownMenuContent = React.forwardRef(_c5 = ({\n  className,\n  sideOffset = 4,\n  ...props\n}, ref) => <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content ref={ref} sideOffset={sideOffset} className={cn(\"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\", className)} {...props} />\n  </DropdownMenuPrimitive.Portal>);\n_c6 = DropdownMenuContent;\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName;\nconst DropdownMenuItem = React.forwardRef(_c7 = ({\n  className,\n  inset,\n  ...props\n}, ref) => <DropdownMenuPrimitive.Item ref={ref} className={cn(\"relative flex cursor-default select-none items-center rounded-lg px-2 text-sm font-semibold outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\", inset && \"pl-8\", className)} {...props} />);\n_c8 = DropdownMenuItem;\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName;\nconst DropdownMenuLabel = React.forwardRef(_c9 = ({\n  className,\n  inset,\n  ...props\n}, ref) => <DropdownMenuPrimitive.Label ref={ref} className={cn(\"px-2 py-1.5 text-sm font-semibold\", inset && \"pl-8\", className)} {...props} />);\n_c10 = DropdownMenuLabel;\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName;\nconst DropdownMenuSeparator = React.forwardRef(_c11 = ({\n  className,\n  ...props\n}, ref) => <DropdownMenuPrimitive.Separator ref={ref} className={cn(\"-mx-1 my-1 h-px bg-muted\", className)} {...props} />);\n_c12 = DropdownMenuSeparator;\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName;\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}) => {\n  return <span className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)} {...props} />;\n};\n_c13 = DropdownMenuShortcut;\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\";\nexport { DropdownMenu, DropdownMenuTrigger, DropdownMenuContent, DropdownMenuItem, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuShortcut, DropdownMenuGroup, DropdownMenuPortal, DropdownMenuSub, DropdownMenuSubContent, DropdownMenuSubTrigger, DropdownMenuRadioGroup };\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n$RefreshReg$(_c, \"DropdownMenuSubTrigger$React.forwardRef\");\n$RefreshReg$(_c2, \"DropdownMenuSubTrigger\");\n$RefreshReg$(_c3, \"DropdownMenuSubContent$React.forwardRef\");\n$RefreshReg$(_c4, \"DropdownMenuSubContent\");\n$RefreshReg$(_c5, \"DropdownMenuContent$React.forwardRef\");\n$RefreshReg$(_c6, \"DropdownMenuContent\");\n$RefreshReg$(_c7, \"DropdownMenuItem$React.forwardRef\");\n$RefreshReg$(_c8, \"DropdownMenuItem\");\n$RefreshReg$(_c9, \"DropdownMenuLabel$React.forwardRef\");\n$RefreshReg$(_c10, \"DropdownMenuLabel\");\n$RefreshReg$(_c11, \"DropdownMenuSeparator$React.forwardRef\");\n$RefreshReg$(_c12, \"DropdownMenuSeparator\");\n$RefreshReg$(_c13, \"DropdownMenuShortcut\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "export {\n  useDirection,\n  //\n  Provider,\n  //\n  DirectionProvider,\n} from './Direction';\n", "import * as React from 'react';\n\ntype Direction = 'ltr' | 'rtl';\nconst DirectionContext = React.createContext<Direction | undefined>(undefined);\n\n/* -------------------------------------------------------------------------------------------------\n * Direction\n * -----------------------------------------------------------------------------------------------*/\n\ninterface DirectionProviderProps {\n  children?: React.ReactNode;\n  dir: Direction;\n}\nconst DirectionProvider: React.FC<DirectionProviderProps> = (props) => {\n  const { dir, children } = props;\n  return <DirectionContext.Provider value={dir}>{children}</DirectionContext.Provider>;\n};\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction useDirection(localDir?: Direction) {\n  const globalDir = React.useContext(DirectionContext);\n  return localDir || globalDir || 'ltr';\n}\n\nconst Provider = DirectionProvider;\n\nexport {\n  useDirection,\n  //\n  Provider,\n  //\n  DirectionProvider,\n};\n", "const sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n", "import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n      continue;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. This stops `shift()` from taking action, but can\n    // be worked around by calling it again after the `arrow()` if desired.\n    const shouldAddOffset = getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? min$1 - center : max - center : 0;\n    return {\n      [axis]: coords[axis] - alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset + alignmentOffset\n      }\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: diffCoords\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element \u2014\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const overflowAvailableHeight = height - overflow[heightSide];\n      const overflowAvailableWidth = width - overflow[widthSide];\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        const maximumClippingWidth = width - overflow.left - overflow.right;\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        const maximumClippingHeight = height - overflow.top - overflow.bottom;\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n", "function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null ? void 0 : (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const webkit = isWebKit();\n  const css = getComputedStyle(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isWebKit };\n", "import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nconst getElementRects = async function (_ref) {\n  let {\n    reference,\n    floating,\n    strategy\n  } = _ref;\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  return {\n    reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      ...(await getDimensionsFn(floating))\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    clearTimeout(timeoutId);\n    io && io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 100);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          resizeObserver && resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo && cleanupIo();\n    resizeObserver && resizeObserver.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, platform };\n", "import { arrow as arrow$1, computePosition } from '@floating-ui/dom';\nexport { autoPlacement, autoUpdate, computePosition, detectOverflow, flip, getOverflowAncestors, hide, inline, limitShift, offset, platform, shift, size } from '@floating-ui/dom';\nimport * as React from 'react';\nimport { useLayoutEffect, useEffect } from 'react';\nimport * as ReactDOM from 'react-dom';\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => {\n  function isRef(value) {\n    return {}.hasOwnProperty.call(value, 'current');\n  }\n  return {\n    name: 'arrow',\n    options,\n    fn(state) {\n      const {\n        element,\n        padding\n      } = typeof options === 'function' ? options(state) : options;\n      if (element && isRef(element)) {\n        if (element.current != null) {\n          return arrow$1({\n            element: element.current,\n            padding\n          }).fn(state);\n        }\n        return {};\n      } else if (element) {\n        return arrow$1({\n          element,\n          padding\n        }).fn(state);\n      }\n      return {};\n    }\n  };\n};\n\nvar index = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\n\n// Fork of `fast-deep-equal` that only does the comparisons we need and compares\n// functions\nfunction deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (typeof a === 'function' && a.toString() === b.toString()) {\n    return true;\n  }\n  let length, i, keys;\n  if (a && b && typeof a == 'object') {\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;) {\n        if (!deepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (i = length; i-- !== 0;) {\n      if (!{}.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (i = length; i-- !== 0;) {\n      const key = keys[i];\n      if (key === '_owner' && a.$$typeof) {\n        continue;\n      }\n      if (!deepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return a !== a && b !== b;\n}\n\nfunction getDPR(element) {\n  if (typeof window === 'undefined') {\n    return 1;\n  }\n  const win = element.ownerDocument.defaultView || window;\n  return win.devicePixelRatio || 1;\n}\n\nfunction roundByDPR(element, value) {\n  const dpr = getDPR(element);\n  return Math.round(value * dpr) / dpr;\n}\n\nfunction useLatestRef(value) {\n  const ref = React.useRef(value);\n  index(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n\n/**\n * Provides data to position a floating element.\n * @see https://floating-ui.com/docs/react\n */\nfunction useFloating(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform,\n    elements: {\n      reference: externalReference,\n      floating: externalFloating\n    } = {},\n    transform = true,\n    whileElementsMounted,\n    open\n  } = options;\n  const [data, setData] = React.useState({\n    x: 0,\n    y: 0,\n    strategy,\n    placement,\n    middlewareData: {},\n    isPositioned: false\n  });\n  const [latestMiddleware, setLatestMiddleware] = React.useState(middleware);\n  if (!deepEqual(latestMiddleware, middleware)) {\n    setLatestMiddleware(middleware);\n  }\n  const [_reference, _setReference] = React.useState(null);\n  const [_floating, _setFloating] = React.useState(null);\n  const setReference = React.useCallback(node => {\n    if (node != referenceRef.current) {\n      referenceRef.current = node;\n      _setReference(node);\n    }\n  }, [_setReference]);\n  const setFloating = React.useCallback(node => {\n    if (node !== floatingRef.current) {\n      floatingRef.current = node;\n      _setFloating(node);\n    }\n  }, [_setFloating]);\n  const referenceEl = externalReference || _reference;\n  const floatingEl = externalFloating || _floating;\n  const referenceRef = React.useRef(null);\n  const floatingRef = React.useRef(null);\n  const dataRef = React.useRef(data);\n  const whileElementsMountedRef = useLatestRef(whileElementsMounted);\n  const platformRef = useLatestRef(platform);\n  const update = React.useCallback(() => {\n    if (!referenceRef.current || !floatingRef.current) {\n      return;\n    }\n    const config = {\n      placement,\n      strategy,\n      middleware: latestMiddleware\n    };\n    if (platformRef.current) {\n      config.platform = platformRef.current;\n    }\n    computePosition(referenceRef.current, floatingRef.current, config).then(data => {\n      const fullData = {\n        ...data,\n        isPositioned: true\n      };\n      if (isMountedRef.current && !deepEqual(dataRef.current, fullData)) {\n        dataRef.current = fullData;\n        ReactDOM.flushSync(() => {\n          setData(fullData);\n        });\n      }\n    });\n  }, [latestMiddleware, placement, strategy, platformRef]);\n  index(() => {\n    if (open === false && dataRef.current.isPositioned) {\n      dataRef.current.isPositioned = false;\n      setData(data => ({\n        ...data,\n        isPositioned: false\n      }));\n    }\n  }, [open]);\n  const isMountedRef = React.useRef(false);\n  index(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n  index(() => {\n    if (referenceEl) referenceRef.current = referenceEl;\n    if (floatingEl) floatingRef.current = floatingEl;\n    if (referenceEl && floatingEl) {\n      if (whileElementsMountedRef.current) {\n        return whileElementsMountedRef.current(referenceEl, floatingEl, update);\n      } else {\n        update();\n      }\n    }\n  }, [referenceEl, floatingEl, update, whileElementsMountedRef]);\n  const refs = React.useMemo(() => ({\n    reference: referenceRef,\n    floating: floatingRef,\n    setReference,\n    setFloating\n  }), [setReference, setFloating]);\n  const elements = React.useMemo(() => ({\n    reference: referenceEl,\n    floating: floatingEl\n  }), [referenceEl, floatingEl]);\n  const floatingStyles = React.useMemo(() => {\n    const initialStyles = {\n      position: strategy,\n      left: 0,\n      top: 0\n    };\n    if (!elements.floating) {\n      return initialStyles;\n    }\n    const x = roundByDPR(elements.floating, data.x);\n    const y = roundByDPR(elements.floating, data.y);\n    if (transform) {\n      return {\n        ...initialStyles,\n        transform: \"translate(\" + x + \"px, \" + y + \"px)\",\n        ...(getDPR(elements.floating) >= 1.5 && {\n          willChange: 'transform'\n        })\n      };\n    }\n    return {\n      position: strategy,\n      left: x,\n      top: y\n    };\n  }, [strategy, transform, elements.floating, data.x, data.y]);\n  return React.useMemo(() => ({\n    ...data,\n    update,\n    refs,\n    elements,\n    floatingStyles\n  }), [data, update, refs, elements, floatingStyles]);\n}\n\nexport { arrow, useFloating };\n", "export { useSize } from './useSize';\n", "/// <reference types=\"resize-observer-browser\" />\n\nimport * as React from 'react';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\nfunction useSize(element: HTMLElement | null) {\n  const [size, setSize] = React.useState<{ width: number; height: number } | undefined>(undefined);\n\n  useLayoutEffect(() => {\n    if (element) {\n      // provide size as early as possible\n      setSize({ width: element.offsetWidth, height: element.offsetHeight });\n\n      const resizeObserver = new ResizeObserver((entries) => {\n        if (!Array.isArray(entries)) {\n          return;\n        }\n\n        // Since we only observe the one element, we don't need to loop over the\n        // array\n        if (!entries.length) {\n          return;\n        }\n\n        const entry = entries[0];\n        let width: number;\n        let height: number;\n\n        if ('borderBoxSize' in entry) {\n          const borderSizeEntry = entry['borderBoxSize'];\n          // iron out differences between browsers\n          const borderSize = Array.isArray(borderSizeEntry) ? borderSizeEntry[0] : borderSizeEntry;\n          width = borderSize['inlineSize'];\n          height = borderSize['blockSize'];\n        } else {\n          // for browsers that don't support `borderBoxSize`\n          // we calculate it ourselves to get the correct border box.\n          width = element.offsetWidth;\n          height = element.offsetHeight;\n        }\n\n        setSize({ width, height });\n      });\n\n      resizeObserver.observe(element, { box: 'border-box' });\n\n      return () => resizeObserver.unobserve(element);\n    } else {\n      // We only want to reset to `undefined` when the element becomes `null`,\n      // not if it changes to another element.\n      setSize(undefined);\n    }\n  }, [element]);\n\n  return size;\n}\n\nexport { useSize };\n", "export {\n  createPopperScope,\n  //\n  Popper,\n  PopperAnchor,\n  PopperContent,\n  PopperArrow,\n  //\n  Root,\n  Anchor,\n  Content,\n  Arrow,\n  //\n  SIDE_OPTIONS,\n  ALIGN_OPTIONS,\n} from './Popper';\nexport type {\n  PopperProps,\n  PopperAnchorProps,\n  PopperContentProps,\n  PopperArrowProps,\n} from './Popper';\n", "import * as React from 'react';\nimport {\n  useFloating,\n  autoUpdate,\n  offset,\n  shift,\n  limitShift,\n  hide,\n  arrow as floatingUIarrow,\n  flip,\n  size,\n} from '@floating-ui/react-dom';\nimport * as ArrowPrimitive from '@radix-ui/react-arrow';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useSize } from '@radix-ui/react-use-size';\n\nimport type { Placement, Middleware } from '@floating-ui/react-dom';\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\nimport type { Measurable } from '@radix-ui/rect';\n\nconst SIDE_OPTIONS = ['top', 'right', 'bottom', 'left'] as const;\nconst ALIGN_OPTIONS = ['start', 'center', 'end'] as const;\n\ntype Side = typeof SIDE_OPTIONS[number];\ntype Align = typeof ALIGN_OPTIONS[number];\n\n/* -------------------------------------------------------------------------------------------------\n * Popper\n * -----------------------------------------------------------------------------------------------*/\n\nconst POPPER_NAME = 'Popper';\n\ntype ScopedProps<P> = P & { __scopePopper?: Scope };\nconst [createPopperContext, createPopperScope] = createContextScope(POPPER_NAME);\n\ntype PopperContextValue = {\n  anchor: Measurable | null;\n  onAnchorChange(anchor: Measurable | null): void;\n};\nconst [PopperProvider, usePopperContext] = createPopperContext<PopperContextValue>(POPPER_NAME);\n\ninterface PopperProps {\n  children?: React.ReactNode;\n}\nconst Popper: React.FC<PopperProps> = (props: ScopedProps<PopperProps>) => {\n  const { __scopePopper, children } = props;\n  const [anchor, setAnchor] = React.useState<Measurable | null>(null);\n  return (\n    <PopperProvider scope={__scopePopper} anchor={anchor} onAnchorChange={setAnchor}>\n      {children}\n    </PopperProvider>\n  );\n};\n\nPopper.displayName = POPPER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'PopperAnchor';\n\ntype PopperAnchorElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface PopperAnchorProps extends PrimitiveDivProps {\n  virtualRef?: React.RefObject<Measurable>;\n}\n\nconst PopperAnchor = React.forwardRef<PopperAnchorElement, PopperAnchorProps>(\n  (props: ScopedProps<PopperAnchorProps>, forwardedRef) => {\n    const { __scopePopper, virtualRef, ...anchorProps } = props;\n    const context = usePopperContext(ANCHOR_NAME, __scopePopper);\n    const ref = React.useRef<PopperAnchorElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n\n    React.useEffect(() => {\n      // Consumer can anchor the popper to something that isn't\n      // a DOM node e.g. pointer position, so we override the\n      // `anchorRef` with their virtual ref in this case.\n      context.onAnchorChange(virtualRef?.current || ref.current);\n    });\n\n    return virtualRef ? null : <Primitive.div {...anchorProps} ref={composedRefs} />;\n  }\n);\n\nPopperAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'PopperContent';\n\ntype PopperContentContextValue = {\n  placedSide: Side;\n  onArrowChange(arrow: HTMLSpanElement | null): void;\n  arrowX?: number;\n  arrowY?: number;\n  shouldHideArrow: boolean;\n};\n\nconst [PopperContentProvider, useContentContext] =\n  createPopperContext<PopperContentContextValue>(CONTENT_NAME);\n\ntype Boundary = Element | null;\n\ntype PopperContentElement = React.ElementRef<typeof Primitive.div>;\ninterface PopperContentProps extends PrimitiveDivProps {\n  side?: Side;\n  sideOffset?: number;\n  align?: Align;\n  alignOffset?: number;\n  arrowPadding?: number;\n  collisionBoundary?: Boundary | Boundary[];\n  collisionPadding?: number | Partial<Record<Side, number>>;\n  sticky?: 'partial' | 'always';\n  hideWhenDetached?: boolean;\n  avoidCollisions?: boolean;\n  onPlaced?: () => void;\n}\n\nconst PopperContent = React.forwardRef<PopperContentElement, PopperContentProps>(\n  (props: ScopedProps<PopperContentProps>, forwardedRef) => {\n    const {\n      __scopePopper,\n      side = 'bottom',\n      sideOffset = 0,\n      align = 'center',\n      alignOffset = 0,\n      arrowPadding = 0,\n      collisionBoundary = [],\n      collisionPadding: collisionPaddingProp = 0,\n      sticky = 'partial',\n      hideWhenDetached = false,\n      avoidCollisions = true,\n      onPlaced,\n      ...contentProps\n    } = props;\n\n    const context = usePopperContext(CONTENT_NAME, __scopePopper);\n\n    const [content, setContent] = React.useState<HTMLDivElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n\n    const [arrow, setArrow] = React.useState<HTMLSpanElement | null>(null);\n    const arrowSize = useSize(arrow);\n    const arrowWidth = arrowSize?.width ?? 0;\n    const arrowHeight = arrowSize?.height ?? 0;\n\n    const desiredPlacement = (side + (align !== 'center' ? '-' + align : '')) as Placement;\n\n    const collisionPadding =\n      typeof collisionPaddingProp === 'number'\n        ? collisionPaddingProp\n        : { top: 0, right: 0, bottom: 0, left: 0, ...collisionPaddingProp };\n\n    const boundary = Array.isArray(collisionBoundary) ? collisionBoundary : [collisionBoundary];\n    const hasExplicitBoundaries = boundary.length > 0;\n\n    const detectOverflowOptions = {\n      padding: collisionPadding,\n      boundary: boundary.filter(isNotNull),\n      // with `strategy: 'fixed'`, this is the only way to get it to respect boundaries\n      altBoundary: hasExplicitBoundaries,\n    };\n\n    const { refs, floatingStyles, placement, isPositioned, middlewareData } = useFloating({\n      // default to `fixed` strategy so users don't have to pick and we also avoid focus scroll issues\n      strategy: 'fixed',\n      placement: desiredPlacement,\n      whileElementsMounted: autoUpdate,\n      elements: {\n        reference: context.anchor,\n      },\n      middleware: [\n        offset({ mainAxis: sideOffset + arrowHeight, alignmentAxis: alignOffset }),\n        avoidCollisions &&\n          shift({\n            mainAxis: true,\n            crossAxis: false,\n            limiter: sticky === 'partial' ? limitShift() : undefined,\n            ...detectOverflowOptions,\n          }),\n        avoidCollisions && flip({ ...detectOverflowOptions }),\n        size({\n          ...detectOverflowOptions,\n          apply: ({ elements, rects, availableWidth, availableHeight }) => {\n            const { width: anchorWidth, height: anchorHeight } = rects.reference;\n            const contentStyle = elements.floating.style;\n            contentStyle.setProperty('--radix-popper-available-width', `${availableWidth}px`);\n            contentStyle.setProperty('--radix-popper-available-height', `${availableHeight}px`);\n            contentStyle.setProperty('--radix-popper-anchor-width', `${anchorWidth}px`);\n            contentStyle.setProperty('--radix-popper-anchor-height', `${anchorHeight}px`);\n          },\n        }),\n        arrow && floatingUIarrow({ element: arrow, padding: arrowPadding }),\n        transformOrigin({ arrowWidth, arrowHeight }),\n        hideWhenDetached && hide({ strategy: 'referenceHidden' }),\n      ],\n    });\n\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n\n    const handlePlaced = useCallbackRef(onPlaced);\n    useLayoutEffect(() => {\n      if (isPositioned) {\n        handlePlaced?.();\n      }\n    }, [isPositioned, handlePlaced]);\n\n    const arrowX = middlewareData.arrow?.x;\n    const arrowY = middlewareData.arrow?.y;\n    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n\n    const [contentZIndex, setContentZIndex] = React.useState<string>();\n    useLayoutEffect(() => {\n      if (content) setContentZIndex(window.getComputedStyle(content).zIndex);\n    }, [content]);\n\n    return (\n      <div\n        ref={refs.setFloating}\n        data-radix-popper-content-wrapper=\"\"\n        style={{\n          ...floatingStyles,\n          transform: isPositioned ? floatingStyles.transform : 'translate(0, -200%)', // keep off the page when measuring\n          minWidth: 'max-content',\n          zIndex: contentZIndex,\n          ['--radix-popper-transform-origin' as any]: [\n            middlewareData.transformOrigin?.x,\n            middlewareData.transformOrigin?.y,\n          ].join(' '),\n        }}\n        // Floating UI interally calculates logical alignment based the `dir` attribute on\n        // the reference/floating node, we must add this attribute here to ensure\n        // this is calculated when portalled as well as inline.\n        dir={props.dir}\n      >\n        <PopperContentProvider\n          scope={__scopePopper}\n          placedSide={placedSide}\n          onArrowChange={setArrow}\n          arrowX={arrowX}\n          arrowY={arrowY}\n          shouldHideArrow={cannotCenterArrow}\n        >\n          <Primitive.div\n            data-side={placedSide}\n            data-align={placedAlign}\n            {...contentProps}\n            ref={composedRefs}\n            style={{\n              ...contentProps.style,\n              // if the PopperContent hasn't been placed yet (not all measurements done)\n              // we prevent animations so that users's animation don't kick in too early referring wrong sides\n              animation: !isPositioned ? 'none' : undefined,\n              // hide the content if using the hide middleware and should be hidden\n              opacity: middlewareData.hide?.referenceHidden ? 0 : undefined,\n            }}\n          />\n        </PopperContentProvider>\n      </div>\n    );\n  }\n);\n\nPopperContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'PopperArrow';\n\nconst OPPOSITE_SIDE: Record<Side, Side> = {\n  top: 'bottom',\n  right: 'left',\n  bottom: 'top',\n  left: 'right',\n};\n\ntype PopperArrowElement = React.ElementRef<typeof ArrowPrimitive.Root>;\ntype ArrowProps = Radix.ComponentPropsWithoutRef<typeof ArrowPrimitive.Root>;\ninterface PopperArrowProps extends ArrowProps {}\n\nconst PopperArrow = React.forwardRef<PopperArrowElement, PopperArrowProps>(function PopperArrow(\n  props: ScopedProps<PopperArrowProps>,\n  forwardedRef\n) {\n  const { __scopePopper, ...arrowProps } = props;\n  const contentContext = useContentContext(ARROW_NAME, __scopePopper);\n  const baseSide = OPPOSITE_SIDE[contentContext.placedSide];\n\n  return (\n    // we have to use an extra wrapper because `ResizeObserver` (used by `useSize`)\n    // doesn't report size as we'd expect on SVG elements.\n    // it reports their bounding box which is effectively the largest path inside the SVG.\n    <span\n      ref={contentContext.onArrowChange}\n      style={{\n        position: 'absolute',\n        left: contentContext.arrowX,\n        top: contentContext.arrowY,\n        [baseSide]: 0,\n        transformOrigin: {\n          top: '',\n          right: '0 0',\n          bottom: 'center 0',\n          left: '100% 0',\n        }[contentContext.placedSide],\n        transform: {\n          top: 'translateY(100%)',\n          right: 'translateY(50%) rotate(90deg) translateX(-50%)',\n          bottom: `rotate(180deg)`,\n          left: 'translateY(50%) rotate(-90deg) translateX(50%)',\n        }[contentContext.placedSide],\n        visibility: contentContext.shouldHideArrow ? 'hidden' : undefined,\n      }}\n    >\n      <ArrowPrimitive.Root\n        {...arrowProps}\n        ref={forwardedRef}\n        style={{\n          ...arrowProps.style,\n          // ensures the element can be measured correctly (mostly for if SVG)\n          display: 'block',\n        }}\n      />\n    </span>\n  );\n});\n\nPopperArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction isNotNull<T>(value: T | null): value is T {\n  return value !== null;\n}\n\nconst transformOrigin = (options: { arrowWidth: number; arrowHeight: number }): Middleware => ({\n  name: 'transformOrigin',\n  options,\n  fn(data) {\n    const { placement, rects, middlewareData } = data;\n\n    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n    const isArrowHidden = cannotCenterArrow;\n    const arrowWidth = isArrowHidden ? 0 : options.arrowWidth;\n    const arrowHeight = isArrowHidden ? 0 : options.arrowHeight;\n\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n    const noArrowAlign = { start: '0%', center: '50%', end: '100%' }[placedAlign];\n\n    const arrowXCenter = (middlewareData.arrow?.x ?? 0) + arrowWidth / 2;\n    const arrowYCenter = (middlewareData.arrow?.y ?? 0) + arrowHeight / 2;\n\n    let x = '';\n    let y = '';\n\n    if (placedSide === 'bottom') {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${-arrowHeight}px`;\n    } else if (placedSide === 'top') {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${rects.floating.height + arrowHeight}px`;\n    } else if (placedSide === 'right') {\n      x = `${-arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    } else if (placedSide === 'left') {\n      x = `${rects.floating.width + arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    }\n    return { data: { x, y } };\n  },\n});\n\nfunction getSideAndAlignFromPlacement(placement: Placement) {\n  const [side, align = 'center'] = placement.split('-');\n  return [side as Side, align as Align] as const;\n}\n\nconst Root = Popper;\nconst Anchor = PopperAnchor;\nconst Content = PopperContent;\nconst Arrow = PopperArrow;\n\nexport {\n  createPopperScope,\n  //\n  Popper,\n  PopperAnchor,\n  PopperContent,\n  PopperArrow,\n  //\n  Root,\n  Anchor,\n  Content,\n  Arrow,\n  //\n  SIDE_OPTIONS,\n  ALIGN_OPTIONS,\n};\nexport type { PopperProps, PopperAnchorProps, PopperContentProps, PopperArrowProps };\n", "export {\n  createRovingFocusGroupScope,\n  //\n  RovingFocusGroup,\n  RovingFocusGroupItem,\n  //\n  Root,\n  Item,\n} from './RovingFocusGroup';\nexport type { RovingFocusGroupProps, RovingFocusItemProps } from './RovingFocusGroup';\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useId } from '@radix-ui/react-id';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useDirection } from '@radix-ui/react-direction';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\nconst ENTRY_FOCUS = 'rovingFocusGroup.onEntryFocus';\nconst EVENT_OPTIONS = { bubbles: false, cancelable: true };\n\n/* -------------------------------------------------------------------------------------------------\n * RovingFocusGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'RovingFocusGroup';\n\ntype ItemData = { id: string; focusable: boolean; active: boolean };\nconst [Collection, useCollection, createCollectionScope] = createCollection<\n  HTMLSpanElement,\n  ItemData\n>(GROUP_NAME);\n\ntype ScopedProps<P> = P & { __scopeRovingFocusGroup?: Scope };\nconst [createRovingFocusGroupContext, createRovingFocusGroupScope] = createContextScope(\n  GROUP_NAME,\n  [createCollectionScope]\n);\n\ntype Orientation = React.AriaAttributes['aria-orientation'];\ntype Direction = 'ltr' | 'rtl';\n\ninterface RovingFocusGroupOptions {\n  /**\n   * The orientation of the group.\n   * Mainly so arrow navigation is done accordingly (left & right vs. up & down)\n   */\n  orientation?: Orientation;\n  /**\n   * The direction of navigation between items.\n   */\n  dir?: Direction;\n  /**\n   * Whether keyboard navigation should loop around\n   * @defaultValue false\n   */\n  loop?: boolean;\n}\n\ntype RovingContextValue = RovingFocusGroupOptions & {\n  currentTabStopId: string | null;\n  onItemFocus(tabStopId: string): void;\n  onItemShiftTab(): void;\n  onFocusableItemAdd(): void;\n  onFocusableItemRemove(): void;\n};\n\nconst [RovingFocusProvider, useRovingFocusContext] =\n  createRovingFocusGroupContext<RovingContextValue>(GROUP_NAME);\n\ntype RovingFocusGroupElement = RovingFocusGroupImplElement;\ninterface RovingFocusGroupProps extends RovingFocusGroupImplProps {}\n\nconst RovingFocusGroup = React.forwardRef<RovingFocusGroupElement, RovingFocusGroupProps>(\n  (props: ScopedProps<RovingFocusGroupProps>, forwardedRef) => {\n    return (\n      <Collection.Provider scope={props.__scopeRovingFocusGroup}>\n        <Collection.Slot scope={props.__scopeRovingFocusGroup}>\n          <RovingFocusGroupImpl {...props} ref={forwardedRef} />\n        </Collection.Slot>\n      </Collection.Provider>\n    );\n  }\n);\n\nRovingFocusGroup.displayName = GROUP_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype RovingFocusGroupImplElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface RovingFocusGroupImplProps\n  extends Omit<PrimitiveDivProps, 'dir'>,\n    RovingFocusGroupOptions {\n  currentTabStopId?: string | null;\n  defaultCurrentTabStopId?: string;\n  onCurrentTabStopIdChange?: (tabStopId: string | null) => void;\n  onEntryFocus?: (event: Event) => void;\n}\n\nconst RovingFocusGroupImpl = React.forwardRef<\n  RovingFocusGroupImplElement,\n  RovingFocusGroupImplProps\n>((props: ScopedProps<RovingFocusGroupImplProps>, forwardedRef) => {\n  const {\n    __scopeRovingFocusGroup,\n    orientation,\n    loop = false,\n    dir,\n    currentTabStopId: currentTabStopIdProp,\n    defaultCurrentTabStopId,\n    onCurrentTabStopIdChange,\n    onEntryFocus,\n    ...groupProps\n  } = props;\n  const ref = React.useRef<RovingFocusGroupImplElement>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n  const direction = useDirection(dir);\n  const [currentTabStopId = null, setCurrentTabStopId] = useControllableState({\n    prop: currentTabStopIdProp,\n    defaultProp: defaultCurrentTabStopId,\n    onChange: onCurrentTabStopIdChange,\n  });\n  const [isTabbingBackOut, setIsTabbingBackOut] = React.useState(false);\n  const handleEntryFocus = useCallbackRef(onEntryFocus);\n  const getItems = useCollection(__scopeRovingFocusGroup);\n  const isClickFocusRef = React.useRef(false);\n  const [focusableItemsCount, setFocusableItemsCount] = React.useState(0);\n\n  React.useEffect(() => {\n    const node = ref.current;\n    if (node) {\n      node.addEventListener(ENTRY_FOCUS, handleEntryFocus);\n      return () => node.removeEventListener(ENTRY_FOCUS, handleEntryFocus);\n    }\n  }, [handleEntryFocus]);\n\n  return (\n    <RovingFocusProvider\n      scope={__scopeRovingFocusGroup}\n      orientation={orientation}\n      dir={direction}\n      loop={loop}\n      currentTabStopId={currentTabStopId}\n      onItemFocus={React.useCallback(\n        (tabStopId) => setCurrentTabStopId(tabStopId),\n        [setCurrentTabStopId]\n      )}\n      onItemShiftTab={React.useCallback(() => setIsTabbingBackOut(true), [])}\n      onFocusableItemAdd={React.useCallback(\n        () => setFocusableItemsCount((prevCount) => prevCount + 1),\n        []\n      )}\n      onFocusableItemRemove={React.useCallback(\n        () => setFocusableItemsCount((prevCount) => prevCount - 1),\n        []\n      )}\n    >\n      <Primitive.div\n        tabIndex={isTabbingBackOut || focusableItemsCount === 0 ? -1 : 0}\n        data-orientation={orientation}\n        {...groupProps}\n        ref={composedRefs}\n        style={{ outline: 'none', ...props.style }}\n        onMouseDown={composeEventHandlers(props.onMouseDown, () => {\n          isClickFocusRef.current = true;\n        })}\n        onFocus={composeEventHandlers(props.onFocus, (event) => {\n          // We normally wouldn't need this check, because we already check\n          // that the focus is on the current target and not bubbling to it.\n          // We do this because Safari doesn't focus buttons when clicked, and\n          // instead, the wrapper will get focused and not through a bubbling event.\n          const isKeyboardFocus = !isClickFocusRef.current;\n\n          if (event.target === event.currentTarget && isKeyboardFocus && !isTabbingBackOut) {\n            const entryFocusEvent = new CustomEvent(ENTRY_FOCUS, EVENT_OPTIONS);\n            event.currentTarget.dispatchEvent(entryFocusEvent);\n\n            if (!entryFocusEvent.defaultPrevented) {\n              const items = getItems().filter((item) => item.focusable);\n              const activeItem = items.find((item) => item.active);\n              const currentItem = items.find((item) => item.id === currentTabStopId);\n              const candidateItems = [activeItem, currentItem, ...items].filter(\n                Boolean\n              ) as typeof items;\n              const candidateNodes = candidateItems.map((item) => item.ref.current!);\n              focusFirst(candidateNodes);\n            }\n          }\n\n          isClickFocusRef.current = false;\n        })}\n        onBlur={composeEventHandlers(props.onBlur, () => setIsTabbingBackOut(false))}\n      />\n    </RovingFocusProvider>\n  );\n});\n\n/* -------------------------------------------------------------------------------------------------\n * RovingFocusGroupItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'RovingFocusGroupItem';\n\ntype RovingFocusItemElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = Radix.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface RovingFocusItemProps extends PrimitiveSpanProps {\n  tabStopId?: string;\n  focusable?: boolean;\n  active?: boolean;\n}\n\nconst RovingFocusGroupItem = React.forwardRef<RovingFocusItemElement, RovingFocusItemProps>(\n  (props: ScopedProps<RovingFocusItemProps>, forwardedRef) => {\n    const {\n      __scopeRovingFocusGroup,\n      focusable = true,\n      active = false,\n      tabStopId,\n      ...itemProps\n    } = props;\n    const autoId = useId();\n    const id = tabStopId || autoId;\n    const context = useRovingFocusContext(ITEM_NAME, __scopeRovingFocusGroup);\n    const isCurrentTabStop = context.currentTabStopId === id;\n    const getItems = useCollection(__scopeRovingFocusGroup);\n\n    const { onFocusableItemAdd, onFocusableItemRemove } = context;\n\n    React.useEffect(() => {\n      if (focusable) {\n        onFocusableItemAdd();\n        return () => onFocusableItemRemove();\n      }\n    }, [focusable, onFocusableItemAdd, onFocusableItemRemove]);\n\n    return (\n      <Collection.ItemSlot\n        scope={__scopeRovingFocusGroup}\n        id={id}\n        focusable={focusable}\n        active={active}\n      >\n        <Primitive.span\n          tabIndex={isCurrentTabStop ? 0 : -1}\n          data-orientation={context.orientation}\n          {...itemProps}\n          ref={forwardedRef}\n          onMouseDown={composeEventHandlers(props.onMouseDown, (event) => {\n            // We prevent focusing non-focusable items on `mousedown`.\n            // Even though the item has tabIndex={-1}, that only means take it out of the tab order.\n            if (!focusable) event.preventDefault();\n            // Safari doesn't focus a button when clicked so we run our logic on mousedown also\n            else context.onItemFocus(id);\n          })}\n          onFocus={composeEventHandlers(props.onFocus, () => context.onItemFocus(id))}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            if (event.key === 'Tab' && event.shiftKey) {\n              context.onItemShiftTab();\n              return;\n            }\n\n            if (event.target !== event.currentTarget) return;\n\n            const focusIntent = getFocusIntent(event, context.orientation, context.dir);\n\n            if (focusIntent !== undefined) {\n              event.preventDefault();\n              const items = getItems().filter((item) => item.focusable);\n              let candidateNodes = items.map((item) => item.ref.current!);\n\n              if (focusIntent === 'last') candidateNodes.reverse();\n              else if (focusIntent === 'prev' || focusIntent === 'next') {\n                if (focusIntent === 'prev') candidateNodes.reverse();\n                const currentIndex = candidateNodes.indexOf(event.currentTarget);\n                candidateNodes = context.loop\n                  ? wrapArray(candidateNodes, currentIndex + 1)\n                  : candidateNodes.slice(currentIndex + 1);\n              }\n\n              /**\n               * Imperative focus during keydown is risky so we prevent React's batching updates\n               * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n               */\n              setTimeout(() => focusFirst(candidateNodes));\n            }\n          })}\n        />\n      </Collection.ItemSlot>\n    );\n  }\n);\n\nRovingFocusGroupItem.displayName = ITEM_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\n// prettier-ignore\nconst MAP_KEY_TO_FOCUS_INTENT: Record<string, FocusIntent> = {\n  ArrowLeft: 'prev', ArrowUp: 'prev',\n  ArrowRight: 'next', ArrowDown: 'next',\n  PageUp: 'first', Home: 'first',\n  PageDown: 'last', End: 'last',\n};\n\nfunction getDirectionAwareKey(key: string, dir?: Direction) {\n  if (dir !== 'rtl') return key;\n  return key === 'ArrowLeft' ? 'ArrowRight' : key === 'ArrowRight' ? 'ArrowLeft' : key;\n}\n\ntype FocusIntent = 'first' | 'last' | 'prev' | 'next';\n\nfunction getFocusIntent(event: React.KeyboardEvent, orientation?: Orientation, dir?: Direction) {\n  const key = getDirectionAwareKey(event.key, dir);\n  if (orientation === 'vertical' && ['ArrowLeft', 'ArrowRight'].includes(key)) return undefined;\n  if (orientation === 'horizontal' && ['ArrowUp', 'ArrowDown'].includes(key)) return undefined;\n  return MAP_KEY_TO_FOCUS_INTENT[key];\n}\n\nfunction focusFirst(candidates: HTMLElement[]) {\n  const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n  for (const candidate of candidates) {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n    candidate.focus();\n    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n  }\n}\n\n/**\n * Wraps an array around itself at a given start index\n * Example: `wrapArray(['a', 'b', 'c', 'd'], 2) === ['c', 'd', 'a', 'b']`\n */\nfunction wrapArray<T>(array: T[], startIndex: number) {\n  return array.map((_, index) => array[(startIndex + index) % array.length]);\n}\n\nconst Root = RovingFocusGroup;\nconst Item = RovingFocusGroupItem;\n\nexport {\n  createRovingFocusGroupScope,\n  //\n  RovingFocusGroup,\n  RovingFocusGroupItem,\n  //\n  Root,\n  Item,\n};\nexport type { RovingFocusGroupProps, RovingFocusItemProps };\n", "export {\n  createMenuScope,\n  //\n  Menu,\n  MenuAnchor,\n  MenuPortal,\n  MenuContent,\n  MenuGroup,\n  MenuLabel,\n  MenuItem,\n  MenuCheckboxItem,\n  MenuRadioGroup,\n  MenuRadioItem,\n  MenuItemIndicator,\n  MenuSeparator,\n  MenuArrow,\n  MenuSub,\n  MenuSubTrigger,\n  MenuSubContent,\n  //\n  Root,\n  Anchor,\n  Portal,\n  Content,\n  Group,\n  Label,\n  Item,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n  Sub,\n  SubTrigger,\n  SubContent,\n} from './Menu';\nexport type {\n  MenuProps,\n  MenuAnchorProps,\n  MenuPortalProps,\n  MenuContentProps,\n  MenuGroupProps,\n  MenuLabelProps,\n  MenuItemProps,\n  MenuCheckboxItemProps,\n  MenuRadioGroupProps,\n  MenuRadioItemProps,\n  MenuItemIndicatorProps,\n  MenuSeparatorProps,\n  MenuArrowProps,\n  MenuSubProps,\n  MenuSubTriggerProps,\n  MenuSubContentProps,\n} from './Menu';\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { useComposedRefs, composeRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { useId } from '@radix-ui/react-id';\nimport * as PopperPrimitive from '@radix-ui/react-popper';\nimport { createPopperScope } from '@radix-ui/react-popper';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive, dispatchDiscreteCustomEvent } from '@radix-ui/react-primitive';\nimport * as RovingFocusGroup from '@radix-ui/react-roving-focus';\nimport { createRovingFocusGroupScope } from '@radix-ui/react-roving-focus';\nimport { Slot } from '@radix-ui/react-slot';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { hideOthers } from 'aria-hidden';\nimport { RemoveScroll } from 'react-remove-scroll';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\n\nconst SELECTION_KEYS = ['Enter', ' '];\nconst FIRST_KEYS = ['ArrowDown', 'PageUp', 'Home'];\nconst LAST_KEYS = ['ArrowUp', 'PageDown', 'End'];\nconst FIRST_LAST_KEYS = [...FIRST_KEYS, ...LAST_KEYS];\nconst SUB_OPEN_KEYS: Record<Direction, string[]> = {\n  ltr: [...SELECTION_KEYS, 'ArrowRight'],\n  rtl: [...SELECTION_KEYS, 'ArrowLeft'],\n};\nconst SUB_CLOSE_KEYS: Record<Direction, string[]> = {\n  ltr: ['ArrowLeft'],\n  rtl: ['ArrowRight'],\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Menu\n * -----------------------------------------------------------------------------------------------*/\n\nconst MENU_NAME = 'Menu';\n\ntype ItemData = { disabled: boolean; textValue: string };\nconst [Collection, useCollection, createCollectionScope] = createCollection<\n  MenuItemElement,\n  ItemData\n>(MENU_NAME);\n\ntype ScopedProps<P> = P & { __scopeMenu?: Scope };\nconst [createMenuContext, createMenuScope] = createContextScope(MENU_NAME, [\n  createCollectionScope,\n  createPopperScope,\n  createRovingFocusGroupScope,\n]);\nconst usePopperScope = createPopperScope();\nconst useRovingFocusGroupScope = createRovingFocusGroupScope();\n\ntype MenuContextValue = {\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  content: MenuContentElement | null;\n  onContentChange(content: MenuContentElement | null): void;\n};\n\nconst [MenuProvider, useMenuContext] = createMenuContext<MenuContextValue>(MENU_NAME);\n\ntype MenuRootContextValue = {\n  onClose(): void;\n  isUsingKeyboardRef: React.RefObject<boolean>;\n  dir: Direction;\n  modal: boolean;\n};\n\nconst [MenuRootProvider, useMenuRootContext] = createMenuContext<MenuRootContextValue>(MENU_NAME);\n\ninterface MenuProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  onOpenChange?(open: boolean): void;\n  dir?: Direction;\n  modal?: boolean;\n}\n\nconst Menu: React.FC<MenuProps> = (props: ScopedProps<MenuProps>) => {\n  const { __scopeMenu, open = false, children, dir, onOpenChange, modal = true } = props;\n  const popperScope = usePopperScope(__scopeMenu);\n  const [content, setContent] = React.useState<MenuContentElement | null>(null);\n  const isUsingKeyboardRef = React.useRef(false);\n  const handleOpenChange = useCallbackRef(onOpenChange);\n  const direction = useDirection(dir);\n\n  React.useEffect(() => {\n    // Capture phase ensures we set the boolean before any side effects execute\n    // in response to the key or pointer event as they might depend on this value.\n    const handleKeyDown = () => {\n      isUsingKeyboardRef.current = true;\n      document.addEventListener('pointerdown', handlePointer, { capture: true, once: true });\n      document.addEventListener('pointermove', handlePointer, { capture: true, once: true });\n    };\n    const handlePointer = () => (isUsingKeyboardRef.current = false);\n    document.addEventListener('keydown', handleKeyDown, { capture: true });\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, { capture: true });\n      document.removeEventListener('pointerdown', handlePointer, { capture: true });\n      document.removeEventListener('pointermove', handlePointer, { capture: true });\n    };\n  }, []);\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <MenuProvider\n        scope={__scopeMenu}\n        open={open}\n        onOpenChange={handleOpenChange}\n        content={content}\n        onContentChange={setContent}\n      >\n        <MenuRootProvider\n          scope={__scopeMenu}\n          onClose={React.useCallback(() => handleOpenChange(false), [handleOpenChange])}\n          isUsingKeyboardRef={isUsingKeyboardRef}\n          dir={direction}\n          modal={modal}\n        >\n          {children}\n        </MenuRootProvider>\n      </MenuProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nMenu.displayName = MENU_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'MenuAnchor';\n\ntype MenuAnchorElement = React.ElementRef<typeof PopperPrimitive.Anchor>;\ntype PopperAnchorProps = Radix.ComponentPropsWithoutRef<typeof PopperPrimitive.Anchor>;\ninterface MenuAnchorProps extends PopperAnchorProps {}\n\nconst MenuAnchor = React.forwardRef<MenuAnchorElement, MenuAnchorProps>(\n  (props: ScopedProps<MenuAnchorProps>, forwardedRef) => {\n    const { __scopeMenu, ...anchorProps } = props;\n    const popperScope = usePopperScope(__scopeMenu);\n    return <PopperPrimitive.Anchor {...popperScope} {...anchorProps} ref={forwardedRef} />;\n  }\n);\n\nMenuAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'MenuPortal';\n\ntype PortalContextValue = { forceMount?: true };\nconst [PortalProvider, usePortalContext] = createMenuContext<PortalContextValue>(PORTAL_NAME, {\n  forceMount: undefined,\n});\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface MenuPortalProps extends Omit<PortalProps, 'asChild'> {\n  children?: React.ReactNode;\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst MenuPortal: React.FC<MenuPortalProps> = (props: ScopedProps<MenuPortalProps>) => {\n  const { __scopeMenu, forceMount, children, container } = props;\n  const context = useMenuContext(PORTAL_NAME, __scopeMenu);\n  return (\n    <PortalProvider scope={__scopeMenu} forceMount={forceMount}>\n      <Presence present={forceMount || context.open}>\n        <PortalPrimitive asChild container={container}>\n          {children}\n        </PortalPrimitive>\n      </Presence>\n    </PortalProvider>\n  );\n};\n\nMenuPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'MenuContent';\n\ntype MenuContentContextValue = {\n  onItemEnter(event: React.PointerEvent): void;\n  onItemLeave(event: React.PointerEvent): void;\n  onTriggerLeave(event: React.PointerEvent): void;\n  searchRef: React.RefObject<string>;\n  pointerGraceTimerRef: React.MutableRefObject<number>;\n  onPointerGraceIntentChange(intent: GraceIntent | null): void;\n};\nconst [MenuContentProvider, useMenuContentContext] =\n  createMenuContext<MenuContentContextValue>(CONTENT_NAME);\n\ntype MenuContentElement = MenuRootContentTypeElement;\n/**\n * We purposefully don't union MenuRootContent and MenuSubContent props here because\n * they have conflicting prop types. We agreed that we would allow MenuSubContent to\n * accept props that it would just ignore.\n */\ninterface MenuContentProps extends MenuRootContentTypeProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst MenuContent = React.forwardRef<MenuContentElement, MenuContentProps>(\n  (props: ScopedProps<MenuContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeMenu);\n    const { forceMount = portalContext.forceMount, ...contentProps } = props;\n    const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n    const rootContext = useMenuRootContext(CONTENT_NAME, props.__scopeMenu);\n\n    return (\n      <Collection.Provider scope={props.__scopeMenu}>\n        <Presence present={forceMount || context.open}>\n          <Collection.Slot scope={props.__scopeMenu}>\n            {rootContext.modal ? (\n              <MenuRootContentModal {...contentProps} ref={forwardedRef} />\n            ) : (\n              <MenuRootContentNonModal {...contentProps} ref={forwardedRef} />\n            )}\n          </Collection.Slot>\n        </Presence>\n      </Collection.Provider>\n    );\n  }\n);\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype MenuRootContentTypeElement = MenuContentImplElement;\ninterface MenuRootContentTypeProps\n  extends Omit<MenuContentImplProps, keyof MenuContentImplPrivateProps> {}\n\nconst MenuRootContentModal = React.forwardRef<MenuRootContentTypeElement, MenuRootContentTypeProps>(\n  (props: ScopedProps<MenuRootContentTypeProps>, forwardedRef) => {\n    const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n    const ref = React.useRef<MenuRootContentTypeElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n\n    // Hide everything from ARIA except the `MenuContent`\n    React.useEffect(() => {\n      const content = ref.current;\n      if (content) return hideOthers(content);\n    }, []);\n\n    return (\n      <MenuContentImpl\n        {...props}\n        ref={composedRefs}\n        // we make sure we're not trapping once it's been closed\n        // (closed !== unmounted when animating out)\n        trapFocus={context.open}\n        // make sure to only disable pointer events when open\n        // this avoids blocking interactions while animating out\n        disableOutsidePointerEvents={context.open}\n        disableOutsideScroll\n        // When focus is trapped, a `focusout` event may still happen.\n        // We make sure we don't trigger our `onDismiss` in such case.\n        onFocusOutside={composeEventHandlers(\n          props.onFocusOutside,\n          (event) => event.preventDefault(),\n          { checkForDefaultPrevented: false }\n        )}\n        onDismiss={() => context.onOpenChange(false)}\n      />\n    );\n  }\n);\n\nconst MenuRootContentNonModal = React.forwardRef<\n  MenuRootContentTypeElement,\n  MenuRootContentTypeProps\n>((props: ScopedProps<MenuRootContentTypeProps>, forwardedRef) => {\n  const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n  return (\n    <MenuContentImpl\n      {...props}\n      ref={forwardedRef}\n      trapFocus={false}\n      disableOutsidePointerEvents={false}\n      disableOutsideScroll={false}\n      onDismiss={() => context.onOpenChange(false)}\n    />\n  );\n});\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype MenuContentImplElement = React.ElementRef<typeof PopperPrimitive.Content>;\ntype FocusScopeProps = Radix.ComponentPropsWithoutRef<typeof FocusScope>;\ntype DismissableLayerProps = Radix.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype RovingFocusGroupProps = Radix.ComponentPropsWithoutRef<typeof RovingFocusGroup.Root>;\ntype PopperContentProps = Radix.ComponentPropsWithoutRef<typeof PopperPrimitive.Content>;\ntype MenuContentImplPrivateProps = {\n  onOpenAutoFocus?: FocusScopeProps['onMountAutoFocus'];\n  onDismiss?: DismissableLayerProps['onDismiss'];\n  disableOutsidePointerEvents?: DismissableLayerProps['disableOutsidePointerEvents'];\n\n  /**\n   * Whether scrolling outside the `MenuContent` should be prevented\n   * (default: `false`)\n   */\n  disableOutsideScroll?: boolean;\n\n  /**\n   * Whether focus should be trapped within the `MenuContent`\n   * (default: false)\n   */\n  trapFocus?: FocusScopeProps['trapped'];\n};\ninterface MenuContentImplProps\n  extends MenuContentImplPrivateProps,\n    Omit<PopperContentProps, 'dir' | 'onPlaced'> {\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n\n  /**\n   * Whether keyboard navigation should loop around\n   * @defaultValue false\n   */\n  loop?: RovingFocusGroupProps['loop'];\n\n  onEntryFocus?: RovingFocusGroupProps['onEntryFocus'];\n  onEscapeKeyDown?: DismissableLayerProps['onEscapeKeyDown'];\n  onPointerDownOutside?: DismissableLayerProps['onPointerDownOutside'];\n  onFocusOutside?: DismissableLayerProps['onFocusOutside'];\n  onInteractOutside?: DismissableLayerProps['onInteractOutside'];\n}\n\nconst MenuContentImpl = React.forwardRef<MenuContentImplElement, MenuContentImplProps>(\n  (props: ScopedProps<MenuContentImplProps>, forwardedRef) => {\n    const {\n      __scopeMenu,\n      loop = false,\n      trapFocus,\n      onOpenAutoFocus,\n      onCloseAutoFocus,\n      disableOutsidePointerEvents,\n      onEntryFocus,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onInteractOutside,\n      onDismiss,\n      disableOutsideScroll,\n      ...contentProps\n    } = props;\n    const context = useMenuContext(CONTENT_NAME, __scopeMenu);\n    const rootContext = useMenuRootContext(CONTENT_NAME, __scopeMenu);\n    const popperScope = usePopperScope(__scopeMenu);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeMenu);\n    const getItems = useCollection(__scopeMenu);\n    const [currentItemId, setCurrentItemId] = React.useState<string | null>(null);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef, context.onContentChange);\n    const timerRef = React.useRef(0);\n    const searchRef = React.useRef('');\n    const pointerGraceTimerRef = React.useRef(0);\n    const pointerGraceIntentRef = React.useRef<GraceIntent | null>(null);\n    const pointerDirRef = React.useRef<Side>('right');\n    const lastPointerXRef = React.useRef(0);\n\n    const ScrollLockWrapper = disableOutsideScroll ? RemoveScroll : React.Fragment;\n    const scrollLockWrapperProps = disableOutsideScroll\n      ? { as: Slot, allowPinchZoom: true }\n      : undefined;\n\n    const handleTypeaheadSearch = (key: string) => {\n      const search = searchRef.current + key;\n      const items = getItems().filter((item) => !item.disabled);\n      const currentItem = document.activeElement;\n      const currentMatch = items.find((item) => item.ref.current === currentItem)?.textValue;\n      const values = items.map((item) => item.textValue);\n      const nextMatch = getNextMatch(values, search, currentMatch);\n      const newItem = items.find((item) => item.textValue === nextMatch)?.ref.current;\n\n      // Reset `searchRef` 1 second after it was last updated\n      (function updateSearch(value: string) {\n        searchRef.current = value;\n        window.clearTimeout(timerRef.current);\n        if (value !== '') timerRef.current = window.setTimeout(() => updateSearch(''), 1000);\n      })(search);\n\n      if (newItem) {\n        /**\n         * Imperative focus during keydown is risky so we prevent React's batching updates\n         * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n         */\n        setTimeout(() => (newItem as HTMLElement).focus());\n      }\n    };\n\n    React.useEffect(() => {\n      return () => window.clearTimeout(timerRef.current);\n    }, []);\n\n    // Make sure the whole tree has focus guards as our `MenuContent` may be\n    // the last element in the DOM (beacuse of the `Portal`)\n    useFocusGuards();\n\n    const isPointerMovingToSubmenu = React.useCallback((event: React.PointerEvent) => {\n      const isMovingTowards = pointerDirRef.current === pointerGraceIntentRef.current?.side;\n      return isMovingTowards && isPointerInGraceArea(event, pointerGraceIntentRef.current?.area);\n    }, []);\n\n    return (\n      <MenuContentProvider\n        scope={__scopeMenu}\n        searchRef={searchRef}\n        onItemEnter={React.useCallback(\n          (event) => {\n            if (isPointerMovingToSubmenu(event)) event.preventDefault();\n          },\n          [isPointerMovingToSubmenu]\n        )}\n        onItemLeave={React.useCallback(\n          (event) => {\n            if (isPointerMovingToSubmenu(event)) return;\n            contentRef.current?.focus();\n            setCurrentItemId(null);\n          },\n          [isPointerMovingToSubmenu]\n        )}\n        onTriggerLeave={React.useCallback(\n          (event) => {\n            if (isPointerMovingToSubmenu(event)) event.preventDefault();\n          },\n          [isPointerMovingToSubmenu]\n        )}\n        pointerGraceTimerRef={pointerGraceTimerRef}\n        onPointerGraceIntentChange={React.useCallback((intent) => {\n          pointerGraceIntentRef.current = intent;\n        }, [])}\n      >\n        <ScrollLockWrapper {...scrollLockWrapperProps}>\n          <FocusScope\n            asChild\n            trapped={trapFocus}\n            onMountAutoFocus={composeEventHandlers(onOpenAutoFocus, (event) => {\n              // when opening, explicitly focus the content area only and leave\n              // `onEntryFocus` in  control of focusing first item\n              event.preventDefault();\n              contentRef.current?.focus();\n            })}\n            onUnmountAutoFocus={onCloseAutoFocus}\n          >\n            <DismissableLayer\n              asChild\n              disableOutsidePointerEvents={disableOutsidePointerEvents}\n              onEscapeKeyDown={onEscapeKeyDown}\n              onPointerDownOutside={onPointerDownOutside}\n              onFocusOutside={onFocusOutside}\n              onInteractOutside={onInteractOutside}\n              onDismiss={onDismiss}\n            >\n              <RovingFocusGroup.Root\n                asChild\n                {...rovingFocusGroupScope}\n                dir={rootContext.dir}\n                orientation=\"vertical\"\n                loop={loop}\n                currentTabStopId={currentItemId}\n                onCurrentTabStopIdChange={setCurrentItemId}\n                onEntryFocus={composeEventHandlers(onEntryFocus, (event) => {\n                  // only focus first item when using keyboard\n                  if (!rootContext.isUsingKeyboardRef.current) event.preventDefault();\n                })}\n              >\n                <PopperPrimitive.Content\n                  role=\"menu\"\n                  aria-orientation=\"vertical\"\n                  data-state={getOpenState(context.open)}\n                  data-radix-menu-content=\"\"\n                  dir={rootContext.dir}\n                  {...popperScope}\n                  {...contentProps}\n                  ref={composedRefs}\n                  style={{ outline: 'none', ...contentProps.style }}\n                  onKeyDown={composeEventHandlers(contentProps.onKeyDown, (event) => {\n                    // submenu key events bubble through portals. We only care about keys in this menu.\n                    const target = event.target as HTMLElement;\n                    const isKeyDownInside =\n                      target.closest('[data-radix-menu-content]') === event.currentTarget;\n                    const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n                    const isCharacterKey = event.key.length === 1;\n                    if (isKeyDownInside) {\n                      // menus should not be navigated using tab key so we prevent it\n                      if (event.key === 'Tab') event.preventDefault();\n                      if (!isModifierKey && isCharacterKey) handleTypeaheadSearch(event.key);\n                    }\n                    // focus first/last item based on key pressed\n                    const content = contentRef.current;\n                    if (event.target !== content) return;\n                    if (!FIRST_LAST_KEYS.includes(event.key)) return;\n                    event.preventDefault();\n                    const items = getItems().filter((item) => !item.disabled);\n                    const candidateNodes = items.map((item) => item.ref.current!);\n                    if (LAST_KEYS.includes(event.key)) candidateNodes.reverse();\n                    focusFirst(candidateNodes);\n                  })}\n                  onBlur={composeEventHandlers(props.onBlur, (event) => {\n                    // clear search buffer when leaving the menu\n                    if (!event.currentTarget.contains(event.target)) {\n                      window.clearTimeout(timerRef.current);\n                      searchRef.current = '';\n                    }\n                  })}\n                  onPointerMove={composeEventHandlers(\n                    props.onPointerMove,\n                    whenMouse((event) => {\n                      const target = event.target as HTMLElement;\n                      const pointerXHasChanged = lastPointerXRef.current !== event.clientX;\n\n                      // We don't use `event.movementX` for this check because Safari will\n                      // always return `0` on a pointer event.\n                      if (event.currentTarget.contains(target) && pointerXHasChanged) {\n                        const newDir = event.clientX > lastPointerXRef.current ? 'right' : 'left';\n                        pointerDirRef.current = newDir;\n                        lastPointerXRef.current = event.clientX;\n                      }\n                    })\n                  )}\n                />\n              </RovingFocusGroup.Root>\n            </DismissableLayer>\n          </FocusScope>\n        </ScrollLockWrapper>\n      </MenuContentProvider>\n    );\n  }\n);\n\nMenuContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'MenuGroup';\n\ntype MenuGroupElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface MenuGroupProps extends PrimitiveDivProps {}\n\nconst MenuGroup = React.forwardRef<MenuGroupElement, MenuGroupProps>(\n  (props: ScopedProps<MenuGroupProps>, forwardedRef) => {\n    const { __scopeMenu, ...groupProps } = props;\n    return <Primitive.div role=\"group\" {...groupProps} ref={forwardedRef} />;\n  }\n);\n\nMenuGroup.displayName = GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst LABEL_NAME = 'MenuLabel';\n\ntype MenuLabelElement = React.ElementRef<typeof Primitive.div>;\ninterface MenuLabelProps extends PrimitiveDivProps {}\n\nconst MenuLabel = React.forwardRef<MenuLabelElement, MenuLabelProps>(\n  (props: ScopedProps<MenuLabelProps>, forwardedRef) => {\n    const { __scopeMenu, ...labelProps } = props;\n    return <Primitive.div {...labelProps} ref={forwardedRef} />;\n  }\n);\n\nMenuLabel.displayName = LABEL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'MenuItem';\nconst ITEM_SELECT = 'menu.itemSelect';\n\ntype MenuItemElement = MenuItemImplElement;\ninterface MenuItemProps extends Omit<MenuItemImplProps, 'onSelect'> {\n  onSelect?: (event: Event) => void;\n}\n\nconst MenuItem = React.forwardRef<MenuItemElement, MenuItemProps>(\n  (props: ScopedProps<MenuItemProps>, forwardedRef) => {\n    const { disabled = false, onSelect, ...itemProps } = props;\n    const ref = React.useRef<HTMLDivElement>(null);\n    const rootContext = useMenuRootContext(ITEM_NAME, props.__scopeMenu);\n    const contentContext = useMenuContentContext(ITEM_NAME, props.__scopeMenu);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const isPointerDownRef = React.useRef(false);\n\n    const handleSelect = () => {\n      const menuItem = ref.current;\n      if (!disabled && menuItem) {\n        const itemSelectEvent = new CustomEvent(ITEM_SELECT, { bubbles: true, cancelable: true });\n        menuItem.addEventListener(ITEM_SELECT, (event) => onSelect?.(event), { once: true });\n        dispatchDiscreteCustomEvent(menuItem, itemSelectEvent);\n        if (itemSelectEvent.defaultPrevented) {\n          isPointerDownRef.current = false;\n        } else {\n          rootContext.onClose();\n        }\n      }\n    };\n\n    return (\n      <MenuItemImpl\n        {...itemProps}\n        ref={composedRefs}\n        disabled={disabled}\n        onClick={composeEventHandlers(props.onClick, handleSelect)}\n        onPointerDown={(event) => {\n          props.onPointerDown?.(event);\n          isPointerDownRef.current = true;\n        }}\n        onPointerUp={composeEventHandlers(props.onPointerUp, (event) => {\n          // Pointer down can move to a different menu item which should activate it on pointer up.\n          // We dispatch a click for selection to allow composition with click based triggers and to\n          // prevent Firefox from getting stuck in text selection mode when the menu closes.\n          if (!isPointerDownRef.current) event.currentTarget?.click();\n        })}\n        onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n          const isTypingAhead = contentContext.searchRef.current !== '';\n          if (disabled || (isTypingAhead && event.key === ' ')) return;\n          if (SELECTION_KEYS.includes(event.key)) {\n            event.currentTarget.click();\n            /**\n             * We prevent default browser behaviour for selection keys as they should trigger\n             * a selection only:\n             * - prevents space from scrolling the page.\n             * - if keydown causes focus to move, prevents keydown from firing on the new target.\n             */\n            event.preventDefault();\n          }\n        })}\n      />\n    );\n  }\n);\n\nMenuItem.displayName = ITEM_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype MenuItemImplElement = React.ElementRef<typeof Primitive.div>;\ninterface MenuItemImplProps extends PrimitiveDivProps {\n  disabled?: boolean;\n  textValue?: string;\n}\n\nconst MenuItemImpl = React.forwardRef<MenuItemImplElement, MenuItemImplProps>(\n  (props: ScopedProps<MenuItemImplProps>, forwardedRef) => {\n    const { __scopeMenu, disabled = false, textValue, ...itemProps } = props;\n    const contentContext = useMenuContentContext(ITEM_NAME, __scopeMenu);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeMenu);\n    const ref = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const [isFocused, setIsFocused] = React.useState(false);\n\n    // get the item's `.textContent` as default strategy for typeahead `textValue`\n    const [textContent, setTextContent] = React.useState('');\n    React.useEffect(() => {\n      const menuItem = ref.current;\n      if (menuItem) {\n        setTextContent((menuItem.textContent ?? '').trim());\n      }\n    }, [itemProps.children]);\n\n    return (\n      <Collection.ItemSlot\n        scope={__scopeMenu}\n        disabled={disabled}\n        textValue={textValue ?? textContent}\n      >\n        <RovingFocusGroup.Item asChild {...rovingFocusGroupScope} focusable={!disabled}>\n          <Primitive.div\n            role=\"menuitem\"\n            data-highlighted={isFocused ? '' : undefined}\n            aria-disabled={disabled || undefined}\n            data-disabled={disabled ? '' : undefined}\n            {...itemProps}\n            ref={composedRefs}\n            /**\n             * We focus items on `pointerMove` to achieve the following:\n             *\n             * - Mouse over an item (it focuses)\n             * - Leave mouse where it is and use keyboard to focus a different item\n             * - Wiggle mouse without it leaving previously focused item\n             * - Previously focused item should re-focus\n             *\n             * If we used `mouseOver`/`mouseEnter` it would not re-focus when the mouse\n             * wiggles. This is to match native menu implementation.\n             */\n            onPointerMove={composeEventHandlers(\n              props.onPointerMove,\n              whenMouse((event) => {\n                if (disabled) {\n                  contentContext.onItemLeave(event);\n                } else {\n                  contentContext.onItemEnter(event);\n                  if (!event.defaultPrevented) {\n                    const item = event.currentTarget;\n                    item.focus();\n                  }\n                }\n              })\n            )}\n            onPointerLeave={composeEventHandlers(\n              props.onPointerLeave,\n              whenMouse((event) => contentContext.onItemLeave(event))\n            )}\n            onFocus={composeEventHandlers(props.onFocus, () => setIsFocused(true))}\n            onBlur={composeEventHandlers(props.onBlur, () => setIsFocused(false))}\n          />\n        </RovingFocusGroup.Item>\n      </Collection.ItemSlot>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * MenuCheckboxItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst CHECKBOX_ITEM_NAME = 'MenuCheckboxItem';\n\ntype MenuCheckboxItemElement = MenuItemElement;\n\ntype CheckedState = boolean | 'indeterminate';\n\ninterface MenuCheckboxItemProps extends MenuItemProps {\n  checked?: CheckedState;\n  // `onCheckedChange` can never be called with `\"indeterminate\"` from the inside\n  onCheckedChange?: (checked: boolean) => void;\n}\n\nconst MenuCheckboxItem = React.forwardRef<MenuCheckboxItemElement, MenuCheckboxItemProps>(\n  (props: ScopedProps<MenuCheckboxItemProps>, forwardedRef) => {\n    const { checked = false, onCheckedChange, ...checkboxItemProps } = props;\n    return (\n      <ItemIndicatorProvider scope={props.__scopeMenu} checked={checked}>\n        <MenuItem\n          role=\"menuitemcheckbox\"\n          aria-checked={isIndeterminate(checked) ? 'mixed' : checked}\n          {...checkboxItemProps}\n          ref={forwardedRef}\n          data-state={getCheckedState(checked)}\n          onSelect={composeEventHandlers(\n            checkboxItemProps.onSelect,\n            () => onCheckedChange?.(isIndeterminate(checked) ? true : !checked),\n            { checkForDefaultPrevented: false }\n          )}\n        />\n      </ItemIndicatorProvider>\n    );\n  }\n);\n\nMenuCheckboxItem.displayName = CHECKBOX_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuRadioGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_GROUP_NAME = 'MenuRadioGroup';\n\nconst [RadioGroupProvider, useRadioGroupContext] = createMenuContext<MenuRadioGroupProps>(\n  RADIO_GROUP_NAME,\n  { value: undefined, onValueChange: () => {} }\n);\n\ntype MenuRadioGroupElement = React.ElementRef<typeof MenuGroup>;\ninterface MenuRadioGroupProps extends MenuGroupProps {\n  value?: string;\n  onValueChange?: (value: string) => void;\n}\n\nconst MenuRadioGroup = React.forwardRef<MenuRadioGroupElement, MenuRadioGroupProps>(\n  (props: ScopedProps<MenuRadioGroupProps>, forwardedRef) => {\n    const { value, onValueChange, ...groupProps } = props;\n    const handleValueChange = useCallbackRef(onValueChange);\n    return (\n      <RadioGroupProvider scope={props.__scopeMenu} value={value} onValueChange={handleValueChange}>\n        <MenuGroup {...groupProps} ref={forwardedRef} />\n      </RadioGroupProvider>\n    );\n  }\n);\n\nMenuRadioGroup.displayName = RADIO_GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuRadioItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_ITEM_NAME = 'MenuRadioItem';\n\ntype MenuRadioItemElement = React.ElementRef<typeof MenuItem>;\ninterface MenuRadioItemProps extends MenuItemProps {\n  value: string;\n}\n\nconst MenuRadioItem = React.forwardRef<MenuRadioItemElement, MenuRadioItemProps>(\n  (props: ScopedProps<MenuRadioItemProps>, forwardedRef) => {\n    const { value, ...radioItemProps } = props;\n    const context = useRadioGroupContext(RADIO_ITEM_NAME, props.__scopeMenu);\n    const checked = value === context.value;\n    return (\n      <ItemIndicatorProvider scope={props.__scopeMenu} checked={checked}>\n        <MenuItem\n          role=\"menuitemradio\"\n          aria-checked={checked}\n          {...radioItemProps}\n          ref={forwardedRef}\n          data-state={getCheckedState(checked)}\n          onSelect={composeEventHandlers(\n            radioItemProps.onSelect,\n            () => context.onValueChange?.(value),\n            { checkForDefaultPrevented: false }\n          )}\n        />\n      </ItemIndicatorProvider>\n    );\n  }\n);\n\nMenuRadioItem.displayName = RADIO_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuItemIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_INDICATOR_NAME = 'MenuItemIndicator';\n\ntype CheckboxContextValue = { checked: CheckedState };\n\nconst [ItemIndicatorProvider, useItemIndicatorContext] = createMenuContext<CheckboxContextValue>(\n  ITEM_INDICATOR_NAME,\n  { checked: false }\n);\n\ntype MenuItemIndicatorElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = Radix.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface MenuItemIndicatorProps extends PrimitiveSpanProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst MenuItemIndicator = React.forwardRef<MenuItemIndicatorElement, MenuItemIndicatorProps>(\n  (props: ScopedProps<MenuItemIndicatorProps>, forwardedRef) => {\n    const { __scopeMenu, forceMount, ...itemIndicatorProps } = props;\n    const indicatorContext = useItemIndicatorContext(ITEM_INDICATOR_NAME, __scopeMenu);\n    return (\n      <Presence\n        present={\n          forceMount ||\n          isIndeterminate(indicatorContext.checked) ||\n          indicatorContext.checked === true\n        }\n      >\n        <Primitive.span\n          {...itemIndicatorProps}\n          ref={forwardedRef}\n          data-state={getCheckedState(indicatorContext.checked)}\n        />\n      </Presence>\n    );\n  }\n);\n\nMenuItemIndicator.displayName = ITEM_INDICATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuSeparator\n * -----------------------------------------------------------------------------------------------*/\n\nconst SEPARATOR_NAME = 'MenuSeparator';\n\ntype MenuSeparatorElement = React.ElementRef<typeof Primitive.div>;\ninterface MenuSeparatorProps extends PrimitiveDivProps {}\n\nconst MenuSeparator = React.forwardRef<MenuSeparatorElement, MenuSeparatorProps>(\n  (props: ScopedProps<MenuSeparatorProps>, forwardedRef) => {\n    const { __scopeMenu, ...separatorProps } = props;\n    return (\n      <Primitive.div\n        role=\"separator\"\n        aria-orientation=\"horizontal\"\n        {...separatorProps}\n        ref={forwardedRef}\n      />\n    );\n  }\n);\n\nMenuSeparator.displayName = SEPARATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'MenuArrow';\n\ntype MenuArrowElement = React.ElementRef<typeof PopperPrimitive.Arrow>;\ntype PopperArrowProps = Radix.ComponentPropsWithoutRef<typeof PopperPrimitive.Arrow>;\ninterface MenuArrowProps extends PopperArrowProps {}\n\nconst MenuArrow = React.forwardRef<MenuArrowElement, MenuArrowProps>(\n  (props: ScopedProps<MenuArrowProps>, forwardedRef) => {\n    const { __scopeMenu, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopeMenu);\n    return <PopperPrimitive.Arrow {...popperScope} {...arrowProps} ref={forwardedRef} />;\n  }\n);\n\nMenuArrow.displayName = ARROW_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuSub\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_NAME = 'MenuSub';\n\ntype MenuSubContextValue = {\n  contentId: string;\n  triggerId: string;\n  trigger: MenuSubTriggerElement | null;\n  onTriggerChange(trigger: MenuSubTriggerElement | null): void;\n};\n\nconst [MenuSubProvider, useMenuSubContext] = createMenuContext<MenuSubContextValue>(SUB_NAME);\n\ninterface MenuSubProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  onOpenChange?(open: boolean): void;\n}\n\nconst MenuSub: React.FC<MenuSubProps> = (props: ScopedProps<MenuSubProps>) => {\n  const { __scopeMenu, children, open = false, onOpenChange } = props;\n  const parentMenuContext = useMenuContext(SUB_NAME, __scopeMenu);\n  const popperScope = usePopperScope(__scopeMenu);\n  const [trigger, setTrigger] = React.useState<MenuSubTriggerElement | null>(null);\n  const [content, setContent] = React.useState<MenuContentElement | null>(null);\n  const handleOpenChange = useCallbackRef(onOpenChange);\n\n  // Prevent the parent menu from reopening with open submenus.\n  React.useEffect(() => {\n    if (parentMenuContext.open === false) handleOpenChange(false);\n    return () => handleOpenChange(false);\n  }, [parentMenuContext.open, handleOpenChange]);\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <MenuProvider\n        scope={__scopeMenu}\n        open={open}\n        onOpenChange={handleOpenChange}\n        content={content}\n        onContentChange={setContent}\n      >\n        <MenuSubProvider\n          scope={__scopeMenu}\n          contentId={useId()}\n          triggerId={useId()}\n          trigger={trigger}\n          onTriggerChange={setTrigger}\n        >\n          {children}\n        </MenuSubProvider>\n      </MenuProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nMenuSub.displayName = SUB_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuSubTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_TRIGGER_NAME = 'MenuSubTrigger';\n\ntype MenuSubTriggerElement = MenuItemImplElement;\ninterface MenuSubTriggerProps extends MenuItemImplProps {}\n\nconst MenuSubTrigger = React.forwardRef<MenuSubTriggerElement, MenuSubTriggerProps>(\n  (props: ScopedProps<MenuSubTriggerProps>, forwardedRef) => {\n    const context = useMenuContext(SUB_TRIGGER_NAME, props.__scopeMenu);\n    const rootContext = useMenuRootContext(SUB_TRIGGER_NAME, props.__scopeMenu);\n    const subContext = useMenuSubContext(SUB_TRIGGER_NAME, props.__scopeMenu);\n    const contentContext = useMenuContentContext(SUB_TRIGGER_NAME, props.__scopeMenu);\n    const openTimerRef = React.useRef<number | null>(null);\n    const { pointerGraceTimerRef, onPointerGraceIntentChange } = contentContext;\n    const scope = { __scopeMenu: props.__scopeMenu };\n\n    const clearOpenTimer = React.useCallback(() => {\n      if (openTimerRef.current) window.clearTimeout(openTimerRef.current);\n      openTimerRef.current = null;\n    }, []);\n\n    React.useEffect(() => clearOpenTimer, [clearOpenTimer]);\n\n    React.useEffect(() => {\n      const pointerGraceTimer = pointerGraceTimerRef.current;\n      return () => {\n        window.clearTimeout(pointerGraceTimer);\n        onPointerGraceIntentChange(null);\n      };\n    }, [pointerGraceTimerRef, onPointerGraceIntentChange]);\n\n    return (\n      <MenuAnchor asChild {...scope}>\n        <MenuItemImpl\n          id={subContext.triggerId}\n          aria-haspopup=\"menu\"\n          aria-expanded={context.open}\n          aria-controls={subContext.contentId}\n          data-state={getOpenState(context.open)}\n          {...props}\n          ref={composeRefs(forwardedRef, subContext.onTriggerChange)}\n          // This is redundant for mouse users but we cannot determine pointer type from\n          // click event and we cannot use pointerup event (see git history for reasons why)\n          onClick={(event) => {\n            props.onClick?.(event);\n            if (props.disabled || event.defaultPrevented) return;\n            /**\n             * We manually focus because iOS Safari doesn't always focus on click (e.g. buttons)\n             * and we rely heavily on `onFocusOutside` for submenus to close when switching\n             * between separate submenus.\n             */\n            event.currentTarget.focus();\n            if (!context.open) context.onOpenChange(true);\n          }}\n          onPointerMove={composeEventHandlers(\n            props.onPointerMove,\n            whenMouse((event) => {\n              contentContext.onItemEnter(event);\n              if (event.defaultPrevented) return;\n              if (!props.disabled && !context.open && !openTimerRef.current) {\n                contentContext.onPointerGraceIntentChange(null);\n                openTimerRef.current = window.setTimeout(() => {\n                  context.onOpenChange(true);\n                  clearOpenTimer();\n                }, 100);\n              }\n            })\n          )}\n          onPointerLeave={composeEventHandlers(\n            props.onPointerLeave,\n            whenMouse((event) => {\n              clearOpenTimer();\n\n              const contentRect = context.content?.getBoundingClientRect();\n              if (contentRect) {\n                // TODO: make sure to update this when we change positioning logic\n                const side = context.content?.dataset.side as Side;\n                const rightSide = side === 'right';\n                const bleed = rightSide ? -5 : +5;\n                const contentNearEdge = contentRect[rightSide ? 'left' : 'right'];\n                const contentFarEdge = contentRect[rightSide ? 'right' : 'left'];\n\n                contentContext.onPointerGraceIntentChange({\n                  area: [\n                    // Apply a bleed on clientX to ensure that our exit point is\n                    // consistently within polygon bounds\n                    { x: event.clientX + bleed, y: event.clientY },\n                    { x: contentNearEdge, y: contentRect.top },\n                    { x: contentFarEdge, y: contentRect.top },\n                    { x: contentFarEdge, y: contentRect.bottom },\n                    { x: contentNearEdge, y: contentRect.bottom },\n                  ],\n                  side,\n                });\n\n                window.clearTimeout(pointerGraceTimerRef.current);\n                pointerGraceTimerRef.current = window.setTimeout(\n                  () => contentContext.onPointerGraceIntentChange(null),\n                  300\n                );\n              } else {\n                contentContext.onTriggerLeave(event);\n                if (event.defaultPrevented) return;\n\n                // There's 100ms where the user may leave an item before the submenu was opened.\n                contentContext.onPointerGraceIntentChange(null);\n              }\n            })\n          )}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            const isTypingAhead = contentContext.searchRef.current !== '';\n            if (props.disabled || (isTypingAhead && event.key === ' ')) return;\n            if (SUB_OPEN_KEYS[rootContext.dir].includes(event.key)) {\n              context.onOpenChange(true);\n              // The trigger may hold focus if opened via pointer interaction\n              // so we ensure content is given focus again when switching to keyboard.\n              context.content?.focus();\n              // prevent window from scrolling\n              event.preventDefault();\n            }\n          })}\n        />\n      </MenuAnchor>\n    );\n  }\n);\n\nMenuSubTrigger.displayName = SUB_TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * MenuSubContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_CONTENT_NAME = 'MenuSubContent';\n\ntype MenuSubContentElement = MenuContentImplElement;\ninterface MenuSubContentProps\n  extends Omit<\n    MenuContentImplProps,\n    keyof MenuContentImplPrivateProps | 'onCloseAutoFocus' | 'onEntryFocus' | 'side' | 'align'\n  > {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst MenuSubContent = React.forwardRef<MenuSubContentElement, MenuSubContentProps>(\n  (props: ScopedProps<MenuSubContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeMenu);\n    const { forceMount = portalContext.forceMount, ...subContentProps } = props;\n    const context = useMenuContext(CONTENT_NAME, props.__scopeMenu);\n    const rootContext = useMenuRootContext(CONTENT_NAME, props.__scopeMenu);\n    const subContext = useMenuSubContext(SUB_CONTENT_NAME, props.__scopeMenu);\n    const ref = React.useRef<MenuSubContentElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    return (\n      <Collection.Provider scope={props.__scopeMenu}>\n        <Presence present={forceMount || context.open}>\n          <Collection.Slot scope={props.__scopeMenu}>\n            <MenuContentImpl\n              id={subContext.contentId}\n              aria-labelledby={subContext.triggerId}\n              {...subContentProps}\n              ref={composedRefs}\n              align=\"start\"\n              side={rootContext.dir === 'rtl' ? 'left' : 'right'}\n              disableOutsidePointerEvents={false}\n              disableOutsideScroll={false}\n              trapFocus={false}\n              onOpenAutoFocus={(event) => {\n                // when opening a submenu, focus content for keyboard users only\n                if (rootContext.isUsingKeyboardRef.current) ref.current?.focus();\n                event.preventDefault();\n              }}\n              // The menu might close because of focusing another menu item in the parent menu. We\n              // don't want it to refocus the trigger in that case so we handle trigger focus ourselves.\n              onCloseAutoFocus={(event) => event.preventDefault()}\n              onFocusOutside={composeEventHandlers(props.onFocusOutside, (event) => {\n                // We prevent closing when the trigger is focused to avoid triggering a re-open animation\n                // on pointer interaction.\n                if (event.target !== subContext.trigger) context.onOpenChange(false);\n              })}\n              onEscapeKeyDown={composeEventHandlers(props.onEscapeKeyDown, (event) => {\n                rootContext.onClose();\n                // ensure pressing escape in submenu doesn't escape full screen mode\n                event.preventDefault();\n              })}\n              onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n                // Submenu key events bubble through portals. We only care about keys in this menu.\n                const isKeyDownInside = event.currentTarget.contains(event.target as HTMLElement);\n                const isCloseKey = SUB_CLOSE_KEYS[rootContext.dir].includes(event.key);\n                if (isKeyDownInside && isCloseKey) {\n                  context.onOpenChange(false);\n                  // We focus manually because we prevented it in `onCloseAutoFocus`\n                  subContext.trigger?.focus();\n                  // prevent window from scrolling\n                  event.preventDefault();\n                }\n              })}\n            />\n          </Collection.Slot>\n        </Presence>\n      </Collection.Provider>\n    );\n  }\n);\n\nMenuSubContent.displayName = SUB_CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getOpenState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nfunction isIndeterminate(checked?: CheckedState): checked is 'indeterminate' {\n  return checked === 'indeterminate';\n}\n\nfunction getCheckedState(checked: CheckedState) {\n  return isIndeterminate(checked) ? 'indeterminate' : checked ? 'checked' : 'unchecked';\n}\n\nfunction focusFirst(candidates: HTMLElement[]) {\n  const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n  for (const candidate of candidates) {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n    candidate.focus();\n    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n  }\n}\n\n/**\n * Wraps an array around itself at a given start index\n * Example: `wrapArray(['a', 'b', 'c', 'd'], 2) === ['c', 'd', 'a', 'b']`\n */\nfunction wrapArray<T>(array: T[], startIndex: number) {\n  return array.map((_, index) => array[(startIndex + index) % array.length]);\n}\n\n/**\n * This is the \"meat\" of the typeahead matching logic. It takes in all the values,\n * the search and the current match, and returns the next match (or `undefined`).\n *\n * We normalize the search because if a user has repeatedly pressed a character,\n * we want the exact same behavior as if we only had that one character\n * (ie. cycle through options starting with that character)\n *\n * We also reorder the values by wrapping the array around the current match.\n * This is so we always look forward from the current match, and picking the first\n * match will always be the correct one.\n *\n * Finally, if the normalized search is exactly one character, we exclude the\n * current match from the values because otherwise it would be the first to match always\n * and focus would never move. This is as opposed to the regular case, where we\n * don't want focus to move if the current match still matches.\n */\nfunction getNextMatch(values: string[], search: string, currentMatch?: string) {\n  const isRepeated = search.length > 1 && Array.from(search).every((char) => char === search[0]);\n  const normalizedSearch = isRepeated ? search[0] : search;\n  const currentMatchIndex = currentMatch ? values.indexOf(currentMatch) : -1;\n  let wrappedValues = wrapArray(values, Math.max(currentMatchIndex, 0));\n  const excludeCurrentMatch = normalizedSearch.length === 1;\n  if (excludeCurrentMatch) wrappedValues = wrappedValues.filter((v) => v !== currentMatch);\n  const nextMatch = wrappedValues.find((value) =>\n    value.toLowerCase().startsWith(normalizedSearch.toLowerCase())\n  );\n  return nextMatch !== currentMatch ? nextMatch : undefined;\n}\n\ntype Point = { x: number; y: number };\ntype Polygon = Point[];\ntype Side = 'left' | 'right';\ntype GraceIntent = { area: Polygon; side: Side };\n\n// Determine if a point is inside of a polygon.\n// Based on https://github.com/substack/point-in-polygon\nfunction isPointInPolygon(point: Point, polygon: Polygon) {\n  const { x, y } = point;\n  let inside = false;\n  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n    const xi = polygon[i].x;\n    const yi = polygon[i].y;\n    const xj = polygon[j].x;\n    const yj = polygon[j].y;\n\n    // prettier-ignore\n    const intersect = ((yi > y) !== (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n    if (intersect) inside = !inside;\n  }\n\n  return inside;\n}\n\nfunction isPointerInGraceArea(event: React.PointerEvent, area?: Polygon) {\n  if (!area) return false;\n  const cursorPos = { x: event.clientX, y: event.clientY };\n  return isPointInPolygon(cursorPos, area);\n}\n\nfunction whenMouse<E>(handler: React.PointerEventHandler<E>): React.PointerEventHandler<E> {\n  return (event) => (event.pointerType === 'mouse' ? handler(event) : undefined);\n}\n\nconst Root = Menu;\nconst Anchor = MenuAnchor;\nconst Portal = MenuPortal;\nconst Content = MenuContent;\nconst Group = MenuGroup;\nconst Label = MenuLabel;\nconst Item = MenuItem;\nconst CheckboxItem = MenuCheckboxItem;\nconst RadioGroup = MenuRadioGroup;\nconst RadioItem = MenuRadioItem;\nconst ItemIndicator = MenuItemIndicator;\nconst Separator = MenuSeparator;\nconst Arrow = MenuArrow;\nconst Sub = MenuSub;\nconst SubTrigger = MenuSubTrigger;\nconst SubContent = MenuSubContent;\n\nexport {\n  createMenuScope,\n  //\n  Menu,\n  MenuAnchor,\n  MenuPortal,\n  MenuContent,\n  MenuGroup,\n  MenuLabel,\n  MenuItem,\n  MenuCheckboxItem,\n  MenuRadioGroup,\n  MenuRadioItem,\n  MenuItemIndicator,\n  MenuSeparator,\n  MenuArrow,\n  MenuSub,\n  MenuSubTrigger,\n  MenuSubContent,\n  //\n  Root,\n  Anchor,\n  Portal,\n  Content,\n  Group,\n  Label,\n  Item,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n  Sub,\n  SubTrigger,\n  SubContent,\n};\nexport type {\n  MenuProps,\n  MenuAnchorProps,\n  MenuPortalProps,\n  MenuContentProps,\n  MenuGroupProps,\n  MenuLabelProps,\n  MenuItemProps,\n  MenuCheckboxItemProps,\n  MenuRadioGroupProps,\n  MenuRadioItemProps,\n  MenuItemIndicatorProps,\n  MenuSeparatorProps,\n  MenuArrowProps,\n  MenuSubProps,\n  MenuSubTriggerProps,\n  MenuSubContentProps,\n};\n", "export {\n  createDropdownMenuScope,\n  //\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuPortal,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuLabel,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuItemIndicator,\n  DropdownMenuSeparator,\n  DropdownMenuArrow,\n  DropdownMenuSub,\n  DropdownMenuSubTrigger,\n  DropdownMenuSubContent,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Content,\n  Group,\n  Label,\n  Item,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n  Sub,\n  SubTrigger,\n  SubContent,\n} from './DropdownMenu';\nexport type {\n  DropdownMenuProps,\n  DropdownMenuTriggerProps,\n  DropdownMenuPortalProps,\n  DropdownMenuContentProps,\n  DropdownMenuGroupProps,\n  DropdownMenuLabelProps,\n  DropdownMenuItemProps,\n  DropdownMenuCheckboxItemProps,\n  DropdownMenuRadioGroupProps,\n  DropdownMenuRadioItemProps,\n  DropdownMenuItemIndicatorProps,\n  DropdownMenuSeparatorProps,\n  DropdownMenuArrowProps,\n  DropdownMenuSubProps,\n  DropdownMenuSubTriggerProps,\n  DropdownMenuSubContentProps,\n} from './DropdownMenu';\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as MenuPrimitive from '@radix-ui/react-menu';\nimport { createMenuScope } from '@radix-ui/react-menu';\nimport { useId } from '@radix-ui/react-id';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenu\n * -----------------------------------------------------------------------------------------------*/\n\nconst DROPDOWN_MENU_NAME = 'DropdownMenu';\n\ntype ScopedProps<P> = P & { __scopeDropdownMenu?: Scope };\nconst [createDropdownMenuContext, createDropdownMenuScope] = createContextScope(\n  DROPDOWN_MENU_NAME,\n  [createMenuScope]\n);\nconst useMenuScope = createMenuScope();\n\ntype DropdownMenuContextValue = {\n  triggerId: string;\n  triggerRef: React.RefObject<HTMLButtonElement>;\n  contentId: string;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpenToggle(): void;\n  modal: boolean;\n};\n\nconst [DropdownMenuProvider, useDropdownMenuContext] =\n  createDropdownMenuContext<DropdownMenuContextValue>(DROPDOWN_MENU_NAME);\n\ninterface DropdownMenuProps {\n  children?: React.ReactNode;\n  dir?: Direction;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n  modal?: boolean;\n}\n\nconst DropdownMenu: React.FC<DropdownMenuProps> = (props: ScopedProps<DropdownMenuProps>) => {\n  const {\n    __scopeDropdownMenu,\n    children,\n    dir,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    modal = true,\n  } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  return (\n    <DropdownMenuProvider\n      scope={__scopeDropdownMenu}\n      triggerId={useId()}\n      triggerRef={triggerRef}\n      contentId={useId()}\n      open={open}\n      onOpenChange={setOpen}\n      onOpenToggle={React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen])}\n      modal={modal}\n    >\n      <MenuPrimitive.Root {...menuScope} open={open} onOpenChange={setOpen} dir={dir} modal={modal}>\n        {children}\n      </MenuPrimitive.Root>\n    </DropdownMenuProvider>\n  );\n};\n\nDropdownMenu.displayName = DROPDOWN_MENU_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'DropdownMenuTrigger';\n\ntype DropdownMenuTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface DropdownMenuTriggerProps extends PrimitiveButtonProps {}\n\nconst DropdownMenuTrigger = React.forwardRef<DropdownMenuTriggerElement, DropdownMenuTriggerProps>(\n  (props: ScopedProps<DropdownMenuTriggerProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, disabled = false, ...triggerProps } = props;\n    const context = useDropdownMenuContext(TRIGGER_NAME, __scopeDropdownMenu);\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return (\n      <MenuPrimitive.Anchor asChild {...menuScope}>\n        <Primitive.button\n          type=\"button\"\n          id={context.triggerId}\n          aria-haspopup=\"menu\"\n          aria-expanded={context.open}\n          aria-controls={context.open ? context.contentId : undefined}\n          data-state={context.open ? 'open' : 'closed'}\n          data-disabled={disabled ? '' : undefined}\n          disabled={disabled}\n          {...triggerProps}\n          ref={composeRefs(forwardedRef, context.triggerRef)}\n          onPointerDown={composeEventHandlers(props.onPointerDown, (event) => {\n            // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n            // but not when the control key is pressed (avoiding MacOS right click)\n            if (!disabled && event.button === 0 && event.ctrlKey === false) {\n              context.onOpenToggle();\n              // prevent trigger focusing when opening\n              // this allows the content to be given focus without competition\n              if (!context.open) event.preventDefault();\n            }\n          })}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            if (disabled) return;\n            if (['Enter', ' '].includes(event.key)) context.onOpenToggle();\n            if (event.key === 'ArrowDown') context.onOpenChange(true);\n            // prevent keydown from scrolling window / first focused item to execute\n            // that keydown (inadvertently closing the menu)\n            if (['Enter', ' ', 'ArrowDown'].includes(event.key)) event.preventDefault();\n          })}\n        />\n      </MenuPrimitive.Anchor>\n    );\n  }\n);\n\nDropdownMenuTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'DropdownMenuPortal';\n\ntype MenuPortalProps = React.ComponentPropsWithoutRef<typeof MenuPrimitive.Portal>;\ninterface DropdownMenuPortalProps extends MenuPortalProps {}\n\nconst DropdownMenuPortal: React.FC<DropdownMenuPortalProps> = (\n  props: ScopedProps<DropdownMenuPortalProps>\n) => {\n  const { __scopeDropdownMenu, ...portalProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.Portal {...menuScope} {...portalProps} />;\n};\n\nDropdownMenuPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'DropdownMenuContent';\n\ntype DropdownMenuContentElement = React.ElementRef<typeof MenuPrimitive.Content>;\ntype MenuContentProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Content>;\ninterface DropdownMenuContentProps extends Omit<MenuContentProps, 'onEntryFocus'> {}\n\nconst DropdownMenuContent = React.forwardRef<DropdownMenuContentElement, DropdownMenuContentProps>(\n  (props: ScopedProps<DropdownMenuContentProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...contentProps } = props;\n    const context = useDropdownMenuContext(CONTENT_NAME, __scopeDropdownMenu);\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    const hasInteractedOutsideRef = React.useRef(false);\n\n    return (\n      <MenuPrimitive.Content\n        id={context.contentId}\n        aria-labelledby={context.triggerId}\n        {...menuScope}\n        {...contentProps}\n        ref={forwardedRef}\n        onCloseAutoFocus={composeEventHandlers(props.onCloseAutoFocus, (event) => {\n          if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();\n          hasInteractedOutsideRef.current = false;\n          // Always prevent auto focus because we either focus manually or want user agent focus\n          event.preventDefault();\n        })}\n        onInteractOutside={composeEventHandlers(props.onInteractOutside, (event) => {\n          const originalEvent = event.detail.originalEvent as PointerEvent;\n          const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n          const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n          if (!context.modal || isRightClick) hasInteractedOutsideRef.current = true;\n        })}\n        style={{\n          ...props.style,\n          // re-namespace exposed content custom properties\n          ...{\n            '--radix-dropdown-menu-content-transform-origin':\n              'var(--radix-popper-transform-origin)',\n            '--radix-dropdown-menu-content-available-width': 'var(--radix-popper-available-width)',\n            '--radix-dropdown-menu-content-available-height':\n              'var(--radix-popper-available-height)',\n            '--radix-dropdown-menu-trigger-width': 'var(--radix-popper-anchor-width)',\n            '--radix-dropdown-menu-trigger-height': 'var(--radix-popper-anchor-height)',\n          },\n        }}\n      />\n    );\n  }\n);\n\nDropdownMenuContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'DropdownMenuGroup';\n\ntype DropdownMenuGroupElement = React.ElementRef<typeof MenuPrimitive.Group>;\ntype MenuGroupProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Group>;\ninterface DropdownMenuGroupProps extends MenuGroupProps {}\n\nconst DropdownMenuGroup = React.forwardRef<DropdownMenuGroupElement, DropdownMenuGroupProps>(\n  (props: ScopedProps<DropdownMenuGroupProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...groupProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Group {...menuScope} {...groupProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuGroup.displayName = GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst LABEL_NAME = 'DropdownMenuLabel';\n\ntype DropdownMenuLabelElement = React.ElementRef<typeof MenuPrimitive.Label>;\ntype MenuLabelProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Label>;\ninterface DropdownMenuLabelProps extends MenuLabelProps {}\n\nconst DropdownMenuLabel = React.forwardRef<DropdownMenuLabelElement, DropdownMenuLabelProps>(\n  (props: ScopedProps<DropdownMenuLabelProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...labelProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Label {...menuScope} {...labelProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuLabel.displayName = LABEL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'DropdownMenuItem';\n\ntype DropdownMenuItemElement = React.ElementRef<typeof MenuPrimitive.Item>;\ntype MenuItemProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Item>;\ninterface DropdownMenuItemProps extends MenuItemProps {}\n\nconst DropdownMenuItem = React.forwardRef<DropdownMenuItemElement, DropdownMenuItemProps>(\n  (props: ScopedProps<DropdownMenuItemProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...itemProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Item {...menuScope} {...itemProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuCheckboxItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst CHECKBOX_ITEM_NAME = 'DropdownMenuCheckboxItem';\n\ntype DropdownMenuCheckboxItemElement = React.ElementRef<typeof MenuPrimitive.CheckboxItem>;\ntype MenuCheckboxItemProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.CheckboxItem>;\ninterface DropdownMenuCheckboxItemProps extends MenuCheckboxItemProps {}\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  DropdownMenuCheckboxItemElement,\n  DropdownMenuCheckboxItemProps\n>((props: ScopedProps<DropdownMenuCheckboxItemProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...checkboxItemProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.CheckboxItem {...menuScope} {...checkboxItemProps} ref={forwardedRef} />;\n});\n\nDropdownMenuCheckboxItem.displayName = CHECKBOX_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuRadioGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_GROUP_NAME = 'DropdownMenuRadioGroup';\n\ntype DropdownMenuRadioGroupElement = React.ElementRef<typeof MenuPrimitive.RadioGroup>;\ntype MenuRadioGroupProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.RadioGroup>;\ninterface DropdownMenuRadioGroupProps extends MenuRadioGroupProps {}\n\nconst DropdownMenuRadioGroup = React.forwardRef<\n  DropdownMenuRadioGroupElement,\n  DropdownMenuRadioGroupProps\n>((props: ScopedProps<DropdownMenuRadioGroupProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...radioGroupProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.RadioGroup {...menuScope} {...radioGroupProps} ref={forwardedRef} />;\n});\n\nDropdownMenuRadioGroup.displayName = RADIO_GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuRadioItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst RADIO_ITEM_NAME = 'DropdownMenuRadioItem';\n\ntype DropdownMenuRadioItemElement = React.ElementRef<typeof MenuPrimitive.RadioItem>;\ntype MenuRadioItemProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.RadioItem>;\ninterface DropdownMenuRadioItemProps extends MenuRadioItemProps {}\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  DropdownMenuRadioItemElement,\n  DropdownMenuRadioItemProps\n>((props: ScopedProps<DropdownMenuRadioItemProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...radioItemProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.RadioItem {...menuScope} {...radioItemProps} ref={forwardedRef} />;\n});\n\nDropdownMenuRadioItem.displayName = RADIO_ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuItemIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst INDICATOR_NAME = 'DropdownMenuItemIndicator';\n\ntype DropdownMenuItemIndicatorElement = React.ElementRef<typeof MenuPrimitive.ItemIndicator>;\ntype MenuItemIndicatorProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.ItemIndicator>;\ninterface DropdownMenuItemIndicatorProps extends MenuItemIndicatorProps {}\n\nconst DropdownMenuItemIndicator = React.forwardRef<\n  DropdownMenuItemIndicatorElement,\n  DropdownMenuItemIndicatorProps\n>((props: ScopedProps<DropdownMenuItemIndicatorProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...itemIndicatorProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.ItemIndicator {...menuScope} {...itemIndicatorProps} ref={forwardedRef} />;\n});\n\nDropdownMenuItemIndicator.displayName = INDICATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuSeparator\n * -----------------------------------------------------------------------------------------------*/\n\nconst SEPARATOR_NAME = 'DropdownMenuSeparator';\n\ntype DropdownMenuSeparatorElement = React.ElementRef<typeof MenuPrimitive.Separator>;\ntype MenuSeparatorProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Separator>;\ninterface DropdownMenuSeparatorProps extends MenuSeparatorProps {}\n\nconst DropdownMenuSeparator = React.forwardRef<\n  DropdownMenuSeparatorElement,\n  DropdownMenuSeparatorProps\n>((props: ScopedProps<DropdownMenuSeparatorProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...separatorProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.Separator {...menuScope} {...separatorProps} ref={forwardedRef} />;\n});\n\nDropdownMenuSeparator.displayName = SEPARATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'DropdownMenuArrow';\n\ntype DropdownMenuArrowElement = React.ElementRef<typeof MenuPrimitive.Arrow>;\ntype MenuArrowProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.Arrow>;\ninterface DropdownMenuArrowProps extends MenuArrowProps {}\n\nconst DropdownMenuArrow = React.forwardRef<DropdownMenuArrowElement, DropdownMenuArrowProps>(\n  (props: ScopedProps<DropdownMenuArrowProps>, forwardedRef) => {\n    const { __scopeDropdownMenu, ...arrowProps } = props;\n    const menuScope = useMenuScope(__scopeDropdownMenu);\n    return <MenuPrimitive.Arrow {...menuScope} {...arrowProps} ref={forwardedRef} />;\n  }\n);\n\nDropdownMenuArrow.displayName = ARROW_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuSub\n * -----------------------------------------------------------------------------------------------*/\n\ninterface DropdownMenuSubProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n}\n\nconst DropdownMenuSub: React.FC<DropdownMenuSubProps> = (\n  props: ScopedProps<DropdownMenuSubProps>\n) => {\n  const { __scopeDropdownMenu, children, open: openProp, onOpenChange, defaultOpen } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  return (\n    <MenuPrimitive.Sub {...menuScope} open={open} onOpenChange={setOpen}>\n      {children}\n    </MenuPrimitive.Sub>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuSubTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_TRIGGER_NAME = 'DropdownMenuSubTrigger';\n\ntype DropdownMenuSubTriggerElement = React.ElementRef<typeof MenuPrimitive.SubTrigger>;\ntype MenuSubTriggerProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.SubTrigger>;\ninterface DropdownMenuSubTriggerProps extends MenuSubTriggerProps {}\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  DropdownMenuSubTriggerElement,\n  DropdownMenuSubTriggerProps\n>((props: ScopedProps<DropdownMenuSubTriggerProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...subTriggerProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n  return <MenuPrimitive.SubTrigger {...menuScope} {...subTriggerProps} ref={forwardedRef} />;\n});\n\nDropdownMenuSubTrigger.displayName = SUB_TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DropdownMenuSubContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst SUB_CONTENT_NAME = 'DropdownMenuSubContent';\n\ntype DropdownMenuSubContentElement = React.ElementRef<typeof MenuPrimitive.Content>;\ntype MenuSubContentProps = Radix.ComponentPropsWithoutRef<typeof MenuPrimitive.SubContent>;\ninterface DropdownMenuSubContentProps extends MenuSubContentProps {}\n\nconst DropdownMenuSubContent = React.forwardRef<\n  DropdownMenuSubContentElement,\n  DropdownMenuSubContentProps\n>((props: ScopedProps<DropdownMenuSubContentProps>, forwardedRef) => {\n  const { __scopeDropdownMenu, ...subContentProps } = props;\n  const menuScope = useMenuScope(__scopeDropdownMenu);\n\n  return (\n    <MenuPrimitive.SubContent\n      {...menuScope}\n      {...subContentProps}\n      ref={forwardedRef}\n      style={{\n        ...props.style,\n        // re-namespace exposed content custom properties\n        ...{\n          '--radix-dropdown-menu-content-transform-origin': 'var(--radix-popper-transform-origin)',\n          '--radix-dropdown-menu-content-available-width': 'var(--radix-popper-available-width)',\n          '--radix-dropdown-menu-content-available-height': 'var(--radix-popper-available-height)',\n          '--radix-dropdown-menu-trigger-width': 'var(--radix-popper-anchor-width)',\n          '--radix-dropdown-menu-trigger-height': 'var(--radix-popper-anchor-height)',\n        },\n      }}\n    />\n  );\n});\n\nDropdownMenuSubContent.displayName = SUB_CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = DropdownMenu;\nconst Trigger = DropdownMenuTrigger;\nconst Portal = DropdownMenuPortal;\nconst Content = DropdownMenuContent;\nconst Group = DropdownMenuGroup;\nconst Label = DropdownMenuLabel;\nconst Item = DropdownMenuItem;\nconst CheckboxItem = DropdownMenuCheckboxItem;\nconst RadioGroup = DropdownMenuRadioGroup;\nconst RadioItem = DropdownMenuRadioItem;\nconst ItemIndicator = DropdownMenuItemIndicator;\nconst Separator = DropdownMenuSeparator;\nconst Arrow = DropdownMenuArrow;\nconst Sub = DropdownMenuSub;\nconst SubTrigger = DropdownMenuSubTrigger;\nconst SubContent = DropdownMenuSubContent;\n\nexport {\n  createDropdownMenuScope,\n  //\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuPortal,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuLabel,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuItemIndicator,\n  DropdownMenuSeparator,\n  DropdownMenuArrow,\n  DropdownMenuSub,\n  DropdownMenuSubTrigger,\n  DropdownMenuSubContent,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Content,\n  Group,\n  Label,\n  Item,\n  CheckboxItem,\n  RadioGroup,\n  RadioItem,\n  ItemIndicator,\n  Separator,\n  Arrow,\n  Sub,\n  SubTrigger,\n  SubContent,\n};\nexport type {\n  DropdownMenuProps,\n  DropdownMenuTriggerProps,\n  DropdownMenuPortalProps,\n  DropdownMenuContentProps,\n  DropdownMenuGroupProps,\n  DropdownMenuLabelProps,\n  DropdownMenuItemProps,\n  DropdownMenuCheckboxItemProps,\n  DropdownMenuRadioGroupProps,\n  DropdownMenuRadioItemProps,\n  DropdownMenuItemIndicatorProps,\n  DropdownMenuSeparatorProps,\n  DropdownMenuArrowProps,\n  DropdownMenuSubProps,\n  DropdownMenuSubTriggerProps,\n  DropdownMenuSubContentProps,\n};\n", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/utils/index.ts\"\n);\nimport.meta.hot.lastModified = \"1691945345609.0537\";\n}\n// REMIX HMR END\n\n// utils\nimport { isSSR } from \"./ssr\";\n\n/**\n * Copies selected text to clipboard\n * @param text string that wanted to copy\n * @param cb callback function that runs after copied\n */\nexport function copyToClipboard(text: string, cb: () => void): void {\n  if (isSSR() || !navigator) return;\n\n  navigator.clipboard.writeText(text);\n  typeof cb === \"function\" && cb();\n}\n\n/**\n * Truncates an ethereum address to the format 0x0000\u20260000\n * @param address full address to truncate\n * @returns truncated address\n */\nexport function truncate(address: string) {\n  const ETH_ADDRESS_REGEX = /^(0x[a-zA-Z0-9]{4})[a-zA-Z0-9]+([a-zA-Z0-9]{4})$/;\n\n  const match = address.match(ETH_ADDRESS_REGEX);\n  if (!match) return address;\n\n  return `${match[1]}\u2026${match[2]}`;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,IAAAA,iBAAkB;;;ACVlB,IAAI,gBAAgB,QAAgC,SAAY;;;;;;ACUhE,mBAAkB;AAmCV;AAvDR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,mCAAqC,EAAE;AAAA,EAChF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA8B;AAC9B,cAAY,IAAI,eAAe;AACjC;AAQe,SAAR,YAA6B;AAClC,KAAG;AACH,QAAM,YAAY,aAAAC,QAAM,OAAO,IAAI;AACnC,QAAM,CAAC,OAAO,QAAQ,IAAI,aAAAA,QAAM,SAAS,EAAE;AAC3C,QAAM,iBAAiB,WAAS;AAC9B,aAAS,MAAM,OAAO,KAAK;AAAA,EAC7B;AAGA,QAAM,gBAAgB,aAAAA,QAAM,YAAY,WAAS;AAC/C,QAAI,MAAM,QAAQ,OAAO,SAAS,kBAAkB,UAAU,SAAS;AACrE,YAAM,eAAe;AACrB,gBAAU,QAAQ,MAAM;AAAA,IAC1B;AACA,QAAI,MAAM,QAAQ,YAAY,SAAS,kBAAkB,UAAU,SAAS;AAC1E,YAAM,eAAe;AACrB,gBAAU,QAAQ,KAAK;AAAA,IACzB;AAAA,EACF,GAAG,CAAC,CAAC;AAGL,eAAAA,QAAM,UAAU,MAAM;AACpB,QAAI,CAAC,UAAU;AAAS;AACxB,aAAS,iBAAiB,WAAW,aAAa;AAClD,WAAO,MAAM;AACX,eAAS,oBAAoB,WAAW,aAAa;AAAA,IACvD;AAAA,EACF,GAAG,CAAC,UAAU,OAAO,CAAC;AACtB,SAAO,mDAAC,SAAI,WAAU,oDAAmD,UAAU,IAC/E,6DAAC,SAAI,WAAU,qCACb;AAAA,uDAAC,iBAAM,KAAK,WAAW,MAAK,QAAO,WAAU,gCAA+B,aAAY,0CAAyC,OAAO,OAAO,UAAU,kBAAzJ;AAAA;AAAA;AAAA;AAAA,WAAyK;AAAA,IAEzK,mDAAC,QAAK,MAAK,UAAS,WAAU,wFAA9B;AAAA;AAAA;AAAA;AAAA,WAAmH;AAAA,IAEnH,mDAAC,UAAK,WAAU,wMAAhB;AAAA;AAAA;AAAA;AAAA,WAAqN;AAAA,OALvN;AAAA;AAAA;AAAA;AAAA,SAMA,KAPG;AAAA;AAAA;AAAA;AAAA,SAQL;AACJ;AACA,GAAG,WAAW,8BAA8B;AAC5C,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,WAAW;AAE5B,OAAO,eAAe;AACtB,OAAO,eAAe;;;AClDtB,IAAAC,gBAAkB;;;;;;;;AEFlB,SAASC,0CAAiEC,MAAc;AAKtF,QAAMC,gBAAgBD,OAAO;AAC7B,QAAM,CAACE,yBAAyBC,qBAA1B,IAAmDC,yCAAmBH,aAAD;AAO3E,QAAM,CAACI,wBAAwBC,oBAAzB,IAAiDJ,wBACrDD,eACA;IAAEM,eAAe;MAAEC,SAAS;;IAAQC,SAAS,oBAAIC,IAAJ;GAF+B;AAK9E,QAAMC,qBAA4EC,CAAAA,UAAU;AAC1F,UAAM,EArCV,OAAA,SAqCmBC,IAAaD;AAC5B,UAAME,MAAMC,cAAAA,QAAMC,OAA0B,IAAhC;AACZ,UAAMP,UAAUM,cAAAA,QAAMC,OAAgC,oBAAIN,IAAJ,CAAtC,EAAiDF;AACjE,WACE,8BAAAS,QAAA,cAAC,wBADH;MAC0B;MAAc;MAAkB,eAAeH;OACpED,QADH;;AAMJ,yBAAA,OAAA,oBAAA;IAAA,aAAA;GAAA;AAMA,QAAMK,uBAAuBlB,OAAO;AAEpC,QAAMmB,iBAAiBJ,8BAAAA,QAAMK,WAC3B,CAACR,OAAOS,iBAAiB;AACvB,UAAM,EAzDZ,OAAA,SAyDqBR,IAAaD;AAC5B,UAAMU,UAAUhB,qBAAqBY,sBAAsBK,KAAvB;AACpC,UAAMC,eAAeC,0CAAgBJ,cAAcC,QAAQf,aAAvB;AACpC,WAAO,8BAAAU,QAAA,cAAC,2CAAR;MAAa,KAAKO;OAAeX,QAA1B;GALY;AASvB,yBAAA,OAAA,gBAAA;IAAA,aAAA;GAAA;AAMA,QAAMa,iBAAiB1B,OAAO;AAC9B,QAAM2B,iBAAiB;AAOvB,QAAMC,qBAAqBb,8BAAAA,QAAMK,WAC/B,CAACR,OAAOS,iBAAiB;AACvB,UAAM,EAhFZ,OAAA,UAgF+B,GAAGQ,SAAH,IAAgBjB;AACzC,UAAME,MAAMC,cAAAA,QAAMC,OAAoB,IAA1B;AACZ,UAAMQ,eAAeC,0CAAgBJ,cAAcP,GAAf;AACpC,UAAMQ,UAAUhB,qBAAqBoB,gBAAgBH,KAAjB;AAEpCR,kBAAAA,QAAMe,UAAU,MAAM;AACpBR,cAAQb,QAAQsB,IAAIjB,KAAK;QAtFjC;QAsFwC,GAAIe;OAApC;AACA,aAAO,MAAM,KAAKP,QAAQb,QAAQuB,OAAOlB,GAAvB;KAFpB;AAKA,WACE,8BAAAG,QAAA,cAAC,2CADH;MACc,CAACU,cAAD,GAAkB;MAAM,KAAKH;OACtCX,QADH;GAbqB;AAoB3B,yBAAA,OAAA,oBAAA;IAAA,aAAA;GAAA;AAMA,WAASoB,cAAcV,OAAY;AACjC,UAAMD,UAAUhB,qBAAqBN,OAAO,sBAAsBuB,KAA9B;AAEpC,UAAMW,WAAWnB,cAAAA,QAAMoB,YAAY,MAAM;AACvC,YAAMC,iBAAiBd,QAAQf,cAAcC;AAC7C,UAAI,CAAC4B;AAAgB,eAAO,CAAA;AAC5B,YAAMC,eAAeC,MAAMC,KAAKH,eAAeI,iBAAkB,IAAGb,iBAApC,CAAX;AACrB,YAAMc,QAAQH,MAAMC,KAAKjB,QAAQb,QAAQiC,OAAhB,CAAX;AACd,YAAMC,eAAeF,MAAMG;QACzB,CAACC,GAAGC,MAAMT,aAAaU,QAAQF,EAAE/B,IAAIN,OAA3B,IAAuC6B,aAAaU,QAAQD,EAAEhC,IAAIN,OAA3B;MAD9B;AAGrB,aAAOmC;OACN;MAACrB,QAAQf;MAAee,QAAQb;KATlB;AAWjB,WAAOyB;;AAGT,SAAO;IACL;MAAEc,UAAUrC;MAAoBsC,MAAM9B;MAAgB+B,UAAUtB;;IAChEK;IACA9B;;;;;;AE7GJ,IAAMgD,4CAAiBC,kCAAAA,YACrB,CAACC,OAAOC,iBAAiB;AACvB,SACE,kCAAAC,eAAC,0CAAU,MAAX,SAAA,CAAA,GACMF,OAFR;IAGI,KAAKC;IACL,OAAO;;MAELE,UAAU;MACVC,QAAQ;MACRC,OAAO;MACPC,QAAQ;MACRC,SAAS;MACTC,QAAQ;MACRC,UAAU;MACVC,MAAM;MACNC,YAAY;MACZC,UAAU;MACV,GAAGZ,MAAMa;;GAfb,CAAA;CAHiB;;;AEOvB,IAAMC,sCAAgB;AAEtB,IAAM,CAACC,kCAAYC,qCAAeC,2CAA5B,IAAqDC,0CAA+B,OAAf;AAkB3E,IAAM,CAACC,0CAAoBC,yCAArB,IAAyCC,yCAAmB,SAAS;EAACJ;CAAX;AACjE,IAAM,CAACK,6CAAuBC,6CAAxB,IACJJ,yCAA8CL,mCAA5B;AA2BpB,IAAMU,2CAA+CC,CAAAA,UAA2C;AAC9F,QAAM,EAAA,cAAA,QAEI,gBAFJ,WAGO,KAHP,iBAIa,SAJb,iBAKa,IALb,SAMJC,IACED;AACJ,QAAM,CAACE,UAAUC,WAAX,QAA0BC,cAAAA,UAA4C,IAA5C;AAChC,QAAM,CAACC,YAAYC,aAAb,QAA8BF,cAAAA,UAAe,CAAf;AACpC,QAAMG,qCAAiCH,cAAAA,QAAa,KAAb;AACvC,QAAMI,uBAAmBJ,cAAAA,QAAa,KAAb;AACzB,SACE,kCAAAK,eAAC,iCAAW,UADd;IACuB,OAAOC;KAC1B,kCAAAD,eAAC,6CADH;IAEI,OAAOC;IACP;IACA;IACA;IACA;IACA;IACA;IACA,kBAAkBP;IAClB,gBAAYC,cAAAA;MAAkB,MAAME;QAAeK,CAAAA,cAAcA,YAAY;MAA5B;MAAgC,CAAA;IAArE;IACZ,mBAAeP,cAAAA;MAAkB,MAAME;QAAeK,CAAAA,cAAcA,YAAY;MAA5B;MAAgC,CAAA;IAArE;IACf;IACA;KAECV,QAdH,CADF;;AAqBJF,yCAAca,YAAY;EACxBC,MAAMb,OAAO;AACX,QAAIA,MAAMa,SAAS,OAAOb,MAAMa,UAAU,YAAY,CAACb,MAAMa,MAAMC,KAAZ,GAAoB;AACzE,YAAMC,QAAS,wCAAuC1B;AACtD,aAAO,IAAI2B,MAAMD,KAAV;;AAET,WAAO;;;AAUX,IAAME,sCAAgB;AACtB,IAAMC,gDAA0B;EAAC;;AACjC,IAAMC,uCAAiB;AACvB,IAAMC,wCAAkB;AAkBxB,IAAMC,4CAAgBC,kCAAAA,YACpB,CAACC,OAAwCC,iBAAiB;AACxD,QAAM,EAAA,cAAA,SAEKN,+CAFL,QAGI,4BACR,GAAGO,cAAH,IACEF;AACJ,QAAMG,UAAUC,8CAAwBV,qCAAeW,YAAhB;AACvC,QAAMC,WAAWC,oCAAcF,YAAD;AAC9B,QAAMG,iBAAaT,cAAAA,QAA6B,IAA7B;AACnB,QAAMU,wBAAoBV,cAAAA,QAAgC,IAAhC;AAC1B,QAAMW,wBAAoBX,cAAAA,QAAgC,IAAhC;AAC1B,QAAMY,UAAMZ,cAAAA,QAAmC,IAAnC;AACZ,QAAMa,eAAeC,0CAAgBZ,cAAcU,KAAKR,QAAQW,gBAA5B;AACpC,QAAMC,cAAcC,OAAOC,KAAK,GAAZ,EAAiBC,QAAjB,QAAiC,EAAjC,EAAqCA,QAArC,UAAuD,EAAvD;AACpB,QAAMC,YAAYhB,QAAQiB,aAAa;AAEvCrB,oBAAAA,WAAgB,MAAM;AACpB,UAAMsB,gBAAiBC,CAAAA,UAAyB;AAAA,UAAA;AAG9C,YAAMC,kBAAkBP,OAAOQ;QAAOC,CAAAA,QAASH,MAAcG,GAAf,KAAuBH,MAAMI,SAASD;MAA5D;AACxB,UAAIF;AAAiB,SAAA,eAAAZ,IAAIgB,aAAJ,QAAA,iBAAA,UAAA,aAAaC,MAAb;;AAEvBC,aAASC,iBAAiB,WAAWT,aAArC;AACA,WAAO,MAAMQ,SAASE,oBAAoB,WAAWV,aAAxC;KACZ;IAACL;GATJ;AAWAjB,oBAAAA,WAAgB,MAAM;AACpB,UAAMiC,UAAUxB,WAAWmB;AAC3B,UAAMM,WAAWtB,IAAIgB;AACrB,QAAIR,aAAaa,WAAWC,UAAU;AACpC,YAAMC,cAAc,MAAM;AACxB,YAAI,CAAC/B,QAAQgC,iBAAiBR,SAAS;AACrC,gBAAMS,aAAa,IAAIC,YAAYzC,oCAAhB;AACnBqC,mBAASK,cAAcF,UAAvB;AACAjC,kBAAQgC,iBAAiBR,UAAU;;;AAIvC,YAAMY,eAAe,MAAM;AACzB,YAAIpC,QAAQgC,iBAAiBR,SAAS;AACpC,gBAAMa,cAAc,IAAIH,YAAYxC,qCAAhB;AACpBoC,mBAASK,cAAcE,WAAvB;AACArC,kBAAQgC,iBAAiBR,UAAU;;;AAIvC,YAAMc,uBAAwBnB,CAAAA,UAAsB;AAClD,cAAMoB,uBAAuB,CAACV,QAAQW,SAASrB,MAAMsB,aAAvB;AAC9B,YAAIF;AAAsBH,uBAAY;;AAGxC,YAAMM,2BAA2B,MAAM;AACrC,cAAMC,gBAAgBd,QAAQW,SAASd,SAASkB,aAA1B;AACtB,YAAI,CAACD;AAAeP,uBAAY;;AAIlCP,cAAQF,iBAAiB,WAAWI,WAApC;AACAF,cAAQF,iBAAiB,YAAYW,oBAArC;AACAT,cAAQF,iBAAiB,eAAeI,WAAxC;AACAF,cAAQF,iBAAiB,gBAAgBe,wBAAzC;AACAG,aAAOlB,iBAAiB,QAAQI,WAAhC;AACAc,aAAOlB,iBAAiB,SAASS,YAAjC;AACA,aAAO,MAAM;AACXP,gBAAQD,oBAAoB,WAAWG,WAAvC;AACAF,gBAAQD,oBAAoB,YAAYU,oBAAxC;AACAT,gBAAQD,oBAAoB,eAAeG,WAA3C;AACAF,gBAAQD,oBAAoB,gBAAgBc,wBAA5C;AACAG,eAAOjB,oBAAoB,QAAQG,WAAnC;AACAc,eAAOjB,oBAAoB,SAASQ,YAApC;;;KAGH;IAACpB;IAAWhB,QAAQgC;GA9CvB;AAgDA,QAAMc,kCAA8BlD,cAAAA,aAClC,CAAC,EAAA,iBAAEmD,MAAuE;AACxE,UAAMC,aAAa7C,SAAQ;AAC3B,UAAM8C,qBAAqBD,WAAWE,IAAKC,CAAAA,cAAc;AACvD,YAAMC,YAAYD,UAAU3C,IAAIgB;AAChC,YAAM6B,0BAA0B;QAACD;WAAcE,4CAAsBF,SAAD;;AACpE,aAAOL,qBAAqB,aACxBM,0BACAA,wBAAwBE,QAAxB;KALqB;AAO3B,YACER,qBAAqB,aAAaE,mBAAmBM,QAAnB,IAA+BN,oBACjEO,KAFK;KAIT;IAACrD;GAdiC;AAiBpCP,oBAAAA,WAAgB,MAAM;AACpB,UAAMkC,WAAWtB,IAAIgB;AAIrB,QAAIM,UAAU;AACZ,YAAMZ,gBAAiBC,CAAAA,UAAyB;AAC9C,cAAMsC,YAAYtC,MAAMuC,UAAUvC,MAAMwC,WAAWxC,MAAMyC;AACzD,cAAMC,WAAW1C,MAAMG,QAAQ,SAAS,CAACmC;AAEzC,YAAII,UAAU;AACZ,gBAAMC,iBAAiBpC,SAASkB;AAChC,gBAAMmB,qBAAqB5C,MAAM6C;AACjC,gBAAMC,mBAAmB9C,MAAM+C,WAAWpC;AAI1C,cAAImC,oBAAoBF,oBAAoB;AAAA,gBAAA;AAC1C,aAAA,wBAAAzD,kBAAkBkB,aAAlB,QAAA,0BAAA,UAAA,sBAA2BC,MAA3B;AACA;;AAGF,gBAAMsB,mBAAmBgB,qBAAqB,cAAc;AAC5D,gBAAMI,mBAAmBrB,4BAA4B;;WAAD;AACpD,gBAAMsB,SAAQD,iBAAiBE;YAAWC,CAAAA,cAAcA,cAAcR;UAAxD;AACd,cAAIS,iCAAWJ,iBAAiBK,MAAMJ,SAAQ,CAA/B,CAAD;AACZjD,kBAAMsD,eAAN;eACK;AAAA,gBAAA,wBAAA;AAILV,kCAAkB,yBACdzD,kBAAkBkB,aADJ,QAAA,2BAAA,UACd,uBAA2BC,MAA3B,KADc,wBAEdlB,kBAAkBiB,aAFJ,QAAA,0BAAA,UAEd,sBAA2BC,MAA3B;;;;AAMVK,eAASH,iBAAiB,WAAWT,aAArC;AACA,aAAO,MAAMY,SAASF,oBAAoB,WAAWV,aAAxC;;KAEd;IAACf;IAAU2C;GA1Cd;AA4CA,SACE,kCAAA4B,eAAC,2CADH;IAEI,KAAKrE;IACL,MAAK;IACL,cAAYsE,MAAM5D,QAAQ,YAAYH,WAA1B;IAEZ,UAAU;IAGV,OAAO;MAAEgE,eAAe5D,YAAY6D,SAAY;;KAE/C7D,aACC,kCAAA0D,eAAC,kCAXL;IAYM,KAAKpE;IACL,4BAA4B,MAAM;AAChC,YAAM2C,qBAAqBH,4BAA4B;QACrDC,kBAAkB;OADkC;AAGtDwB,uCAAWtB,kBAAD;;GANd,GAcF,kCAAAyB,eAAC,iCAAW,MAdV;IAce,OAAOxE;KACtB,kCAAAwE,eAAC,0CAAU,IADb,SAAA;IACgB,UAAU;KAAQ3E,eAAhC;IAA+C,KAAKU;GAApD,CAAA,CADF,GAGCO,aACC,kCAAA0D,eAAC,kCAHD;IAIE,KAAKnE;IACL,4BAA4B,MAAM;AAChC,YAAM0C,qBAAqBH,4BAA4B;QACrDC,kBAAkB;OADkC;AAGtDwB,uCAAWtB,kBAAD;;GANd,CA7BJ;CA3IgB;AA2LtB,IAAM6B,yCAAmB;AAQzB,IAAMC,mCAAaC,kCAAAA,YACjB,CAACC,OAAOC,iBAAiB;AACvB,QAAM,EAAA,cAAA,4BAA4C,GAAGC,WAAH,IAAkBF;AACpE,QAAMG,UAAUC,8CAAwBP,wCAAkBQ,YAAnB;AAEvC,SACE,kCAAAC,eAAC,2CADH,SAAA;IAEI,eAAA;IACA,UAAU;KACNJ,YAHN;IAIE,KAAKD;IAEL,OAAO;MAAEM,UAAU;;IACnB,SAAUC,CAAAA,UAAU;AAAA,UAAA;AAClB,YAAMC,qBAAqBD,MAAME;AACjC,YAAMC,6BAA6B,GAAA,oBAACR,QAAQS,cAAT,QAAA,sBAAA,UAAC,kBAAkBC,SAASJ,kBAA3B;AACpC,UAAIE;AAA4BG,mCAA0B;;GAV9D,CAAA;CANa;AA6BnB,IAAMC,mCAAa;AACnB,IAAMC,0CAAoB;AAC1B,IAAMC,yCAAmB;AACzB,IAAMC,2CAAqB;AAC3B,IAAMC,wCAAkB;AAcxB,IAAMC,4CAAQC,kCAAAA,YACZ,CAACC,OAAgCC,iBAAiB;AAChD,QAAM,EAAA,YAAcC,MAAMC,UAApB,aAAA,cAAyD,GAAGC,WAAH,IAAkBJ;AACjF,QAAM,CAACE,OAAO,MAAMG,OAAd,IAAyBC,yCAAqB;IAClDC,MAAMJ;IACNK,aAAaC;IACbC,UAAUC;GAHuC;AAKnD,SACE,kCAAAC,eAAC,2CADH;IACY,SAASC,cAAcX;KAC/B,kCAAAU,eAAC,iCADH,SAAA;IAEI;KACIR,YAFN;IAGE,KAAKH;IACL,SAAS,MAAMI,QAAQ,KAAD;IACtB,SAASS,0CAAed,MAAMe,OAAP;IACvB,UAAUD,0CAAed,MAAMgB,QAAP;IACxB,cAAcC,0CAAqBjB,MAAMkB,cAAeC,CAAAA,UAAU;AAChEA,YAAMC,cAAcC,aAAa,cAAc,OAA/C;KADgC;IAGlC,aAAaJ,0CAAqBjB,MAAMsB,aAAcH,CAAAA,UAAU;AAC9D,YAAM,EAAA,GAAA,EAAKI,IAAMJ,MAAMK,OAAOC;AAC9BN,YAAMC,cAAcC,aAAa,cAAc,MAA/C;AACAF,YAAMC,cAAcM,MAAMC,YAAY,8BAA+B,GAAEC,KAAvE;AACAT,YAAMC,cAAcM,MAAMC,YAAY,8BAA+B,GAAEJ,KAAvE;KAJ+B;IAMjC,eAAeN,0CAAqBjB,MAAM6B,eAAgBV,CAAAA,UAAU;AAClEA,YAAMC,cAAcC,aAAa,cAAc,QAA/C;AACAF,YAAMC,cAAcM,MAAMI,eAAe,4BAAzC;AACAX,YAAMC,cAAcM,MAAMI,eAAe,4BAAzC;AACAX,YAAMC,cAAcM,MAAMI,eAAe,2BAAzC;AACAX,YAAMC,cAAcM,MAAMI,eAAe,2BAAzC;KALiC;IAOnC,YAAYb,0CAAqBjB,MAAM+B,YAAaZ,CAAAA,UAAU;AAC5D,YAAM,EAAA,GAAA,EAAKI,IAAMJ,MAAMK,OAAOC;AAC9BN,YAAMC,cAAcC,aAAa,cAAc,KAA/C;AACAF,YAAMC,cAAcM,MAAMI,eAAe,4BAAzC;AACAX,YAAMC,cAAcM,MAAMI,eAAe,4BAAzC;AACAX,YAAMC,cAAcM,MAAMC,YAAY,6BAA8B,GAAEC,KAAtE;AACAT,YAAMC,cAAcM,MAAMC,YAAY,6BAA8B,GAAEJ,KAAtE;AACAlB,cAAQ,KAAD;KAPuB;GAvBlC,CAAA,CADF;CATQ;AAyDd,IAAM,CAAC2B,gDAA0BC,gDAA3B,IAAyDC,yCAAmBC,kCAAY;EAC5FC,UAAU;EAAA;CADqE;AAwBjF,IAAMC,kCAAYC,kCAAAA,YAChB,CAACC,OAAoCC,iBAAiB;AACpD,QAAM,EAAA,cAAA,OAEG,cACPC,UAAUC,cAHN,MAAA,SAAA,iBAAA,SAAA,UAAA,cAAA,aAAA,eAAA,YAaJ,GAAGC,WAAH,IACEJ;AACJ,QAAMK,UAAUC,8CAAwBV,kCAAYW,YAAb;AACvC,QAAM,CAACC,OAAMC,OAAP,QAAkBV,cAAAA,UAAwC,IAAxC;AACxB,QAAMW,eAAeC;IAAgBV;IAAeO,CAAAA,SAASC,QAAQD,IAAD;EAAhC;AACpC,QAAMI,sBAAkBb,cAAAA,QAA8C,IAA9C;AACxB,QAAMc,oBAAgBd,cAAAA,QAA8C,IAA9C;AACtB,QAAMG,YAAWC,gBAAgBE,QAAQH;AACzC,QAAMY,6BAAyBf,cAAAA,QAAa,CAAb;AAC/B,QAAMgB,iCAA6BhB,cAAAA,QAAaG,SAAb;AACnC,QAAMc,oBAAgBjB,cAAAA,QAAa,CAAb;AACtB,QAAM,EAAA,YAAA,cAAckB,IAAkBZ;AACtC,QAAMa,cAAcC,0CAAe,MAAM;AAAA,QAAA;AAGvC,UAAMC,iBAAiBZ,UAAH,QAAGA,UAAH,SAAA,SAAGA,MAAMa,SAASC,SAASC,aAAxB;AACvB,QAAIH;AAAgB,OAAA,qBAAAf,QAAQmB,cAAR,QAAA,uBAAA,UAAA,mBAAkBC,MAAlB;AACpB5B,YAAO;GALyB;AAQlC,QAAM6B,iBAAa3B,cAAAA,aAChBG,CAAAA,aAAqB;AACpB,QAAI,CAACA,YAAYA,aAAayB;AAAU;AACxCC,WAAOC,aAAab,cAAcc,OAAlC;AACAhB,2BAAuBgB,WAAU,oBAAIC,KAAJ,GAAWC,QAAX;AACjChB,kBAAcc,UAAUF,OAAOK,WAAWf,aAAahB,QAA/B;KAE1B;IAACgB;GAPgB;AAUnBnB,oBAAAA,WAAgB,MAAM;AACpB,UAAMyB,WAAWnB,QAAQmB;AACzB,QAAIA,UAAU;AACZ,YAAMU,eAAe,MAAM;AACzBR,mBAAWX,2BAA2Be,OAA5B;AACVK,qBAAQ,QAARA,aAAQ,UAARA,SAAQ;;AAEV,YAAMC,cAAc,MAAM;AACxB,cAAMC,eAAc,oBAAIN,KAAJ,GAAWC,QAAX,IAAuBlB,uBAAuBgB;AAClEf,mCAA2Be,UAAUf,2BAA2Be,UAAUO;AAC1ET,eAAOC,aAAab,cAAcc,OAAlC;AACAQ,oBAAO,QAAPA,YAAO,UAAPA,QAAO;;AAETd,eAASe,iBAAiBC,sCAAgBJ,WAA1C;AACAZ,eAASe,iBAAiBE,uCAAiBP,YAA3C;AACA,aAAO,MAAM;AACXV,iBAASkB,oBAAoBF,sCAAgBJ,WAA7C;AACAZ,iBAASkB,oBAAoBD,uCAAiBP,YAA9C;;;KAGH;IAAC7B,QAAQmB;IAAUtB;IAAUoC;IAASH;IAAUT;GApBnD;AAyBA3B,oBAAAA,WAAgB,MAAM;AACpB,QAAI4C,QAAQ,CAACtC,QAAQuC,iBAAiBd;AAASJ,iBAAWxB,SAAD;KACxD;IAACyC;IAAMzC;IAAUG,QAAQuC;IAAkBlB;GAF9C;AAIA3B,oBAAAA,WAAgB,MAAM;AACpB8C,eAAU;AACV,WAAO,MAAM5B,cAAa;KACzB;IAAC4B;IAAY5B;GAHhB;AAKA,QAAM6B,0BAAsB/C,cAAAA,SAAc,MAAM;AAC9C,WAAOS,QAAOuC,6CAAuBvC,KAAD,IAAS;KAC5C;IAACA;GAFwB;AAI5B,MAAI,CAACH,QAAQmB;AAAU,WAAO;AAE9B,SACE,kCAAAwB,eAAA,cAAAC,UAAA,MACGH,uBACC,kCAAAE,eAAC,qCAHP;IAIQ;IAEA,MAAK;IACL,aAAWE,SAAS,eAAe,cAAc;IACjD,eAAA;KAECJ,mBAPH,GAWF,kCAAAE,eAAC,gDAXC;IAWwB,OAAOzC;IAAc,SAASW;KACrDiC,qCAAAA,cACC,kCAAAH,eAAC,iCAAW,UAFhB;IAEyB,OAAOzC;KAC1B,kCAAAyC,eAAC,2CADH;IAEI,SAAO;IACP,iBAAiBI,0CAAqBC,iBAAiB,MAAM;AAC3D,UAAI,CAAChD,QAAQiD,+BAA+BxB;AAASZ,oBAAW;AAChEb,cAAQiD,+BAA+BxB,UAAU;KAFd;KAKrC,kCAAAkB,eAAC,0CAAU,IAPb,SAAA;;IASI,MAAK;IACL,aAAU;IACV,eAAA;IACA,UAAU;IACV,cAAYL,OAAO,SAAS;IAC5B,wBAAsBtC,QAAQkD;KAC1BnD,YARN;IASE,KAAKM;IACL,OAAO;MAAE8C,YAAY;MAAQC,aAAa;MAAQ,GAAGzD,MAAM0D;;IAC3D,WAAWN,0CAAqBpD,MAAM2D,WAAYC,CAAAA,UAAU;AAC1D,UAAIA,MAAMC,QAAQ;AAAU;AAC5BR,0BAAe,QAAfA,oBAAe,UAAfA,gBAAkBO,MAAME,WAAT;AACf,UAAI,CAACF,MAAME,YAAYC,kBAAkB;AACvC1D,gBAAQiD,+BAA+BxB,UAAU;AACjDZ,oBAAW;;KALgB;IAQ/B,eAAekC,0CAAqBpD,MAAMgE,eAAgBJ,CAAAA,UAAU;AAClE,UAAIA,MAAMK,WAAW;AAAG;AACxBrD,sBAAgBkB,UAAU;QAAEoC,GAAGN,MAAMO;QAASC,GAAGR,MAAMS;;KAFtB;IAInC,eAAejB,0CAAqBpD,MAAMsE,eAAgBV,CAAAA,UAAU;AAClE,UAAI,CAAChD,gBAAgBkB;AAAS;AAC9B,YAAMoC,IAAIN,MAAMO,UAAUvD,gBAAgBkB,QAAQoC;AAClD,YAAME,IAAIR,MAAMS,UAAUzD,gBAAgBkB,QAAQsC;AAClD,YAAMG,sBAAsBC,QAAQ3D,cAAciB,OAAf;AACnC,YAAM2C,oBAAoB;QAAC;QAAQ;QAASC,SAASrE,QAAQkD,cAAnC;AAC1B,YAAMoB,SAAQ;QAAC;QAAQ;QAAMD,SAASrE,QAAQkD,cAAhC,IACVqB,KAAKC,MACLD,KAAKE;AACT,YAAMC,WAAWN,oBAAoBE,OAAM,GAAGT,CAAJ,IAAS;AACnD,YAAMc,WAAW,CAACP,oBAAoBE,OAAM,GAAGP,CAAJ,IAAS;AACpD,YAAMa,kBAAkBrB,MAAMsB,gBAAgB,UAAU,KAAK;AAC7D,YAAMC,QAAQ;QAAEjB,GAAGa;QAAUX,GAAGY;;AAChC,YAAMI,cAAc;QAAEC,eAAezB;;;AACrC,UAAIW,qBAAqB;AACvB1D,sBAAciB,UAAUqD;AACxBG,2DAA6BC,wCAAkBC,aAAaJ,aAAa;UACvEK,UAAU;SADgB;iBAGnBC,yCAAmBP,OAAO9E,QAAQkD,gBAAgB0B,eAAhC,GAAkD;AAC7EpE,sBAAciB,UAAUqD;AACxBG,2DAA6BK,yCAAmBC,cAAcR,aAAa;UACzEK,UAAU;SADgB;AAG3B7B,cAAMiC,OAAuBC,kBAAkBlC,MAAMmC,SAAtD;iBACSnB,KAAKoB,IAAI9B,CAAT,IAAce,mBAAmBL,KAAKoB,IAAI5B,CAAT,IAAca;AAGxDrE,wBAAgBkB,UAAU;KA5BK;IA+BnC,aAAasB,0CAAqBpD,MAAMiG,aAAcrC,CAAAA,WAAU;AAC9D,YAAMuB,QAAQtE,cAAciB;AAC5B,YAAM+D,SAASjC,OAAMiC;AACrB,UAAIA,OAAOK,kBAAkBtC,OAAMmC,SAA/B;AACFF,eAAOM,sBAAsBvC,OAAMmC,SAAnC;AAEFlF,oBAAciB,UAAU;AACxBlB,sBAAgBkB,UAAU;AAC1B,UAAIqD,OAAO;AACT,cAAMiB,SAAQxC,OAAMyC;AACpB,cAAMjB,cAAc;UAAEC,eAAezB;;;AACrC,YACE8B,yCAAmBP,OAAO9E,QAAQkD,gBAAgBlD,QAAQiG,cAAxC;AAElBhB,6DAA6BiB,uCAAiBC,YAAYpB,aAAa;YACrEK,UAAU;WADgB;;AAI5BH,6DACEmB,0CACAC,eACAtB,aACA;YACEK,UAAU;WALc;AAW9BW,QAAAA,OAAM7D;UAAiB;UAAUqB,CAAAA,UAAUA,MAAM+C,eAAN;UAAwB;YACjEC,MAAM;;QADR;;KA7B6B;GAtDnC,CAAA,CAPF,CADF,GAmGAvG,QAAQmB,QApGT,CADH,CAbF;CAtFY;AAgNlB1B,gCAAU+G,YAAY;EACpB3D,KAAKlD,OAAO;AACV,QAAIA,MAAMkD,QAAQ,CAAC;MAAC;MAAc;MAAcwB,SAAS1E,MAAMkD,IAA5C,GAAmD;AACpE,YAAM4D,QAAS,uCAAsClH;AACrD,aAAO,IAAImH,MAAMD,KAAV;;AAET,WAAO;;;AAUX,IAAME,sCAA+ChH,CAAAA,UAA2C;AAC9F,QAAM,EAAA,cAAA,UAA0B,GAAGiH,cAAH,IAAqBjH;AACrD,QAAMK,UAAUC,8CAAwBV,kCAAYW,YAAb;AACvC,QAAM,CAAC2G,oBAAoBC,qBAArB,QAA8CpH,cAAAA,UAAe,KAAf;AACpD,QAAM,CAACqH,aAAaC,cAAd,QAAgCtH,cAAAA,UAAe,KAAf;AAGtCuH;IAAa,MAAMH,sBAAsB,IAAD;EAA5B;AAGZpH,oBAAAA,WAAgB,MAAM;AACpB,UAAMwH,QAAQ3F,OAAOK;MAAW,MAAMoF,eAAe,IAAD;MAAQ;IAA9C;AACd,WAAO,MAAMzF,OAAOC,aAAa0F,KAApB;KACZ,CAAA,CAHH;AAKA,SAAOH,cAAc,OACnB,kCAAApE,eAAC,2CADH;IACU,SAAA;KACN,kCAAAA,eAAC,2CAAmBiE,eACjBC,sBACC,kCAAAlE,eAAA,cAAAC,UAAA,MACG5C,QAAQmH,OADX,KACmBC,QADnB,CAFJ,CADF;;AAsBJ,IAAMC,2CAAaC,kCAAAA,YACjB,CAACC,OAAqCC,iBAAiB;AACrD,QAAM,EAAA,cAAgB,GAAGC,WAAH,IAAkBF;AACxC,SAAO,kCAAAG,eAAC,0CAAU,KAAX,SAAA,CAAA,GAAmBD,YAA1B;IAAsC,KAAKD;GAApC,CAAA;CAHQ;AAkBnB,IAAMG,4CAAmBC,kCAAAA,YACvB,CAACC,OAA2CC,iBAAiB;AAC3D,QAAM,EAAA,cAAgB,GAAGC,iBAAH,IAAwBF;AAC9C,SAAO,kCAAAG,eAAC,0CAAU,KAAX,SAAA,CAAA,GAAmBD,kBAA1B;IAA4C,KAAKD;GAA1C,CAAA;CAHc;AAazB,IAAMG,oCAAc;AAapB,IAAMC,4CAAcC,kCAAAA,YAClB,CAACC,OAAsCC,iBAAiB;AACtD,QAAM,EAAA,SAAW,GAAGC,YAAH,IAAmBF;AACpC,MAAI,CAACG;AAAS,WAAO;AACrB,SACE,kCAAAC,eAAC,4CADH;IACwB;IAAkB,SAAA;KACtC,kCAAAA,eAAC,2CAAD,SAAA,CAAA,GAAgBF,aADlB;IAC+B,KAAKD;GAAlC,CAAA,CADF;CALc;AAYpBH,0CAAYO,YAAY;EACtBF,QAAQH,OAAO;AACb,QAAI,CAACA,MAAMG;AACT,aAAO,IAAIG,MAAO,0CAAyCT,qCAApD;AAET,WAAO;;;AAUX,IAAMU,mCAAa;AAMnB,IAAMC,4CAAaC,kCAAAA,YACjB,CAACC,OAAqCC,iBAAiB;AACrD,QAAM,EAAA,cAAgB,GAAGC,WAAH,IAAkBF;AACxC,QAAMG,qBAAqBC,iDAA2BP,kCAAYQ,YAAb;AAErD,SACE,kCAAAC,eAAC,4CADH;IACwB,SAAA;KACpB,kCAAAA,eAAC,0CAAU,QADb,SAAA;IAEI,MAAK;KACDJ,YAFN;IAGE,KAAKD;IACL,SAASM,0CAAqBP,MAAMQ,SAASL,mBAAmBM,OAAnC;GAJ/B,CAAA,CADF;CANa;AA2BnB,IAAMC,6CAAuBC,kCAAAA,YAG3B,CAACC,OAA+CC,iBAAiB;AACjE,QAAM,EAAA,cAAA,SAAyB,GAAGC,qBAAH,IAA4BF;AAE3D,SACE,kCAAAG,eAAC,0CAAU,KADb,SAAA;IAEI,qCAAkC;IAClC,iCAA+BC,WAAWC;KACtCH,sBAHN;IAIE,KAAKD;GAJP,CAAA;CAPyB;AAgB7B,SAASK,6CAAuBC,WAAwB;AACtD,QAAMC,cAAwB,CAAA;AAC9B,QAAMC,aAAaC,MAAMC,KAAKJ,UAAUE,UAArB;AAEnBA,aAAWG,QAASC,CAAAA,SAAS;AAC3B,QAAIA,KAAKC,aAAaD,KAAKE,aAAaF,KAAKL;AAAaA,kBAAYQ,KAAKH,KAAKL,WAAtB;AAC1D,QAAIS,oCAAcJ,IAAD,GAAQ;AACvB,YAAMK,WAAWL,KAAKM,cAAcN,KAAKO,UAAUP,KAAKQ,MAAMC,YAAY;AAC1E,YAAMC,aAAaV,KAAKW,QAAQC,8BAA8B;AAE9D,UAAI,CAACP,UAAL;AACE,YAAIK,YAAY;AACd,gBAAMnB,UAAUS,KAAKW,QAAQE;AAC7B,cAAItB;AAASI,wBAAYQ,KAAKZ,OAAjB;;AAEbI,sBAAYQ,KAAZ,GAAoBV,6CAAuBO,IAAD,CAA1C;;;GAXR;AAmBA,SAAOL;;AAKT,SAASmB,mDAIPC,MACAC,SACAC,QACA,EAAA,SAAEC,GACF;AACA,QAAMC,gBAAgBF,OAAOG,cAAcD;AAC3C,QAAME,QAAQ,IAAIC,YAAYP,MAAM;IAAEQ,SAAS;IAAMC,YAAY;;GAAnD;AACd,MAAIR;AAASG,kBAAcM,iBAAiBV,MAAMC,SAA0B;MAAEU,MAAM;KAAvE;AAEb,MAAIR;AACFS,8CAA4BR,eAAeE,KAAhB;;AAE3BF,kBAAcS,cAAcP,KAA5B;;AAIJ,IAAMQ,2CAAqB,CACzBC,OACAC,WACAC,YAAY,MACT;AACH,QAAMC,SAASC,KAAKC,IAAIL,MAAMM,CAAf;AACf,QAAMC,SAASH,KAAKC,IAAIL,MAAMQ,CAAf;AACf,QAAMC,WAAWN,SAASI;AAC1B,MAAIN,cAAc,UAAUA,cAAc;AACxC,WAAOQ,YAAYN,SAASD;;AAE5B,WAAO,CAACO,YAAYF,SAASL;;AAIjC,SAASQ,mCAAaC,WAAW,MAAM;AAAA,GAAI;AACzC,QAAMC,KAAKC,0CAAeF,QAAD;AACzBG,4CAAgB,MAAM;AACpB,QAAIC,OAAO;AACX,QAAIC,OAAO;AACXD,WAAOE,OAAOC;MAAsB,MAAOF,OAAOC,OAAOC,sBAAsBN,EAA7B;IAA3C;AACP,WAAO,MAAM;AACXK,aAAOE,qBAAqBJ,IAA5B;AACAE,aAAOE,qBAAqBH,IAA5B;;KAED;IAACJ;GARW;;AAWjB,SAAStC,oCAAcJ,MAAgC;AACrD,SAAOA,KAAKC,aAAaD,KAAKkD;;AAahC,SAASC,4CAAsBzD,WAAwB;AACrD,QAAM0D,QAAuB,CAAA;AAC7B,QAAMC,SAASC,SAASC,iBAAiB7D,WAAW8D,WAAWC,cAAc;IAC3EC,YAAa1D,CAAAA,SAAc;AACzB,YAAM2D,gBAAgB3D,KAAK4D,YAAY,WAAW5D,KAAK6D,SAAS;AAChE,UAAI7D,KAAK8D,YAAY9D,KAAKO,UAAUoD;AAAe,eAAOH,WAAWO;AAIrE,aAAO/D,KAAKgE,YAAY,IAAIR,WAAWS,gBAAgBT,WAAWO;;GAPvD;AAUf,SAAOV,OAAOa,SAAP;AAAmBd,UAAMjD,KAAKkD,OAAOc,WAAlB;AAG1B,SAAOf;;AAGT,SAASgB,iCAAWC,YAA2B;AAC7C,QAAMC,2BAA2BhB,SAASiB;AAC1C,SAAOF,WAAWG,KAAMC,CAAAA,cAAc;AAEpC,QAAIA,cAAcH;AAA0B,aAAO;AACnDG,cAAUC,MAAV;AACA,WAAOpB,SAASiB,kBAAkBD;GAJ7B;;AAQT,IAAMK,4CAAWC;AACjB,IAAMC,2CAAWC;AACjB,IAAMC,4CAAOC;AACb,IAAMC,4CAAQC;AACd,IAAMC,4CAAcC;AACpB,IAAMC,4CAASC;AACf,IAAMC,4CAAQC;;;AC38Bd,IAAM,gBAAgB,CAAC,UAAQ,OAAO,UAAU,YAAY,GAAG,OAAO,KAAK,IAAI,UAAU,IAAI,MAAM;AAC5F,IAAM,KAAK;AACX,IAAM,MAAM,CAAC,MAAM,WAAS;AAC/B,SAAO,CAAC,UAAQ;AACZ,QAAI;AACJ,SAAK,WAAW,QAAQ,WAAW,SAAS,SAAS,OAAO,aAAa;AAAM,aAAO,GAAG,MAAM,UAAU,QAAQ,UAAU,SAAS,SAAS,MAAM,OAAO,UAAU,QAAQ,UAAU,SAAS,SAAS,MAAM,SAAS;AACvN,UAAM,EAAE,UAAW,gBAAiB,IAAI;AACxC,UAAM,uBAAuB,OAAO,KAAK,QAAQ,EAAE,IAAI,CAAC,YAAU;AAC9D,YAAM,cAAc,UAAU,QAAQ,UAAU,SAAS,SAAS,MAAM,OAAO;AAC/E,YAAM,qBAAqB,oBAAoB,QAAQ,oBAAoB,SAAS,SAAS,gBAAgB,OAAO;AACpH,UAAI,gBAAgB;AAAM,eAAO;AACjC,YAAM,aAAa,cAAc,WAAW,KAAK,cAAc,kBAAkB;AACjF,aAAO,SAAS,OAAO,EAAE,UAAU;AAAA,IACvC,CAAC;AACD,UAAM,wBAAwB,SAAS,OAAO,QAAQ,KAAK,EAAE,OAAO,CAAC,KAAK,UAAQ;AAC9E,UAAI,CAAC,KAAK,KAAK,IAAI;AACnB,UAAI,UAAU,QAAW;AACrB,eAAO;AAAA,MACX;AACA,UAAI,GAAG,IAAI;AACX,aAAO;AAAA,IACX,GAAG,CAAC,CAAC;AACL,UAAM,+BAA+B,WAAW,QAAQ,WAAW,SAAS,UAAU,MAAM,OAAO,sBAAsB,QAAQ,QAAQ,SAAS,SAAS,IAAI,OAAO,CAAC,KAAK,WAAS;AACjL,UAAI,EAAE,OAAO,SAAU,WAAW,aAAc,GAAG,uBAAuB,IAAI;AAC9E,aAAO,OAAO,QAAQ,sBAAsB,EAAE,MAAM,CAAC,UAAQ;AACzD,YAAI,CAAC,KAAK,KAAK,IAAI;AACnB,eAAO,MAAM,QAAQ,KAAK,IAAI,MAAM,SAAS;AAAA,UACzC,GAAG;AAAA,UACH,GAAG;AAAA,QACP,EAAE,GAAG,CAAC,IAAK;AAAA,UACP,GAAG;AAAA,UACH,GAAG;AAAA,QACP,EAAG,GAAG,MAAM;AAAA,MAChB,CAAC,IAAI;AAAA,QACD,GAAG;AAAA,QACH;AAAA,QACA;AAAA,MACJ,IAAI;AAAA,IACR,GAAG,CAAC,CAAC;AACL,WAAO,GAAG,MAAM,sBAAsB,8BAA8B,UAAU,QAAQ,UAAU,SAAS,SAAS,MAAM,OAAO,UAAU,QAAQ,UAAU,SAAS,SAAS,MAAM,SAAS;AAAA,EAChM;AACJ;;;APTW,IAAAC,0BAAA;AAhCX,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,sCAAwC,EAAE;AAAA,EACnF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAiC;AACjC,cAAY,IAAI,eAAe;AACjC;AAYA,IAAM,gBAAgC;AACtC,IAAM,gBAAgB,cAAAC,QAAM,WAAWC,MAAK,CAAC;AAAA,EAC3C;AAAA,EACA,GAAG;AACL,GAAG,QAAQ,oDAAiB,0CAAhB,EAAyB,KAAU,WAAW,GAAG,qIAAqI,SAAS,GAAI,GAAG,SAAvM;AAAA;AAAA;AAAA;AAAA,OAA8M,CAAE;AAC3NC,OAAM;AACN,cAAc,cAA8B,yCAAS;AACrD,IAAM,gBAAgB,IAAI,6lBAA6lB;AAAA,EACrnB,UAAU;AAAA,IACR,SAAS;AAAA,MACP,SAAS;AAAA,MACT,aAAa;AAAA,IACf;AAAA,EACF;AAAA,EACA,iBAAiB;AAAA,IACf,SAAS;AAAA,EACX;AACF,CAAC;AACD,IAAM,QAAQ,cAAAF,QAAM,WAAW,MAAM,CAAC;AAAA,EACpC;AAAA,EACA;AAAA,EACA,GAAG;AACL,GAAG,QAAQ;AACT,SAAO,oDAAiB,2CAAhB,EAAqB,KAAU,WAAW,GAAG,cAAc;AAAA,IACjE;AAAA,EACF,CAAC,GAAG,SAAS,GAAI,GAAG,SAFb;AAAA;AAAA;AAAA;AAAA,SAEoB;AAC7B,CAAC;AACD,MAAM;AACN,MAAM,cAA8B,0CAAK;AACzC,IAAM,cAAc,cAAAA,QAAM,WAAW,MAAM,CAAC;AAAA,EAC1C;AAAA,EACA,GAAG;AACL,GAAG,QAAQ,oDAAiB,2CAAhB,EAAuB,KAAU,WAAW,GAAG,sgBAAsgB,SAAS,GAAI,GAAG,SAAtkB;AAAA;AAAA;AAAA;AAAA,OAA6kB,CAAE;AAC1lB,MAAM;AACN,YAAY,cAA8B,0CAAO;AACjD,IAAM,aAAa,cAAAA,QAAM,WAAW,MAAM,CAAC;AAAA,EACzC;AAAA,EACA,GAAG;AACL,GAAG,QAAQ,oDAAiB,2CAAhB,EAAsB,KAAU,WAAW,GAAG,yVAAyV,SAAS,GAAG,eAAY,IAAI,GAAG,OAC9a,8DAAC,QAAK,MAAK,WAAX;AAAA;AAAA;AAAA;AAAA,OAAmB,KADZ;AAAA;AAAA;AAAA;AAAA,OAET,CAAwB;AAC1B,MAAM;AACN,WAAW,cAA8B,0CAAM;AAC/C,IAAM,aAAa,cAAAA,QAAM,WAAW,MAAM,CAAC;AAAA,EACzC;AAAA,EACA,GAAG;AACL,GAAG,QAAQ,oDAAiB,2CAAhB,EAAsB,KAAU,WAAW,GAAG,yBAAyB,SAAS,GAAI,GAAG,SAAxF;AAAA;AAAA;AAAA;AAAA,OAA+F,CAAE;AAC5G,OAAO;AACP,WAAW,cAA8B,0CAAM;AAC/C,IAAM,mBAAmB,cAAAA,QAAM,WAAW,OAAO,CAAC;AAAA,EAChD;AAAA,EACA,GAAG;AACL,GAAG,QAAQ,oDAAiB,2CAAhB,EAA4B,KAAU,WAAW,GAAG,sBAAsB,SAAS,GAAI,GAAG,SAA3F;AAAA;AAAA;AAAA;AAAA,OAAkG,CAAE;AAC/G,OAAO;AACP,iBAAiB,cAA8B,0CAAY;AAE3D,IAAIG;AAAJ,IAAQC;AAAR,IAAa;AAAb,IAAkB;AAAlB,IAAuB;AAAvB,IAA4B;AAA5B,IAAiC;AAAjC,IAAsC;AAAtC,IAA2C;AAA3C,IAAgD;AAAhD,IAAsD;AAAtD,IAA4D;AAC5D,aAAaD,KAAI,gCAAgC;AACjD,aAAaC,MAAK,eAAe;AACjC,aAAa,KAAK,wBAAwB;AAC1C,aAAa,KAAK,OAAO;AACzB,aAAa,KAAK,8BAA8B;AAChD,aAAa,KAAK,aAAa;AAC/B,aAAa,KAAK,6BAA6B;AAC/C,aAAa,KAAK,YAAY;AAC9B,aAAa,KAAK,6BAA6B;AAC/C,aAAa,MAAM,YAAY;AAC/B,aAAa,MAAM,mCAAmC;AACtD,aAAa,MAAM,kBAAkB;AAErC,OAAO,eAAe;AACtB,OAAO,eAAe;;;AQzFtB,IAAAC,gBAAkB;AATlB,IAAI,aAAa;AACjB,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EACA;AACA,cAAY,IAAI,eAAe;AAC/B;AAKA,IAAI,YAAqB;AAElB,SAAS,cAAc;AAC5B,QAAM,CAAC,UAAU,WAAW,IAAI,cAAAC,QAAM,SAAkB,MAAM,CAAC,SAAS;AAExE,gBAAAA,QAAM,UAAU,MAAM;AACpB,gBAAY;AACZ,gBAAY,IAAI;AAAA,EAClB,GAAG,CAAC,CAAC;AAEL,SAAO;AACT;;;ACZA,IAAAC,SAAuB;AAVvB,IAAI,aAAa;AACjB,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EACA;AACA,cAAY,IAAI,eAAe;AAC/B;AAQA,IAAM,cAAc;AACpB,IAAM,qBAAqB;AAgB3B,IAAI,QAAQ;AAEZ,SAAS,QAAQ;AACf,WAAS,QAAQ,KAAK,OAAO;AAC7B,SAAO,MAAM,SAAS;AACxB;AA0BA,IAAM,gBAAgB,oBAAI,IAA2C;AAErE,IAAM,mBAAmB,CAAC,YAAoB;AAC5C,MAAI,cAAc,IAAI,OAAO,GAAG;AAC9B;AAAA,EACF;AAEA,QAAM,UAAU,WAAW,MAAM;AAC/B,kBAAc,OAAO,OAAO;AAC5B,aAAS;AAAA,MACP,MAAM;AAAA,MACN;AAAA,IACF,CAAC;AAAA,EACH,GAAG,kBAAkB;AAErB,gBAAc,IAAI,SAAS,OAAO;AACpC;AAEO,IAAM,UAAU,CAAC,OAAc,WAA0B;AAC9D,UAAQ,OAAO,MAAM;AAAA,IACnB,KAAK;AACH,aAAO;AAAA,QACL,GAAG;AAAA,QACH,QAAQ,CAAC,OAAO,OAAO,GAAG,MAAM,MAAM,EAAE,MAAM,GAAG,WAAW;AAAA,MAC9D;AAAA,IAEF,KAAK;AACH,aAAO;AAAA,QACL,GAAG;AAAA,QACH,QAAQ,MAAM,OAAO,IAAI,OAAM,EAAE,OAAO,OAAO,MAAM,KAAK,EAAE,GAAG,GAAG,GAAG,OAAO,MAAM,IAAI,CAAE;AAAA,MAC1F;AAAA,IAEF,KAAK,iBAAiB;AACpB,YAAM,EAAE,QAAQ,IAAI;AAIpB,UAAI,SAAS;AACX,yBAAiB,OAAO;AAAA,MAC1B,OAAO;AACL,cAAM,OAAO,QAAQ,CAAAC,WAAS;AAC5B,2BAAiBA,OAAM,EAAE;AAAA,QAC3B,CAAC;AAAA,MACH;AAEA,aAAO;AAAA,QACL,GAAG;AAAA,QACH,QAAQ,MAAM,OAAO;AAAA,UAAI,OACvB,EAAE,OAAO,WAAW,YAAY,SAC5B;AAAA,YACE,GAAG;AAAA,YACH,MAAM;AAAA,UACR,IACA;AAAA,QACN;AAAA,MACF;AAAA,IACF;AAAA,IACA,KAAK;AACH,UAAI,OAAO,YAAY,QAAW;AAChC,eAAO;AAAA,UACL,GAAG;AAAA,UACH,QAAQ,CAAC;AAAA,QACX;AAAA,MACF;AACA,aAAO;AAAA,QACL,GAAG;AAAA,QACH,QAAQ,MAAM,OAAO,OAAO,OAAK,EAAE,OAAO,OAAO,OAAO;AAAA,MAC1D;AAAA,EACJ;AACF;AAEA,IAAM,YAA2C,CAAC;AAElD,IAAI,cAAqB,EAAE,QAAQ,CAAC,EAAE;AAEtC,SAAS,SAAS,QAAgB;AAChC,gBAAc,QAAQ,aAAa,MAAM;AACzC,YAAU,QAAQ,cAAY;AAC5B,aAAS,WAAW;AAAA,EACtB,CAAC;AACH;AAIA,SAAS,MAAM,EAAE,GAAG,MAAM,GAAU;AAClC,QAAM,KAAK,MAAM;AAEjB,QAAM,SAAS,CAACC,WACd,SAAS;AAAA,IACP,MAAM;AAAA,IACN,OAAO,EAAE,GAAGA,QAAO,GAAG;AAAA,EACxB,CAAC;AACH,QAAM,UAAU,MAAM,SAAS,EAAE,MAAM,iBAAiB,SAAS,GAAG,CAAC;AAErE,WAAS;AAAA,IACP,MAAM;AAAA,IACN,OAAO;AAAA,MACL,GAAG;AAAA,MACH;AAAA,MACA,MAAM;AAAA,MACN,cAAc,UAAQ;AACpB,YAAI,CAAC;AAAM,kBAAQ;AAAA,MACrB;AAAA,IACF;AAAA,EACF,CAAC;AAED,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AAEA,SAAS,WAAW;AAClB,QAAM,CAAC,OAAO,QAAQ,IAAU,gBAAgB,WAAW;AAE3D,EAAM,iBAAU,MAAM;AACpB,cAAU,KAAK,QAAQ;AACvB,WAAO,MAAM;AACX,YAAMC,SAAQ,UAAU,QAAQ,QAAQ;AACxC,UAAIA,SAAQ,IAAI;AACd,kBAAU,OAAOA,QAAO,CAAC;AAAA,MAC3B;AAAA,IACF;AAAA,EACF,GAAG,CAAC,KAAK,CAAC;AAEV,SAAO;AAAA,IACL,GAAG;AAAA,IACH;AAAA,IACA,SAAS,CAAC,YAAqB,SAAS,EAAE,MAAM,iBAAiB,QAAQ,CAAC;AAAA,EAC5E;AACF;;;ACjMA,IAAI,aAAa;AACjB,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EACA;AACA,cAAY,IAAI,eAAe;AAC/B;;;ACiCwB,IAAAC,0BAAA;AAxCxB,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,6CAA+C,EAAE;AAAA,EAC1F;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAIC,MAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAwC;AACxC,cAAY,IAAI,eAAe;AACjC;AAQO,SAAS,eAAe;AAC7B,EAAAA,IAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,SAAS;AACb,SAAO,oDAAC,iBACH;AAAA,WAAO,IAAI,SAAU;AAAA,MACtB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,GAAG;AAAA,IACL,GAAG;AACD,aAAO,oDAAC,SAAgB,GAAG,OACrB;AAAA,4DAAC,SAAI,WAAU,cACZ;AAAA,mBAAS,oDAAC,cAAY,mBAAb;AAAA;AAAA;AAAA;AAAA,iBAAmB;AAAA,UAC5B,eAAe,oDAAC,oBAAkB,yBAAnB;AAAA;AAAA;AAAA;AAAA,iBAA+B;AAAA,aAFjD;AAAA;AAAA;AAAA;AAAA,eAGA;AAAA,QACC;AAAA,QACD,oDAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,eAAY;AAAA,WANC,IAAZ;AAAA;AAAA;AAAA;AAAA,aAOH;AAAA,IACN,CAAC;AAAA,IACC,oDAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,WAAe;AAAA,OAjBZ;AAAA;AAAA;AAAA;AAAA,SAkBL;AACJ;AACAA,IAAG,cAAc,gCAAgC,OAAO,WAAY;AAClE,SAAO,CAAC,QAAQ;AAClB,CAAC;AACDC,OAAK;AACL,IAAIA;AACJ,aAAaA,MAAI,cAAc;AAE/B,OAAO,eAAe;AACtB,OAAO,eAAe;;;ACjBG,IAAAC,0BAAA;AAzCzB,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,oCAAsC,EAAE;AAAA,EACjF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAIC,MAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA+B;AAC/B,cAAY,IAAI,eAAe;AACjC;AAmBe,SAAR,WAA4B;AAAA,EACjC;AAAA,EACA,WAAW;AACb,GAAG;AACD,EAAAA,IAAG;AACH,SAAO,YAAY,IAAI,wFAAG,mBAAS,KAAZ;AAAA;AAAA;AAAA;AAAA,SAAc,IAAM,wFAAG,sBAAH;AAAA;AAAA;AAAA;AAAA,SAAY;AACzD;AACAA,IAAG,YAAY,gCAAgC,OAAO,WAAY;AAChE,SAAO,CAAC,WAAW;AACrB,CAAC;AACDC,OAAK;AACL,IAAIA;AACJ,aAAaA,MAAI,YAAY;AAE7B,OAAO,eAAe;AACtB,OAAO,eAAe;;;AChCtB,IAAAC,gBAAkB;AAeZ,IAAAC,0BAAA;AAlCN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,sCAAwC,EAAE;AAAA,EACnF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAiC;AACjC,cAAY,IAAI,eAAe;AACjC;AAYA,IAAM,QAAuB;AAC7B,IAAM,eAA8B;AAEpC,IAAM,cAAc,CAAC;AAAA,EACnB;AAAA,EACA,GAAG;AACL,MAAM,oDAAgB,2CAAf,EAAsB,WAAW,GAAG,SAAS,GAAI,GAAG,SAArD;AAAA;AAAA;AAAA;AAAA,OAA4D;AAClEC,OAAK;AACL,YAAY,cAA6B,0CAAO;AAChD,IAAM,eAAe,cAAAC,QAAM,WAAWC,OAAM,CAAC;AAAA,EAC3C;AAAA,EACA,GAAG;AACL,GAAG,QAAQ,oDAAgB,2CAAf,EAAuB,WAAW,GAAG,gLAAgL,SAAS,GAAI,GAAG,OAAO,OAA7O;AAAA;AAAA;AAAA;AAAA,OAAuP,CAAE;AACpQC,OAAM;AACN,aAAa,cAA6B,0CAAQ;AAClD,IAAM,gBAAgB,IAAI,oMAAoM;AAAA,EAC5N,UAAU;AAAA,IACR,MAAM;AAAA,MACJ,KAAK;AAAA,MACL,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,OAAO;AAAA,IACT;AAAA,EACF;AAAA,EACA,iBAAiB;AAAA,IACf,MAAM;AAAA,EACR;AACF,CAAC;AACD,IAAM,eAAe,cAAAF,QAAM,WAAWG,OAAM,CAAC;AAAA,EAC3C,OAAO;AAAA,EACP;AAAA,EACA;AAAA,EACA,GAAG;AACL,GAAG,QAAQ,oDAAC,eACR;AAAA,sDAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,SAAc;AAAA,EACd,oDAAgB,2CAAf,EAAuB,KAAU,WAAW,GAAG,cAAc;AAAA,IAC9D;AAAA,EACF,CAAC,GAAG,SAAS,GAAI,GAAG,OACf;AAAA;AAAA,IACD,oDAAgB,2CAAf,EAAqB,WAAU,4OAC9B;AAAA,0DAAC,QAAK,MAAK,WAAX;AAAA;AAAA;AAAA;AAAA,aAAmB;AAAA,MACnB,oDAAC,UAAK,WAAU,WAAU,qBAA1B;AAAA;AAAA;AAAA;AAAA,aAA+B;AAAA,SAFjC;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,OAPF;AAAA;AAAA;AAAA;AAAA,SAQA;AAAA,KAVO;AAAA;AAAA;AAAA;AAAA,OAWT,CAAc;AAChBC,OAAM;AACN,aAAa,cAA6B,0CAAQ;AAClD,IAAM,cAAc,CAAC;AAAA,EACnB;AAAA,EACA,GAAG;AACL,MAAM,oDAAC,SAAI,WAAW,GAAG,oDAAoD,SAAS,GAAI,GAAG,SAAvF;AAAA;AAAA;AAAA;AAAA,OAA8F;AACpGC,OAAM;AACN,YAAY,cAAc;AAC1B,IAAM,cAAc,CAAC;AAAA,EACnB;AAAA,EACA,GAAG;AACL,MAAM,oDAAC,SAAI,WAAW,GAAG,iEAAiE,SAAS,GAAI,GAAG,SAApG;AAAA;AAAA;AAAA;AAAA,OAA2G;AACjHC,OAAM;AACN,YAAY,cAAc;AAC1B,IAAM,aAAa,cAAAN,QAAM,WAAWO,OAAM,CAAC;AAAA,EACzC;AAAA,EACA,GAAG;AACL,GAAG,QAAQ,oDAAgB,2CAAf,EAAqB,KAAU,WAAW,GAAG,yCAAyC,SAAS,GAAI,GAAG,SAAvG;AAAA;AAAA;AAAA;AAAA,OAA8G,CAAE;AAC3HC,OAAM;AACN,WAAW,cAA6B,0CAAM;AAC9C,IAAM,mBAAmB,cAAAR,QAAM,WAAWS,QAAO,CAAC;AAAA,EAChD;AAAA,EACA,GAAG;AACL,GAAG,QAAQ,oDAAgB,2CAAf,EAA2B,KAAU,WAAW,GAAG,iCAAiC,SAAS,GAAI,GAAG,SAArG;AAAA;AAAA;AAAA;AAAA,OAA4G,CAAE;AACzHC,QAAO;AACP,iBAAiB,cAA6B,0CAAY;AAE1D,IAAIC;AAAJ,IAAQC;AAAR,IAAaC;AAAb,IAAkBC;AAAlB,IAAuBC;AAAvB,IAA4BC;AAA5B,IAAiCC;AAAjC,IAAsCC;AAAtC,IAA2CC;AAA3C,IAAgDC;AAAhD,IAAsDC;AACtD,aAAaV,MAAI,aAAa;AAC9B,aAAaC,MAAK,+BAA+B;AACjD,aAAaC,MAAK,cAAc;AAChC,aAAaC,MAAK,+BAA+B;AACjD,aAAaC,MAAK,cAAc;AAChC,aAAaC,MAAK,aAAa;AAC/B,aAAaC,MAAK,aAAa;AAC/B,aAAaC,MAAK,6BAA6B;AAC/C,aAAaC,MAAK,YAAY;AAC9B,aAAaC,OAAM,mCAAmC;AACtD,aAAaC,OAAM,kBAAkB;AAErC,OAAO,eAAe;AACtB,OAAO,eAAe;;;AC/FtB,IAAAC,iBAAkB;;;;;;;;;;AEjBlB,IAAMC,yCAAmBC,kCAAAA,eAA2CC,MAA3C;AAiBzB,SAASC,0CAAaC,UAAsB;AAC1C,QAAMC,gBAAYC,cAAAA,YAAiBC,sCAAjB;AAClB,SAAOH,YAAYC,aAAa;;;;;;;ACtBlC,IAAM,QAAQ,CAAC,OAAO,SAAS,UAAU,MAAM;AAG/C,IAAM,MAAM,KAAK;AACjB,IAAM,MAAM,KAAK;AACjB,IAAM,QAAQ,KAAK;AACnB,IAAM,QAAQ,KAAK;AACnB,IAAM,eAAe,QAAM;AAAA,EACzB,GAAG;AAAA,EACH,GAAG;AACL;AACA,IAAM,kBAAkB;AAAA,EACtB,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,KAAK;AACP;AACA,IAAM,uBAAuB;AAAA,EAC3B,OAAO;AAAA,EACP,KAAK;AACP;AACA,SAAS,MAAM,OAAO,OAAO,KAAK;AAChC,SAAO,IAAI,OAAO,IAAI,OAAO,GAAG,CAAC;AACnC;AACA,SAAS,SAAS,OAAO,OAAO;AAC9B,SAAO,OAAO,UAAU,aAAa,MAAM,KAAK,IAAI;AACtD;AACA,SAAS,QAAQ,WAAW;AAC1B,SAAO,UAAU,MAAM,GAAG,EAAE,CAAC;AAC/B;AACA,SAAS,aAAa,WAAW;AAC/B,SAAO,UAAU,MAAM,GAAG,EAAE,CAAC;AAC/B;AACA,SAAS,gBAAgB,MAAM;AAC7B,SAAO,SAAS,MAAM,MAAM;AAC9B;AACA,SAAS,cAAc,MAAM;AAC3B,SAAO,SAAS,MAAM,WAAW;AACnC;AACA,SAAS,YAAY,WAAW;AAC9B,SAAO,CAAC,OAAO,QAAQ,EAAE,SAAS,QAAQ,SAAS,CAAC,IAAI,MAAM;AAChE;AACA,SAAS,iBAAiB,WAAW;AACnC,SAAO,gBAAgB,YAAY,SAAS,CAAC;AAC/C;AACA,SAAS,kBAAkB,WAAW,OAAO,KAAK;AAChD,MAAI,QAAQ,QAAQ;AAClB,UAAM;AAAA,EACR;AACA,QAAM,YAAY,aAAa,SAAS;AACxC,QAAM,gBAAgB,iBAAiB,SAAS;AAChD,QAAM,SAAS,cAAc,aAAa;AAC1C,MAAI,oBAAoB,kBAAkB,MAAM,eAAe,MAAM,QAAQ,WAAW,UAAU,SAAS,cAAc,UAAU,WAAW;AAC9I,MAAI,MAAM,UAAU,MAAM,IAAI,MAAM,SAAS,MAAM,GAAG;AACpD,wBAAoB,qBAAqB,iBAAiB;AAAA,EAC5D;AACA,SAAO,CAAC,mBAAmB,qBAAqB,iBAAiB,CAAC;AACpE;AACA,SAAS,sBAAsB,WAAW;AACxC,QAAM,oBAAoB,qBAAqB,SAAS;AACxD,SAAO,CAAC,8BAA8B,SAAS,GAAG,mBAAmB,8BAA8B,iBAAiB,CAAC;AACvH;AACA,SAAS,8BAA8B,WAAW;AAChD,SAAO,UAAU,QAAQ,cAAc,eAAa,qBAAqB,SAAS,CAAC;AACrF;AACA,SAAS,YAAY,MAAM,SAAS,KAAK;AACvC,QAAM,KAAK,CAAC,QAAQ,OAAO;AAC3B,QAAM,KAAK,CAAC,SAAS,MAAM;AAC3B,QAAM,KAAK,CAAC,OAAO,QAAQ;AAC3B,QAAM,KAAK,CAAC,UAAU,KAAK;AAC3B,UAAQ,MAAM;AAAA,IACZ,KAAK;AAAA,IACL,KAAK;AACH,UAAI;AAAK,eAAO,UAAU,KAAK;AAC/B,aAAO,UAAU,KAAK;AAAA,IACxB,KAAK;AAAA,IACL,KAAK;AACH,aAAO,UAAU,KAAK;AAAA,IACxB;AACE,aAAO,CAAC;AAAA,EACZ;AACF;AACA,SAAS,0BAA0B,WAAW,eAAe,WAAW,KAAK;AAC3E,QAAM,YAAY,aAAa,SAAS;AACxC,MAAI,OAAO,YAAY,QAAQ,SAAS,GAAG,cAAc,SAAS,GAAG;AACrE,MAAI,WAAW;AACb,WAAO,KAAK,IAAI,UAAQ,OAAO,MAAM,SAAS;AAC9C,QAAI,eAAe;AACjB,aAAO,KAAK,OAAO,KAAK,IAAI,6BAA6B,CAAC;AAAA,IAC5D;AAAA,EACF;AACA,SAAO;AACT;AACA,SAAS,qBAAqB,WAAW;AACvC,SAAO,UAAU,QAAQ,0BAA0B,UAAQ,gBAAgB,IAAI,CAAC;AAClF;AACA,SAAS,oBAAoB,SAAS;AACpC,SAAO;AAAA,IACL,KAAK;AAAA,IACL,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,GAAG;AAAA,EACL;AACF;AACA,SAAS,iBAAiB,SAAS;AACjC,SAAO,OAAO,YAAY,WAAW,oBAAoB,OAAO,IAAI;AAAA,IAClE,KAAK;AAAA,IACL,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,MAAM;AAAA,EACR;AACF;AACA,SAAS,iBAAiB,MAAM;AAC9B,SAAO;AAAA,IACL,GAAG;AAAA,IACH,KAAK,KAAK;AAAA,IACV,MAAM,KAAK;AAAA,IACX,OAAO,KAAK,IAAI,KAAK;AAAA,IACrB,QAAQ,KAAK,IAAI,KAAK;AAAA,EACxB;AACF;;;ACtHA,SAAS,2BAA2B,MAAM,WAAW,KAAK;AACxD,MAAI;AAAA,IACF;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,WAAW,YAAY,SAAS;AACtC,QAAM,gBAAgB,iBAAiB,SAAS;AAChD,QAAM,cAAc,cAAc,aAAa;AAC/C,QAAM,OAAO,QAAQ,SAAS;AAC9B,QAAM,aAAa,aAAa;AAChC,QAAM,UAAU,UAAU,IAAI,UAAU,QAAQ,IAAI,SAAS,QAAQ;AACrE,QAAM,UAAU,UAAU,IAAI,UAAU,SAAS,IAAI,SAAS,SAAS;AACvE,QAAM,cAAc,UAAU,WAAW,IAAI,IAAI,SAAS,WAAW,IAAI;AACzE,MAAI;AACJ,UAAQ,MAAM;AAAA,IACZ,KAAK;AACH,eAAS;AAAA,QACP,GAAG;AAAA,QACH,GAAG,UAAU,IAAI,SAAS;AAAA,MAC5B;AACA;AAAA,IACF,KAAK;AACH,eAAS;AAAA,QACP,GAAG;AAAA,QACH,GAAG,UAAU,IAAI,UAAU;AAAA,MAC7B;AACA;AAAA,IACF,KAAK;AACH,eAAS;AAAA,QACP,GAAG,UAAU,IAAI,UAAU;AAAA,QAC3B,GAAG;AAAA,MACL;AACA;AAAA,IACF,KAAK;AACH,eAAS;AAAA,QACP,GAAG,UAAU,IAAI,SAAS;AAAA,QAC1B,GAAG;AAAA,MACL;AACA;AAAA,IACF;AACE,eAAS;AAAA,QACP,GAAG,UAAU;AAAA,QACb,GAAG,UAAU;AAAA,MACf;AAAA,EACJ;AACA,UAAQ,aAAa,SAAS,GAAG;AAAA,IAC/B,KAAK;AACH,aAAO,aAAa,KAAK,eAAe,OAAO,aAAa,KAAK;AACjE;AAAA,IACF,KAAK;AACH,aAAO,aAAa,KAAK,eAAe,OAAO,aAAa,KAAK;AACjE;AAAA,EACJ;AACA,SAAO;AACT;AASA,IAAM,kBAAkB,OAAO,WAAW,UAAU,WAAW;AAC7D,QAAM;AAAA,IACJ,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,aAAa,CAAC;AAAA,IACd,UAAAG;AAAA,EACF,IAAI;AACJ,QAAM,kBAAkB,WAAW,OAAO,OAAO;AACjD,QAAM,MAAM,OAAOA,UAAS,SAAS,OAAO,SAASA,UAAS,MAAM,QAAQ;AAC5E,MAAI,QAAQ,MAAMA,UAAS,gBAAgB;AAAA,IACzC;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AACD,MAAI;AAAA,IACF;AAAA,IACA;AAAA,EACF,IAAI,2BAA2B,OAAO,WAAW,GAAG;AACpD,MAAI,oBAAoB;AACxB,MAAI,iBAAiB,CAAC;AACtB,MAAI,aAAa;AACjB,WAAS,IAAI,GAAG,IAAI,gBAAgB,QAAQ,KAAK;AAC/C,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACF,IAAI,gBAAgB,CAAC;AACrB,UAAM;AAAA,MACJ,GAAG;AAAA,MACH,GAAG;AAAA,MACH;AAAA,MACA;AAAA,IACF,IAAI,MAAM,GAAG;AAAA,MACX;AAAA,MACA;AAAA,MACA,kBAAkB;AAAA,MAClB,WAAW;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,MACA,UAAAA;AAAA,MACA,UAAU;AAAA,QACR;AAAA,QACA;AAAA,MACF;AAAA,IACF,CAAC;AACD,QAAI,SAAS,OAAO,QAAQ;AAC5B,QAAI,SAAS,OAAO,QAAQ;AAC5B,qBAAiB;AAAA,MACf,GAAG;AAAA,MACH,CAAC,IAAI,GAAG;AAAA,QACN,GAAG,eAAe,IAAI;AAAA,QACtB,GAAG;AAAA,MACL;AAAA,IACF;AACA,QAAI,SAAS,cAAc,IAAI;AAC7B;AACA,UAAI,OAAO,UAAU,UAAU;AAC7B,YAAI,MAAM,WAAW;AACnB,8BAAoB,MAAM;AAAA,QAC5B;AACA,YAAI,MAAM,OAAO;AACf,kBAAQ,MAAM,UAAU,OAAO,MAAMA,UAAS,gBAAgB;AAAA,YAC5D;AAAA,YACA;AAAA,YACA;AAAA,UACF,CAAC,IAAI,MAAM;AAAA,QACb;AACA,SAAC;AAAA,UACC;AAAA,UACA;AAAA,QACF,IAAI,2BAA2B,OAAO,mBAAmB,GAAG;AAAA,MAC9D;AACA,UAAI;AACJ;AAAA,IACF;AAAA,EACF;AACA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA,WAAW;AAAA,IACX;AAAA,IACA;AAAA,EACF;AACF;AAUA,eAAe,eAAe,OAAO,SAAS;AAC5C,MAAI;AACJ,MAAI,YAAY,QAAQ;AACtB,cAAU,CAAC;AAAA,EACb;AACA,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA,UAAAA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM;AAAA,IACJ,WAAW;AAAA,IACX,eAAe;AAAA,IACf,iBAAiB;AAAA,IACjB,cAAc;AAAA,IACd,UAAU;AAAA,EACZ,IAAI,SAAS,SAAS,KAAK;AAC3B,QAAM,gBAAgB,iBAAiB,OAAO;AAC9C,QAAM,aAAa,mBAAmB,aAAa,cAAc;AACjE,QAAM,UAAU,SAAS,cAAc,aAAa,cAAc;AAClE,QAAM,qBAAqB,iBAAiB,MAAMA,UAAS,gBAAgB;AAAA,IACzE,WAAW,wBAAwB,OAAOA,UAAS,aAAa,OAAO,SAASA,UAAS,UAAU,OAAO,OAAO,OAAO,wBAAwB,QAAQ,UAAU,QAAQ,kBAAmB,OAAOA,UAAS,sBAAsB,OAAO,SAASA,UAAS,mBAAmB,SAAS,QAAQ;AAAA,IAChS;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC,CAAC;AACF,QAAM,OAAO,mBAAmB,aAAa;AAAA,IAC3C,GAAG,MAAM;AAAA,IACT;AAAA,IACA;AAAA,EACF,IAAI,MAAM;AACV,QAAM,eAAe,OAAOA,UAAS,mBAAmB,OAAO,SAASA,UAAS,gBAAgB,SAAS,QAAQ;AAClH,QAAM,cAAe,OAAOA,UAAS,aAAa,OAAO,SAASA,UAAS,UAAU,YAAY,KAAO,OAAOA,UAAS,YAAY,OAAO,SAASA,UAAS,SAAS,YAAY,MAAO;AAAA,IACvL,GAAG;AAAA,IACH,GAAG;AAAA,EACL,IAAI;AAAA,IACF,GAAG;AAAA,IACH,GAAG;AAAA,EACL;AACA,QAAM,oBAAoB,iBAAiBA,UAAS,wDAAwD,MAAMA,UAAS,sDAAsD;AAAA,IAC/K;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC,IAAI,IAAI;AACT,SAAO;AAAA,IACL,MAAM,mBAAmB,MAAM,kBAAkB,MAAM,cAAc,OAAO,YAAY;AAAA,IACxF,SAAS,kBAAkB,SAAS,mBAAmB,SAAS,cAAc,UAAU,YAAY;AAAA,IACpG,OAAO,mBAAmB,OAAO,kBAAkB,OAAO,cAAc,QAAQ,YAAY;AAAA,IAC5F,QAAQ,kBAAkB,QAAQ,mBAAmB,QAAQ,cAAc,SAAS,YAAY;AAAA,EAClG;AACF;AAOA,IAAM,QAAQ,cAAY;AAAA,EACxB,MAAM;AAAA,EACN;AAAA,EACA,MAAM,GAAG,OAAO;AACd,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,UAAAA;AAAA,MACA;AAAA,IACF,IAAI;AAEJ,UAAM;AAAA,MACJ;AAAA,MACA,UAAU;AAAA,IACZ,IAAI,SAAS,SAAS,KAAK,KAAK,CAAC;AACjC,QAAI,WAAW,MAAM;AACnB,aAAO,CAAC;AAAA,IACV;AACA,UAAM,gBAAgB,iBAAiB,OAAO;AAC9C,UAAM,SAAS;AAAA,MACb;AAAA,MACA;AAAA,IACF;AACA,UAAM,OAAO,iBAAiB,SAAS;AACvC,UAAM,SAAS,cAAc,IAAI;AACjC,UAAM,kBAAkB,MAAMA,UAAS,cAAc,OAAO;AAC5D,UAAM,UAAU,SAAS;AACzB,UAAM,UAAU,UAAU,QAAQ;AAClC,UAAM,UAAU,UAAU,WAAW;AACrC,UAAM,aAAa,UAAU,iBAAiB;AAC9C,UAAM,UAAU,MAAM,UAAU,MAAM,IAAI,MAAM,UAAU,IAAI,IAAI,OAAO,IAAI,IAAI,MAAM,SAAS,MAAM;AACtG,UAAM,YAAY,OAAO,IAAI,IAAI,MAAM,UAAU,IAAI;AACrD,UAAM,oBAAoB,OAAOA,UAAS,mBAAmB,OAAO,SAASA,UAAS,gBAAgB,OAAO;AAC7G,QAAI,aAAa,oBAAoB,kBAAkB,UAAU,IAAI;AAGrE,QAAI,CAAC,cAAc,CAAE,OAAOA,UAAS,aAAa,OAAO,SAASA,UAAS,UAAU,iBAAiB,IAAK;AACzG,mBAAa,SAAS,SAAS,UAAU,KAAK,MAAM,SAAS,MAAM;AAAA,IACrE;AACA,UAAM,oBAAoB,UAAU,IAAI,YAAY;AAIpD,UAAM,yBAAyB,aAAa,IAAI,gBAAgB,MAAM,IAAI,IAAI;AAC9E,UAAM,aAAa,IAAI,cAAc,OAAO,GAAG,sBAAsB;AACrE,UAAM,aAAa,IAAI,cAAc,OAAO,GAAG,sBAAsB;AAIrE,UAAM,QAAQ;AACd,UAAMC,OAAM,aAAa,gBAAgB,MAAM,IAAI;AACnD,UAAM,SAAS,aAAa,IAAI,gBAAgB,MAAM,IAAI,IAAI;AAC9D,UAAMC,UAAS,MAAM,OAAO,QAAQD,IAAG;AAMvC,UAAM,kBAAkB,aAAa,SAAS,KAAK,QAAQ,UAAUC,WAAU,MAAM,UAAU,MAAM,IAAI,KAAK,SAAS,QAAQ,aAAa,cAAc,gBAAgB,MAAM,IAAI,IAAI;AACxL,UAAM,kBAAkB,kBAAkB,SAAS,QAAQ,QAAQ,SAASD,OAAM,SAAS;AAC3F,WAAO;AAAA,MACL,CAAC,IAAI,GAAG,OAAO,IAAI,IAAI;AAAA,MACvB,MAAM;AAAA,QACJ,CAAC,IAAI,GAAGC;AAAA,QACR,cAAc,SAASA,UAAS;AAAA,MAClC;AAAA,IACF;AAAA,EACF;AACF;AA+GA,IAAM,OAAO,SAAU,SAAS;AAC9B,MAAI,YAAY,QAAQ;AACtB,cAAU,CAAC;AAAA,EACb;AACA,SAAO;AAAA,IACL,MAAM;AAAA,IACN;AAAA,IACA,MAAM,GAAG,OAAO;AACd,UAAI;AACJ,YAAM;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,UAAAC;AAAA,QACA;AAAA,MACF,IAAI;AACJ,YAAM;AAAA,QACJ,UAAU,gBAAgB;AAAA,QAC1B,WAAW,iBAAiB;AAAA,QAC5B,oBAAoB;AAAA,QACpB,mBAAmB;AAAA,QACnB,4BAA4B;AAAA,QAC5B,gBAAgB;AAAA,QAChB,GAAG;AAAA,MACL,IAAI,SAAS,SAAS,KAAK;AAC3B,YAAM,OAAO,QAAQ,SAAS;AAC9B,YAAM,kBAAkB,QAAQ,gBAAgB,MAAM;AACtD,YAAM,MAAM,OAAOA,UAAS,SAAS,OAAO,SAASA,UAAS,MAAM,SAAS,QAAQ;AACrF,YAAM,qBAAqB,gCAAgC,mBAAmB,CAAC,gBAAgB,CAAC,qBAAqB,gBAAgB,CAAC,IAAI,sBAAsB,gBAAgB;AAChL,UAAI,CAAC,+BAA+B,8BAA8B,QAAQ;AACxE,2BAAmB,KAAK,GAAG,0BAA0B,kBAAkB,eAAe,2BAA2B,GAAG,CAAC;AAAA,MACvH;AACA,YAAMC,cAAa,CAAC,kBAAkB,GAAG,kBAAkB;AAC3D,YAAM,WAAW,MAAM,eAAe,OAAO,qBAAqB;AAClE,YAAM,YAAY,CAAC;AACnB,UAAI,kBAAkB,uBAAuB,eAAe,SAAS,OAAO,SAAS,qBAAqB,cAAc,CAAC;AACzH,UAAI,eAAe;AACjB,kBAAU,KAAK,SAAS,IAAI,CAAC;AAAA,MAC/B;AACA,UAAI,gBAAgB;AAClB,cAAMC,SAAQ,kBAAkB,WAAW,OAAO,GAAG;AACrD,kBAAU,KAAK,SAASA,OAAM,CAAC,CAAC,GAAG,SAASA,OAAM,CAAC,CAAC,CAAC;AAAA,MACvD;AACA,sBAAgB,CAAC,GAAG,eAAe;AAAA,QACjC;AAAA,QACA;AAAA,MACF,CAAC;AAGD,UAAI,CAAC,UAAU,MAAM,CAAAC,UAAQA,SAAQ,CAAC,GAAG;AACvC,YAAI,uBAAuB;AAC3B,cAAM,eAAe,wBAAwB,eAAe,SAAS,OAAO,SAAS,sBAAsB,UAAU,KAAK;AAC1H,cAAM,gBAAgBF,YAAW,SAAS;AAC1C,YAAI,eAAe;AAEjB,iBAAO;AAAA,YACL,MAAM;AAAA,cACJ,OAAO;AAAA,cACP,WAAW;AAAA,YACb;AAAA,YACA,OAAO;AAAA,cACL,WAAW;AAAA,YACb;AAAA,UACF;AAAA,QACF;AAIA,YAAI,kBAAkB,wBAAwB,cAAc,OAAO,OAAK,EAAE,UAAU,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,GAAG,MAAM,EAAE,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,EAAE,CAAC,MAAM,OAAO,SAAS,sBAAsB;AAG1L,YAAI,CAAC,gBAAgB;AACnB,kBAAQ,kBAAkB;AAAA,YACxB,KAAK,WACH;AACE,kBAAI;AACJ,oBAAMG,cAAa,wBAAwB,cAAc,IAAI,OAAK,CAAC,EAAE,WAAW,EAAE,UAAU,OAAO,CAAAC,cAAYA,YAAW,CAAC,EAAE,OAAO,CAAC,KAAKA,cAAa,MAAMA,WAAU,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,MAAM,OAAO,SAAS,sBAAsB,CAAC;AACtP,kBAAID,YAAW;AACb,iCAAiBA;AAAA,cACnB;AACA;AAAA,YACF;AAAA,YACF,KAAK;AACH,+BAAiB;AACjB;AAAA,UACJ;AAAA,QACF;AACA,YAAI,cAAc,gBAAgB;AAChC,iBAAO;AAAA,YACL,OAAO;AAAA,cACL,WAAW;AAAA,YACb;AAAA,UACF;AAAA,QACF;AAAA,MACF;AACA,aAAO,CAAC;AAAA,IACV;AAAA,EACF;AACF;AAEA,SAAS,eAAe,UAAU,MAAM;AACtC,SAAO;AAAA,IACL,KAAK,SAAS,MAAM,KAAK;AAAA,IACzB,OAAO,SAAS,QAAQ,KAAK;AAAA,IAC7B,QAAQ,SAAS,SAAS,KAAK;AAAA,IAC/B,MAAM,SAAS,OAAO,KAAK;AAAA,EAC7B;AACF;AACA,SAAS,sBAAsB,UAAU;AACvC,SAAO,MAAM,KAAK,UAAQ,SAAS,IAAI,KAAK,CAAC;AAC/C;AAMA,IAAM,OAAO,SAAU,SAAS;AAC9B,MAAI,YAAY,QAAQ;AACtB,cAAU,CAAC;AAAA,EACb;AACA,SAAO;AAAA,IACL,MAAM;AAAA,IACN;AAAA,IACA,MAAM,GAAG,OAAO;AACd,YAAM;AAAA,QACJ;AAAA,MACF,IAAI;AACJ,YAAM;AAAA,QACJ,WAAW;AAAA,QACX,GAAG;AAAA,MACL,IAAI,SAAS,SAAS,KAAK;AAC3B,cAAQ,UAAU;AAAA,QAChB,KAAK,mBACH;AACE,gBAAM,WAAW,MAAM,eAAe,OAAO;AAAA,YAC3C,GAAG;AAAA,YACH,gBAAgB;AAAA,UAClB,CAAC;AACD,gBAAM,UAAU,eAAe,UAAU,MAAM,SAAS;AACxD,iBAAO;AAAA,YACL,MAAM;AAAA,cACJ,wBAAwB;AAAA,cACxB,iBAAiB,sBAAsB,OAAO;AAAA,YAChD;AAAA,UACF;AAAA,QACF;AAAA,QACF,KAAK,WACH;AACE,gBAAM,WAAW,MAAM,eAAe,OAAO;AAAA,YAC3C,GAAG;AAAA,YACH,aAAa;AAAA,UACf,CAAC;AACD,gBAAM,UAAU,eAAe,UAAU,MAAM,QAAQ;AACvD,iBAAO;AAAA,YACL,MAAM;AAAA,cACJ,gBAAgB;AAAA,cAChB,SAAS,sBAAsB,OAAO;AAAA,YACxC;AAAA,UACF;AAAA,QACF;AAAA,QACF,SACE;AACE,iBAAO,CAAC;AAAA,QACV;AAAA,MACJ;AAAA,IACF;AAAA,EACF;AACF;AAuIA,eAAe,qBAAqB,OAAO,SAAS;AAClD,QAAM;AAAA,IACJ;AAAA,IACA,UAAAE;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,MAAM,OAAOA,UAAS,SAAS,OAAO,SAASA,UAAS,MAAM,SAAS,QAAQ;AACrF,QAAM,OAAO,QAAQ,SAAS;AAC9B,QAAM,YAAY,aAAa,SAAS;AACxC,QAAM,aAAa,YAAY,SAAS,MAAM;AAC9C,QAAM,gBAAgB,CAAC,QAAQ,KAAK,EAAE,SAAS,IAAI,IAAI,KAAK;AAC5D,QAAM,iBAAiB,OAAO,aAAa,KAAK;AAChD,QAAM,WAAW,SAAS,SAAS,KAAK;AAGxC,MAAI;AAAA,IACF;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,OAAO,aAAa,WAAW;AAAA,IACjC,UAAU;AAAA,IACV,WAAW;AAAA,IACX,eAAe;AAAA,EACjB,IAAI;AAAA,IACF,UAAU;AAAA,IACV,WAAW;AAAA,IACX,eAAe;AAAA,IACf,GAAG;AAAA,EACL;AACA,MAAI,aAAa,OAAO,kBAAkB,UAAU;AAClD,gBAAY,cAAc,QAAQ,gBAAgB,KAAK;AAAA,EACzD;AACA,SAAO,aAAa;AAAA,IAClB,GAAG,YAAY;AAAA,IACf,GAAG,WAAW;AAAA,EAChB,IAAI;AAAA,IACF,GAAG,WAAW;AAAA,IACd,GAAG,YAAY;AAAA,EACjB;AACF;AASA,IAAM,SAAS,SAAU,SAAS;AAChC,MAAI,YAAY,QAAQ;AACtB,cAAU;AAAA,EACZ;AACA,SAAO;AAAA,IACL,MAAM;AAAA,IACN;AAAA,IACA,MAAM,GAAG,OAAO;AACd,YAAM;AAAA,QACJ;AAAA,QACA;AAAA,MACF,IAAI;AACJ,YAAM,aAAa,MAAM,qBAAqB,OAAO,OAAO;AAC5D,aAAO;AAAA,QACL,GAAG,IAAI,WAAW;AAAA,QAClB,GAAG,IAAI,WAAW;AAAA,QAClB,MAAM;AAAA,MACR;AAAA,IACF;AAAA,EACF;AACF;AAOA,IAAM,QAAQ,SAAU,SAAS;AAC/B,MAAI,YAAY,QAAQ;AACtB,cAAU,CAAC;AAAA,EACb;AACA,SAAO;AAAA,IACL,MAAM;AAAA,IACN;AAAA,IACA,MAAM,GAAG,OAAO;AACd,YAAM;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,MACF,IAAI;AACJ,YAAM;AAAA,QACJ,UAAU,gBAAgB;AAAA,QAC1B,WAAW,iBAAiB;AAAA,QAC5B,UAAU;AAAA,UACR,IAAI,UAAQ;AACV,gBAAI;AAAA,cACF,GAAAC;AAAA,cACA,GAAAC;AAAA,YACF,IAAI;AACJ,mBAAO;AAAA,cACL,GAAAD;AAAA,cACA,GAAAC;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,QACA,GAAG;AAAA,MACL,IAAI,SAAS,SAAS,KAAK;AAC3B,YAAM,SAAS;AAAA,QACb;AAAA,QACA;AAAA,MACF;AACA,YAAM,WAAW,MAAM,eAAe,OAAO,qBAAqB;AAClE,YAAM,YAAY,YAAY,QAAQ,SAAS,CAAC;AAChD,YAAM,WAAW,gBAAgB,SAAS;AAC1C,UAAI,gBAAgB,OAAO,QAAQ;AACnC,UAAI,iBAAiB,OAAO,SAAS;AACrC,UAAI,eAAe;AACjB,cAAM,UAAU,aAAa,MAAM,QAAQ;AAC3C,cAAM,UAAU,aAAa,MAAM,WAAW;AAC9C,cAAMC,OAAM,gBAAgB,SAAS,OAAO;AAC5C,cAAMC,OAAM,gBAAgB,SAAS,OAAO;AAC5C,wBAAgB,MAAMD,MAAK,eAAeC,IAAG;AAAA,MAC/C;AACA,UAAI,gBAAgB;AAClB,cAAM,UAAU,cAAc,MAAM,QAAQ;AAC5C,cAAM,UAAU,cAAc,MAAM,WAAW;AAC/C,cAAMD,OAAM,iBAAiB,SAAS,OAAO;AAC7C,cAAMC,OAAM,iBAAiB,SAAS,OAAO;AAC7C,yBAAiB,MAAMD,MAAK,gBAAgBC,IAAG;AAAA,MACjD;AACA,YAAM,gBAAgB,QAAQ,GAAG;AAAA,QAC/B,GAAG;AAAA,QACH,CAAC,QAAQ,GAAG;AAAA,QACZ,CAAC,SAAS,GAAG;AAAA,MACf,CAAC;AACD,aAAO;AAAA,QACL,GAAG;AAAA,QACH,MAAM;AAAA,UACJ,GAAG,cAAc,IAAI;AAAA,UACrB,GAAG,cAAc,IAAI;AAAA,QACvB;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AAIA,IAAM,aAAa,SAAU,SAAS;AACpC,MAAI,YAAY,QAAQ;AACtB,cAAU,CAAC;AAAA,EACb;AACA,SAAO;AAAA,IACL;AAAA,IACA,GAAG,OAAO;AACR,YAAM;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,IAAI;AACJ,YAAM;AAAA,QACJ,QAAAC,UAAS;AAAA,QACT,UAAU,gBAAgB;AAAA,QAC1B,WAAW,iBAAiB;AAAA,MAC9B,IAAI,SAAS,SAAS,KAAK;AAC3B,YAAM,SAAS;AAAA,QACb;AAAA,QACA;AAAA,MACF;AACA,YAAM,YAAY,YAAY,SAAS;AACvC,YAAM,WAAW,gBAAgB,SAAS;AAC1C,UAAI,gBAAgB,OAAO,QAAQ;AACnC,UAAI,iBAAiB,OAAO,SAAS;AACrC,YAAM,YAAY,SAASA,SAAQ,KAAK;AACxC,YAAM,iBAAiB,OAAO,cAAc,WAAW;AAAA,QACrD,UAAU;AAAA,QACV,WAAW;AAAA,MACb,IAAI;AAAA,QACF,UAAU;AAAA,QACV,WAAW;AAAA,QACX,GAAG;AAAA,MACL;AACA,UAAI,eAAe;AACjB,cAAM,MAAM,aAAa,MAAM,WAAW;AAC1C,cAAM,WAAW,MAAM,UAAU,QAAQ,IAAI,MAAM,SAAS,GAAG,IAAI,eAAe;AAClF,cAAM,WAAW,MAAM,UAAU,QAAQ,IAAI,MAAM,UAAU,GAAG,IAAI,eAAe;AACnF,YAAI,gBAAgB,UAAU;AAC5B,0BAAgB;AAAA,QAClB,WAAW,gBAAgB,UAAU;AACnC,0BAAgB;AAAA,QAClB;AAAA,MACF;AACA,UAAI,gBAAgB;AAClB,YAAI,uBAAuB;AAC3B,cAAM,MAAM,aAAa,MAAM,UAAU;AACzC,cAAM,eAAe,CAAC,OAAO,MAAM,EAAE,SAAS,QAAQ,SAAS,CAAC;AAChE,cAAM,WAAW,MAAM,UAAU,SAAS,IAAI,MAAM,SAAS,GAAG,KAAK,iBAAiB,wBAAwB,eAAe,WAAW,OAAO,SAAS,sBAAsB,SAAS,MAAM,IAAI,MAAM,eAAe,IAAI,eAAe;AACzO,cAAM,WAAW,MAAM,UAAU,SAAS,IAAI,MAAM,UAAU,GAAG,KAAK,eAAe,MAAM,yBAAyB,eAAe,WAAW,OAAO,SAAS,uBAAuB,SAAS,MAAM,MAAM,eAAe,eAAe,YAAY;AACpP,YAAI,iBAAiB,UAAU;AAC7B,2BAAiB;AAAA,QACnB,WAAW,iBAAiB,UAAU;AACpC,2BAAiB;AAAA,QACnB;AAAA,MACF;AACA,aAAO;AAAA,QACL,CAAC,QAAQ,GAAG;AAAA,QACZ,CAAC,SAAS,GAAG;AAAA,MACf;AAAA,IACF;AAAA,EACF;AACF;AAQA,IAAM,OAAO,SAAU,SAAS;AAC9B,MAAI,YAAY,QAAQ;AACtB,cAAU,CAAC;AAAA,EACb;AACA,SAAO;AAAA,IACL,MAAM;AAAA,IACN;AAAA,IACA,MAAM,GAAG,OAAO;AACd,YAAM;AAAA,QACJ;AAAA,QACA;AAAA,QACA,UAAAL;AAAA,QACA;AAAA,MACF,IAAI;AACJ,YAAM;AAAA,QACJ,QAAQ,MAAM;AAAA,QAAC;AAAA,QACf,GAAG;AAAA,MACL,IAAI,SAAS,SAAS,KAAK;AAC3B,YAAM,WAAW,MAAM,eAAe,OAAO,qBAAqB;AAClE,YAAM,OAAO,QAAQ,SAAS;AAC9B,YAAM,YAAY,aAAa,SAAS;AACxC,YAAM,UAAU,YAAY,SAAS,MAAM;AAC3C,YAAM;AAAA,QACJ;AAAA,QACA;AAAA,MACF,IAAI,MAAM;AACV,UAAI;AACJ,UAAI;AACJ,UAAI,SAAS,SAAS,SAAS,UAAU;AACvC,qBAAa;AACb,oBAAY,eAAgB,OAAOA,UAAS,SAAS,OAAO,SAASA,UAAS,MAAM,SAAS,QAAQ,KAAM,UAAU,SAAS,SAAS;AAAA,MACzI,OAAO;AACL,oBAAY;AACZ,qBAAa,cAAc,QAAQ,QAAQ;AAAA,MAC7C;AACA,YAAM,0BAA0B,SAAS,SAAS,UAAU;AAC5D,YAAM,yBAAyB,QAAQ,SAAS,SAAS;AACzD,YAAM,UAAU,CAAC,MAAM,eAAe;AACtC,UAAI,kBAAkB;AACtB,UAAI,iBAAiB;AACrB,UAAI,SAAS;AACX,cAAM,uBAAuB,QAAQ,SAAS,OAAO,SAAS;AAC9D,yBAAiB,aAAa,UAAU,IAAI,wBAAwB,oBAAoB,IAAI;AAAA,MAC9F,OAAO;AACL,cAAM,wBAAwB,SAAS,SAAS,MAAM,SAAS;AAC/D,0BAAkB,aAAa,UAAU,IAAI,yBAAyB,qBAAqB,IAAI;AAAA,MACjG;AACA,UAAI,WAAW,CAAC,WAAW;AACzB,cAAM,OAAO,IAAI,SAAS,MAAM,CAAC;AACjC,cAAM,OAAO,IAAI,SAAS,OAAO,CAAC;AAClC,cAAM,OAAO,IAAI,SAAS,KAAK,CAAC;AAChC,cAAM,OAAO,IAAI,SAAS,QAAQ,CAAC;AACnC,YAAI,SAAS;AACX,2BAAiB,QAAQ,KAAK,SAAS,KAAK,SAAS,IAAI,OAAO,OAAO,IAAI,SAAS,MAAM,SAAS,KAAK;AAAA,QAC1G,OAAO;AACL,4BAAkB,SAAS,KAAK,SAAS,KAAK,SAAS,IAAI,OAAO,OAAO,IAAI,SAAS,KAAK,SAAS,MAAM;AAAA,QAC5G;AAAA,MACF;AACA,YAAM,MAAM;AAAA,QACV,GAAG;AAAA,QACH;AAAA,QACA;AAAA,MACF,CAAC;AACD,YAAM,iBAAiB,MAAMA,UAAS,cAAc,SAAS,QAAQ;AACrE,UAAI,UAAU,eAAe,SAAS,WAAW,eAAe,QAAQ;AACtE,eAAO;AAAA,UACL,OAAO;AAAA,YACL,OAAO;AAAA,UACT;AAAA,QACF;AAAA,MACF;AACA,aAAO,CAAC;AAAA,IACV;AAAA,EACF;AACF;;;ACn+BA,SAAS,YAAY,MAAM;AACzB,MAAI,OAAO,IAAI,GAAG;AAChB,YAAQ,KAAK,YAAY,IAAI,YAAY;AAAA,EAC3C;AAIA,SAAO;AACT;AACA,SAAS,UAAU,MAAM;AACvB,MAAI;AACJ,UAAQ,QAAQ,OAAO,UAAU,sBAAsB,KAAK,kBAAkB,OAAO,SAAS,oBAAoB,gBAAgB;AACpI;AACA,SAAS,mBAAmB,MAAM;AAChC,MAAI;AACJ,UAAQ,QAAQ,OAAO,IAAI,IAAI,KAAK,gBAAgB,KAAK,aAAa,OAAO,aAAa,OAAO,SAAS,KAAK;AACjH;AACA,SAAS,OAAO,OAAO;AACrB,SAAO,iBAAiB,QAAQ,iBAAiB,UAAU,KAAK,EAAE;AACpE;AACA,SAAS,UAAU,OAAO;AACxB,SAAO,iBAAiB,WAAW,iBAAiB,UAAU,KAAK,EAAE;AACvE;AACA,SAAS,cAAc,OAAO;AAC5B,SAAO,iBAAiB,eAAe,iBAAiB,UAAU,KAAK,EAAE;AAC3E;AACA,SAAS,aAAa,OAAO;AAE3B,MAAI,OAAO,eAAe,aAAa;AACrC,WAAO;AAAA,EACT;AACA,SAAO,iBAAiB,cAAc,iBAAiB,UAAU,KAAK,EAAE;AAC1E;AACA,SAAS,kBAAkB,SAAS;AAClC,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,iBAAiB,OAAO;AAC5B,SAAO,kCAAkC,KAAK,WAAW,YAAY,SAAS,KAAK,CAAC,CAAC,UAAU,UAAU,EAAE,SAAS,OAAO;AAC7H;AACA,SAAS,eAAe,SAAS;AAC/B,SAAO,CAAC,SAAS,MAAM,IAAI,EAAE,SAAS,YAAY,OAAO,CAAC;AAC5D;AACA,SAAS,kBAAkB,SAAS;AAClC,QAAM,SAAS,SAAS;AACxB,QAAM,MAAM,iBAAiB,OAAO;AAGpC,SAAO,IAAI,cAAc,UAAU,IAAI,gBAAgB,WAAW,IAAI,gBAAgB,IAAI,kBAAkB,WAAW,UAAU,CAAC,WAAW,IAAI,iBAAiB,IAAI,mBAAmB,SAAS,UAAU,CAAC,WAAW,IAAI,SAAS,IAAI,WAAW,SAAS,UAAU,CAAC,aAAa,eAAe,QAAQ,EAAE,KAAK,YAAU,IAAI,cAAc,IAAI,SAAS,KAAK,CAAC,KAAK,CAAC,SAAS,UAAU,UAAU,SAAS,EAAE,KAAK,YAAU,IAAI,WAAW,IAAI,SAAS,KAAK,CAAC;AACnc;AACA,SAAS,mBAAmB,SAAS;AACnC,MAAI,cAAc,cAAc,OAAO;AACvC,SAAO,cAAc,WAAW,KAAK,CAAC,sBAAsB,WAAW,GAAG;AACxE,QAAI,kBAAkB,WAAW,GAAG;AAClC,aAAO;AAAA,IACT,OAAO;AACL,oBAAc,cAAc,WAAW;AAAA,IACzC;AAAA,EACF;AACA,SAAO;AACT;AACA,SAAS,WAAW;AAClB,MAAI,OAAO,QAAQ,eAAe,CAAC,IAAI;AAAU,WAAO;AACxD,SAAO,IAAI,SAAS,2BAA2B,MAAM;AACvD;AACA,SAAS,sBAAsB,MAAM;AACnC,SAAO,CAAC,QAAQ,QAAQ,WAAW,EAAE,SAAS,YAAY,IAAI,CAAC;AACjE;AACA,SAAS,iBAAiB,SAAS;AACjC,SAAO,UAAU,OAAO,EAAE,iBAAiB,OAAO;AACpD;AACA,SAAS,cAAc,SAAS;AAC9B,MAAI,UAAU,OAAO,GAAG;AACtB,WAAO;AAAA,MACL,YAAY,QAAQ;AAAA,MACpB,WAAW,QAAQ;AAAA,IACrB;AAAA,EACF;AACA,SAAO;AAAA,IACL,YAAY,QAAQ;AAAA,IACpB,WAAW,QAAQ;AAAA,EACrB;AACF;AACA,SAAS,cAAc,MAAM;AAC3B,MAAI,YAAY,IAAI,MAAM,QAAQ;AAChC,WAAO;AAAA,EACT;AACA,QAAM;AAAA;AAAA,IAEN,KAAK;AAAA,IAEL,KAAK;AAAA,IAEL,aAAa,IAAI,KAAK,KAAK;AAAA,IAE3B,mBAAmB,IAAI;AAAA;AACvB,SAAO,aAAa,MAAM,IAAI,OAAO,OAAO;AAC9C;AACA,SAAS,2BAA2B,MAAM;AACxC,QAAM,aAAa,cAAc,IAAI;AACrC,MAAI,sBAAsB,UAAU,GAAG;AACrC,WAAO,KAAK,gBAAgB,KAAK,cAAc,OAAO,KAAK;AAAA,EAC7D;AACA,MAAI,cAAc,UAAU,KAAK,kBAAkB,UAAU,GAAG;AAC9D,WAAO;AAAA,EACT;AACA,SAAO,2BAA2B,UAAU;AAC9C;AACA,SAAS,qBAAqB,MAAM,MAAM;AACxC,MAAI;AACJ,MAAI,SAAS,QAAQ;AACnB,WAAO,CAAC;AAAA,EACV;AACA,QAAM,qBAAqB,2BAA2B,IAAI;AAC1D,QAAM,SAAS,yBAAyB,uBAAuB,KAAK,kBAAkB,OAAO,SAAS,qBAAqB;AAC3H,QAAM,MAAM,UAAU,kBAAkB;AACxC,MAAI,QAAQ;AACV,WAAO,KAAK,OAAO,KAAK,IAAI,kBAAkB,CAAC,GAAG,kBAAkB,kBAAkB,IAAI,qBAAqB,CAAC,CAAC;AAAA,EACnH;AACA,SAAO,KAAK,OAAO,oBAAoB,qBAAqB,kBAAkB,CAAC;AACjF;;;ACpHA,SAAS,iBAAiB,SAAS;AACjC,QAAM,MAAM,iBAAiB,OAAO;AAGpC,MAAI,QAAQ,WAAW,IAAI,KAAK,KAAK;AACrC,MAAI,SAAS,WAAW,IAAI,MAAM,KAAK;AACvC,QAAM,YAAY,cAAc,OAAO;AACvC,QAAM,cAAc,YAAY,QAAQ,cAAc;AACtD,QAAM,eAAe,YAAY,QAAQ,eAAe;AACxD,QAAM,iBAAiB,MAAM,KAAK,MAAM,eAAe,MAAM,MAAM,MAAM;AACzE,MAAI,gBAAgB;AAClB,YAAQ;AACR,aAAS;AAAA,EACX;AACA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA,GAAG;AAAA,EACL;AACF;AAEA,SAAS,cAAc,SAAS;AAC9B,SAAO,CAAC,UAAU,OAAO,IAAI,QAAQ,iBAAiB;AACxD;AAEA,SAAS,SAAS,SAAS;AACzB,QAAM,aAAa,cAAc,OAAO;AACxC,MAAI,CAAC,cAAc,UAAU,GAAG;AAC9B,WAAO,aAAa,CAAC;AAAA,EACvB;AACA,QAAM,OAAO,WAAW,sBAAsB;AAC9C,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,iBAAiB,UAAU;AAC/B,MAAI,KAAK,IAAI,MAAM,KAAK,KAAK,IAAI,KAAK,SAAS;AAC/C,MAAI,KAAK,IAAI,MAAM,KAAK,MAAM,IAAI,KAAK,UAAU;AAIjD,MAAI,CAAC,KAAK,CAAC,OAAO,SAAS,CAAC,GAAG;AAC7B,QAAI;AAAA,EACN;AACA,MAAI,CAAC,KAAK,CAAC,OAAO,SAAS,CAAC,GAAG;AAC7B,QAAI;AAAA,EACN;AACA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;AAEA,IAAM,YAAyB,6BAAa,CAAC;AAC7C,SAAS,iBAAiB,SAAS;AACjC,QAAM,MAAM,UAAU,OAAO;AAC7B,MAAI,CAAC,SAAS,KAAK,CAAC,IAAI,gBAAgB;AACtC,WAAO;AAAA,EACT;AACA,SAAO;AAAA,IACL,GAAG,IAAI,eAAe;AAAA,IACtB,GAAG,IAAI,eAAe;AAAA,EACxB;AACF;AACA,SAAS,uBAAuB,SAAS,SAAS,sBAAsB;AACtE,MAAI,YAAY,QAAQ;AACtB,cAAU;AAAA,EACZ;AACA,MAAI,CAAC,wBAAwB,WAAW,yBAAyB,UAAU,OAAO,GAAG;AACnF,WAAO;AAAA,EACT;AACA,SAAO;AACT;AAEA,SAAS,sBAAsB,SAAS,cAAc,iBAAiB,cAAc;AACnF,MAAI,iBAAiB,QAAQ;AAC3B,mBAAe;AAAA,EACjB;AACA,MAAI,oBAAoB,QAAQ;AAC9B,sBAAkB;AAAA,EACpB;AACA,QAAM,aAAa,QAAQ,sBAAsB;AACjD,QAAM,aAAa,cAAc,OAAO;AACxC,MAAI,QAAQ,aAAa,CAAC;AAC1B,MAAI,cAAc;AAChB,QAAI,cAAc;AAChB,UAAI,UAAU,YAAY,GAAG;AAC3B,gBAAQ,SAAS,YAAY;AAAA,MAC/B;AAAA,IACF,OAAO;AACL,cAAQ,SAAS,OAAO;AAAA,IAC1B;AAAA,EACF;AACA,QAAM,gBAAgB,uBAAuB,YAAY,iBAAiB,YAAY,IAAI,iBAAiB,UAAU,IAAI,aAAa,CAAC;AACvI,MAAI,KAAK,WAAW,OAAO,cAAc,KAAK,MAAM;AACpD,MAAI,KAAK,WAAW,MAAM,cAAc,KAAK,MAAM;AACnD,MAAI,QAAQ,WAAW,QAAQ,MAAM;AACrC,MAAI,SAAS,WAAW,SAAS,MAAM;AACvC,MAAI,YAAY;AACd,UAAM,MAAM,UAAU,UAAU;AAChC,UAAM,YAAY,gBAAgB,UAAU,YAAY,IAAI,UAAU,YAAY,IAAI;AACtF,QAAI,gBAAgB,IAAI;AACxB,WAAO,iBAAiB,gBAAgB,cAAc,KAAK;AACzD,YAAM,cAAc,SAAS,aAAa;AAC1C,YAAM,aAAa,cAAc,sBAAsB;AACvD,YAAM,MAAM,iBAAiB,aAAa;AAC1C,YAAM,OAAO,WAAW,QAAQ,cAAc,aAAa,WAAW,IAAI,WAAW,KAAK,YAAY;AACtG,YAAM,MAAM,WAAW,OAAO,cAAc,YAAY,WAAW,IAAI,UAAU,KAAK,YAAY;AAClG,WAAK,YAAY;AACjB,WAAK,YAAY;AACjB,eAAS,YAAY;AACrB,gBAAU,YAAY;AACtB,WAAK;AACL,WAAK;AACL,sBAAgB,UAAU,aAAa,EAAE;AAAA,IAC3C;AAAA,EACF;AACA,SAAO,iBAAiB;AAAA,IACtB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AACH;AAEA,SAAS,sDAAsD,MAAM;AACnE,MAAI;AAAA,IACF;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,0BAA0B,cAAc,YAAY;AAC1D,QAAM,kBAAkB,mBAAmB,YAAY;AACvD,MAAI,iBAAiB,iBAAiB;AACpC,WAAO;AAAA,EACT;AACA,MAAI,SAAS;AAAA,IACX,YAAY;AAAA,IACZ,WAAW;AAAA,EACb;AACA,MAAI,QAAQ,aAAa,CAAC;AAC1B,QAAM,UAAU,aAAa,CAAC;AAC9B,MAAI,2BAA2B,CAAC,2BAA2B,aAAa,SAAS;AAC/E,QAAI,YAAY,YAAY,MAAM,UAAU,kBAAkB,eAAe,GAAG;AAC9E,eAAS,cAAc,YAAY;AAAA,IACrC;AACA,QAAI,cAAc,YAAY,GAAG;AAC/B,YAAM,aAAa,sBAAsB,YAAY;AACrD,cAAQ,SAAS,YAAY;AAC7B,cAAQ,IAAI,WAAW,IAAI,aAAa;AACxC,cAAQ,IAAI,WAAW,IAAI,aAAa;AAAA,IAC1C;AAAA,EACF;AACA,SAAO;AAAA,IACL,OAAO,KAAK,QAAQ,MAAM;AAAA,IAC1B,QAAQ,KAAK,SAAS,MAAM;AAAA,IAC5B,GAAG,KAAK,IAAI,MAAM,IAAI,OAAO,aAAa,MAAM,IAAI,QAAQ;AAAA,IAC5D,GAAG,KAAK,IAAI,MAAM,IAAI,OAAO,YAAY,MAAM,IAAI,QAAQ;AAAA,EAC7D;AACF;AAEA,SAAS,eAAe,SAAS;AAC/B,SAAO,MAAM,KAAK,QAAQ,eAAe,CAAC;AAC5C;AAEA,SAAS,oBAAoB,SAAS;AAGpC,SAAO,sBAAsB,mBAAmB,OAAO,CAAC,EAAE,OAAO,cAAc,OAAO,EAAE;AAC1F;AAIA,SAAS,gBAAgB,SAAS;AAChC,QAAM,OAAO,mBAAmB,OAAO;AACvC,QAAM,SAAS,cAAc,OAAO;AACpC,QAAM,OAAO,QAAQ,cAAc;AACnC,QAAM,QAAQ,IAAI,KAAK,aAAa,KAAK,aAAa,KAAK,aAAa,KAAK,WAAW;AACxF,QAAM,SAAS,IAAI,KAAK,cAAc,KAAK,cAAc,KAAK,cAAc,KAAK,YAAY;AAC7F,MAAI,IAAI,CAAC,OAAO,aAAa,oBAAoB,OAAO;AACxD,QAAM,IAAI,CAAC,OAAO;AAClB,MAAI,iBAAiB,IAAI,EAAE,cAAc,OAAO;AAC9C,SAAK,IAAI,KAAK,aAAa,KAAK,WAAW,IAAI;AAAA,EACjD;AACA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AAEA,SAAS,gBAAgB,SAAS,UAAU;AAC1C,QAAM,MAAM,UAAU,OAAO;AAC7B,QAAM,OAAO,mBAAmB,OAAO;AACvC,QAAM,iBAAiB,IAAI;AAC3B,MAAI,QAAQ,KAAK;AACjB,MAAI,SAAS,KAAK;AAClB,MAAI,IAAI;AACR,MAAI,IAAI;AACR,MAAI,gBAAgB;AAClB,YAAQ,eAAe;AACvB,aAAS,eAAe;AACxB,UAAM,sBAAsB,SAAS;AACrC,QAAI,CAAC,uBAAuB,uBAAuB,aAAa,SAAS;AACvE,UAAI,eAAe;AACnB,UAAI,eAAe;AAAA,IACrB;AAAA,EACF;AACA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AAGA,SAAS,2BAA2B,SAAS,UAAU;AACrD,QAAM,aAAa,sBAAsB,SAAS,MAAM,aAAa,OAAO;AAC5E,QAAM,MAAM,WAAW,MAAM,QAAQ;AACrC,QAAM,OAAO,WAAW,OAAO,QAAQ;AACvC,QAAM,QAAQ,cAAc,OAAO,IAAI,SAAS,OAAO,IAAI,aAAa,CAAC;AACzE,QAAM,QAAQ,QAAQ,cAAc,MAAM;AAC1C,QAAM,SAAS,QAAQ,eAAe,MAAM;AAC5C,QAAM,IAAI,OAAO,MAAM;AACvB,QAAM,IAAI,MAAM,MAAM;AACtB,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AACA,SAAS,kCAAkC,SAAS,kBAAkB,UAAU;AAC9E,MAAI;AACJ,MAAI,qBAAqB,YAAY;AACnC,WAAO,gBAAgB,SAAS,QAAQ;AAAA,EAC1C,WAAW,qBAAqB,YAAY;AAC1C,WAAO,gBAAgB,mBAAmB,OAAO,CAAC;AAAA,EACpD,WAAW,UAAU,gBAAgB,GAAG;AACtC,WAAO,2BAA2B,kBAAkB,QAAQ;AAAA,EAC9D,OAAO;AACL,UAAM,gBAAgB,iBAAiB,OAAO;AAC9C,WAAO;AAAA,MACL,GAAG;AAAA,MACH,GAAG,iBAAiB,IAAI,cAAc;AAAA,MACtC,GAAG,iBAAiB,IAAI,cAAc;AAAA,IACxC;AAAA,EACF;AACA,SAAO,iBAAiB,IAAI;AAC9B;AACA,SAAS,yBAAyB,SAAS,UAAU;AACnD,QAAM,aAAa,cAAc,OAAO;AACxC,MAAI,eAAe,YAAY,CAAC,UAAU,UAAU,KAAK,sBAAsB,UAAU,GAAG;AAC1F,WAAO;AAAA,EACT;AACA,SAAO,iBAAiB,UAAU,EAAE,aAAa,WAAW,yBAAyB,YAAY,QAAQ;AAC3G;AAKA,SAAS,4BAA4B,SAAS,OAAO;AACnD,QAAM,eAAe,MAAM,IAAI,OAAO;AACtC,MAAI,cAAc;AAChB,WAAO;AAAA,EACT;AACA,MAAI,SAAS,qBAAqB,OAAO,EAAE,OAAO,QAAM,UAAU,EAAE,KAAK,YAAY,EAAE,MAAM,MAAM;AACnG,MAAI,sCAAsC;AAC1C,QAAM,iBAAiB,iBAAiB,OAAO,EAAE,aAAa;AAC9D,MAAI,cAAc,iBAAiB,cAAc,OAAO,IAAI;AAG5D,SAAO,UAAU,WAAW,KAAK,CAAC,sBAAsB,WAAW,GAAG;AACpE,UAAM,gBAAgB,iBAAiB,WAAW;AAClD,UAAM,0BAA0B,kBAAkB,WAAW;AAC7D,QAAI,CAAC,2BAA2B,cAAc,aAAa,SAAS;AAClE,4CAAsC;AAAA,IACxC;AACA,UAAM,wBAAwB,iBAAiB,CAAC,2BAA2B,CAAC,sCAAsC,CAAC,2BAA2B,cAAc,aAAa,YAAY,CAAC,CAAC,uCAAuC,CAAC,YAAY,OAAO,EAAE,SAAS,oCAAoC,QAAQ,KAAK,kBAAkB,WAAW,KAAK,CAAC,2BAA2B,yBAAyB,SAAS,WAAW;AACzZ,QAAI,uBAAuB;AAEzB,eAAS,OAAO,OAAO,cAAY,aAAa,WAAW;AAAA,IAC7D,OAAO;AAEL,4CAAsC;AAAA,IACxC;AACA,kBAAc,cAAc,WAAW;AAAA,EACzC;AACA,QAAM,IAAI,SAAS,MAAM;AACzB,SAAO;AACT;AAIA,SAAS,gBAAgB,MAAM;AAC7B,MAAI;AAAA,IACF;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,2BAA2B,aAAa,sBAAsB,4BAA4B,SAAS,KAAK,EAAE,IAAI,CAAC,EAAE,OAAO,QAAQ;AACtI,QAAM,oBAAoB,CAAC,GAAG,0BAA0B,YAAY;AACpE,QAAM,wBAAwB,kBAAkB,CAAC;AACjD,QAAM,eAAe,kBAAkB,OAAO,CAAC,SAAS,qBAAqB;AAC3E,UAAM,OAAO,kCAAkC,SAAS,kBAAkB,QAAQ;AAClF,YAAQ,MAAM,IAAI,KAAK,KAAK,QAAQ,GAAG;AACvC,YAAQ,QAAQ,IAAI,KAAK,OAAO,QAAQ,KAAK;AAC7C,YAAQ,SAAS,IAAI,KAAK,QAAQ,QAAQ,MAAM;AAChD,YAAQ,OAAO,IAAI,KAAK,MAAM,QAAQ,IAAI;AAC1C,WAAO;AAAA,EACT,GAAG,kCAAkC,SAAS,uBAAuB,QAAQ,CAAC;AAC9E,SAAO;AAAA,IACL,OAAO,aAAa,QAAQ,aAAa;AAAA,IACzC,QAAQ,aAAa,SAAS,aAAa;AAAA,IAC3C,GAAG,aAAa;AAAA,IAChB,GAAG,aAAa;AAAA,EAClB;AACF;AAEA,SAAS,cAAc,SAAS;AAC9B,SAAO,iBAAiB,OAAO;AACjC;AAEA,SAAS,8BAA8B,SAAS,cAAc,UAAU;AACtE,QAAM,0BAA0B,cAAc,YAAY;AAC1D,QAAM,kBAAkB,mBAAmB,YAAY;AACvD,QAAM,UAAU,aAAa;AAC7B,QAAM,OAAO,sBAAsB,SAAS,MAAM,SAAS,YAAY;AACvE,MAAI,SAAS;AAAA,IACX,YAAY;AAAA,IACZ,WAAW;AAAA,EACb;AACA,QAAM,UAAU,aAAa,CAAC;AAC9B,MAAI,2BAA2B,CAAC,2BAA2B,CAAC,SAAS;AACnE,QAAI,YAAY,YAAY,MAAM,UAAU,kBAAkB,eAAe,GAAG;AAC9E,eAAS,cAAc,YAAY;AAAA,IACrC;AACA,QAAI,yBAAyB;AAC3B,YAAM,aAAa,sBAAsB,cAAc,MAAM,SAAS,YAAY;AAClF,cAAQ,IAAI,WAAW,IAAI,aAAa;AACxC,cAAQ,IAAI,WAAW,IAAI,aAAa;AAAA,IAC1C,WAAW,iBAAiB;AAC1B,cAAQ,IAAI,oBAAoB,eAAe;AAAA,IACjD;AAAA,EACF;AACA,SAAO;AAAA,IACL,GAAG,KAAK,OAAO,OAAO,aAAa,QAAQ;AAAA,IAC3C,GAAG,KAAK,MAAM,OAAO,YAAY,QAAQ;AAAA,IACzC,OAAO,KAAK;AAAA,IACZ,QAAQ,KAAK;AAAA,EACf;AACF;AAEA,SAAS,oBAAoB,SAAS,UAAU;AAC9C,MAAI,CAAC,cAAc,OAAO,KAAK,iBAAiB,OAAO,EAAE,aAAa,SAAS;AAC7E,WAAO;AAAA,EACT;AACA,MAAI,UAAU;AACZ,WAAO,SAAS,OAAO;AAAA,EACzB;AACA,SAAO,QAAQ;AACjB;AAIA,SAAS,gBAAgB,SAAS,UAAU;AAC1C,QAAMM,UAAS,UAAU,OAAO;AAChC,MAAI,CAAC,cAAc,OAAO,GAAG;AAC3B,WAAOA;AAAA,EACT;AACA,MAAI,eAAe,oBAAoB,SAAS,QAAQ;AACxD,SAAO,gBAAgB,eAAe,YAAY,KAAK,iBAAiB,YAAY,EAAE,aAAa,UAAU;AAC3G,mBAAe,oBAAoB,cAAc,QAAQ;AAAA,EAC3D;AACA,MAAI,iBAAiB,YAAY,YAAY,MAAM,UAAU,YAAY,YAAY,MAAM,UAAU,iBAAiB,YAAY,EAAE,aAAa,YAAY,CAAC,kBAAkB,YAAY,IAAI;AAC9L,WAAOA;AAAA,EACT;AACA,SAAO,gBAAgB,mBAAmB,OAAO,KAAKA;AACxD;AAEA,IAAM,kBAAkB,eAAgB,MAAM;AAC5C,MAAI;AAAA,IACF;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,oBAAoB,KAAK,mBAAmB;AAClD,QAAM,kBAAkB,KAAK;AAC7B,SAAO;AAAA,IACL,WAAW,8BAA8B,WAAW,MAAM,kBAAkB,QAAQ,GAAG,QAAQ;AAAA,IAC/F,UAAU;AAAA,MACR,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAI,MAAM,gBAAgB,QAAQ;AAAA,IACpC;AAAA,EACF;AACF;AAEA,SAAS,MAAM,SAAS;AACtB,SAAO,iBAAiB,OAAO,EAAE,cAAc;AACjD;AAEA,IAAM,WAAW;AAAA,EACf;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAGA,SAAS,YAAY,SAAS,QAAQ;AACpC,MAAI,KAAK;AACT,MAAI;AACJ,QAAM,OAAO,mBAAmB,OAAO;AACvC,WAAS,UAAU;AACjB,iBAAa,SAAS;AACtB,UAAM,GAAG,WAAW;AACpB,SAAK;AAAA,EACP;AACA,WAAS,QAAQ,MAAM,WAAW;AAChC,QAAI,SAAS,QAAQ;AACnB,aAAO;AAAA,IACT;AACA,QAAI,cAAc,QAAQ;AACxB,kBAAY;AAAA,IACd;AACA,YAAQ;AACR,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI,QAAQ,sBAAsB;AAClC,QAAI,CAAC,MAAM;AACT,aAAO;AAAA,IACT;AACA,QAAI,CAAC,SAAS,CAAC,QAAQ;AACrB;AAAA,IACF;AACA,UAAM,WAAW,MAAM,GAAG;AAC1B,UAAM,aAAa,MAAM,KAAK,eAAe,OAAO,MAAM;AAC1D,UAAM,cAAc,MAAM,KAAK,gBAAgB,MAAM,OAAO;AAC5D,UAAM,YAAY,MAAM,IAAI;AAC5B,UAAM,aAAa,CAAC,WAAW,QAAQ,CAAC,aAAa,QAAQ,CAAC,cAAc,QAAQ,CAAC,YAAY;AACjG,UAAM,UAAU;AAAA,MACd;AAAA,MACA,WAAW,IAAI,GAAG,IAAI,GAAG,SAAS,CAAC,KAAK;AAAA,IAC1C;AACA,QAAI,gBAAgB;AACpB,aAAS,cAAc,SAAS;AAC9B,YAAM,QAAQ,QAAQ,CAAC,EAAE;AACzB,UAAI,UAAU,WAAW;AACvB,YAAI,CAAC,eAAe;AAClB,iBAAO,QAAQ;AAAA,QACjB;AACA,YAAI,CAAC,OAAO;AACV,sBAAY,WAAW,MAAM;AAC3B,oBAAQ,OAAO,IAAI;AAAA,UACrB,GAAG,GAAG;AAAA,QACR,OAAO;AACL,kBAAQ,OAAO,KAAK;AAAA,QACtB;AAAA,MACF;AACA,sBAAgB;AAAA,IAClB;AAIA,QAAI;AACF,WAAK,IAAI,qBAAqB,eAAe;AAAA,QAC3C,GAAG;AAAA;AAAA,QAEH,MAAM,KAAK;AAAA,MACb,CAAC;AAAA,IACH,SAAS,GAAP;AACA,WAAK,IAAI,qBAAqB,eAAe,OAAO;AAAA,IACtD;AACA,OAAG,QAAQ,OAAO;AAAA,EACpB;AACA,UAAQ,IAAI;AACZ,SAAO;AACT;AAUA,SAAS,WAAW,WAAW,UAAU,QAAQ,SAAS;AACxD,MAAI,YAAY,QAAQ;AACtB,cAAU,CAAC;AAAA,EACb;AACA,QAAM;AAAA,IACJ,iBAAiB;AAAA,IACjB,iBAAiB;AAAA,IACjB,gBAAgB,OAAO,mBAAmB;AAAA,IAC1C,cAAc,OAAO,yBAAyB;AAAA,IAC9C,iBAAiB;AAAA,EACnB,IAAI;AACJ,QAAM,cAAc,cAAc,SAAS;AAC3C,QAAM,YAAY,kBAAkB,iBAAiB,CAAC,GAAI,cAAc,qBAAqB,WAAW,IAAI,CAAC,GAAI,GAAG,qBAAqB,QAAQ,CAAC,IAAI,CAAC;AACvJ,YAAU,QAAQ,cAAY;AAC5B,sBAAkB,SAAS,iBAAiB,UAAU,QAAQ;AAAA,MAC5D,SAAS;AAAA,IACX,CAAC;AACD,sBAAkB,SAAS,iBAAiB,UAAU,MAAM;AAAA,EAC9D,CAAC;AACD,QAAM,YAAY,eAAe,cAAc,YAAY,aAAa,MAAM,IAAI;AAClF,MAAI,iBAAiB;AACrB,MAAI,iBAAiB;AACrB,MAAI,eAAe;AACjB,qBAAiB,IAAI,eAAe,UAAQ;AAC1C,UAAI,CAAC,UAAU,IAAI;AACnB,UAAI,cAAc,WAAW,WAAW,eAAe,gBAAgB;AAGrE,uBAAe,UAAU,QAAQ;AACjC,6BAAqB,cAAc;AACnC,yBAAiB,sBAAsB,MAAM;AAC3C,4BAAkB,eAAe,QAAQ,QAAQ;AAAA,QACnD,CAAC;AAAA,MACH;AACA,aAAO;AAAA,IACT,CAAC;AACD,QAAI,eAAe,CAAC,gBAAgB;AAClC,qBAAe,QAAQ,WAAW;AAAA,IACpC;AACA,mBAAe,QAAQ,QAAQ;AAAA,EACjC;AACA,MAAI;AACJ,MAAI,cAAc,iBAAiB,sBAAsB,SAAS,IAAI;AACtE,MAAI,gBAAgB;AAClB,cAAU;AAAA,EACZ;AACA,WAAS,YAAY;AACnB,UAAM,cAAc,sBAAsB,SAAS;AACnD,QAAI,gBAAgB,YAAY,MAAM,YAAY,KAAK,YAAY,MAAM,YAAY,KAAK,YAAY,UAAU,YAAY,SAAS,YAAY,WAAW,YAAY,SAAS;AAC/K,aAAO;AAAA,IACT;AACA,kBAAc;AACd,cAAU,sBAAsB,SAAS;AAAA,EAC3C;AACA,SAAO;AACP,SAAO,MAAM;AACX,cAAU,QAAQ,cAAY;AAC5B,wBAAkB,SAAS,oBAAoB,UAAU,MAAM;AAC/D,wBAAkB,SAAS,oBAAoB,UAAU,MAAM;AAAA,IACjE,CAAC;AACD,iBAAa,UAAU;AACvB,sBAAkB,eAAe,WAAW;AAC5C,qBAAiB;AACjB,QAAI,gBAAgB;AAClB,2BAAqB,OAAO;AAAA,IAC9B;AAAA,EACF;AACF;AAOA,IAAMC,mBAAkB,CAAC,WAAW,UAAU,YAAY;AAIxD,QAAM,QAAQ,oBAAI,IAAI;AACtB,QAAM,gBAAgB;AAAA,IACpB;AAAA,IACA,GAAG;AAAA,EACL;AACA,QAAM,oBAAoB;AAAA,IACxB,GAAG,cAAc;AAAA,IACjB,IAAI;AAAA,EACN;AACA,SAAO,gBAAkB,WAAW,UAAU;AAAA,IAC5C,GAAG;AAAA,IACH,UAAU;AAAA,EACZ,CAAC;AACH;;;ACnlBA,IAAAC,SAAuB;AACvB,IAAAC,gBAA2C;AAC3C,eAA0B;AAQ1B,IAAMC,SAAQ,aAAW;AACvB,WAAS,MAAM,OAAO;AACpB,WAAO,CAAC,EAAE,eAAe,KAAK,OAAO,SAAS;AAAA,EAChD;AACA,SAAO;AAAA,IACL,MAAM;AAAA,IACN;AAAA,IACA,GAAG,OAAO;AACR,YAAM;AAAA,QACJ;AAAA,QACA;AAAA,MACF,IAAI,OAAO,YAAY,aAAa,QAAQ,KAAK,IAAI;AACrD,UAAI,WAAW,MAAM,OAAO,GAAG;AAC7B,YAAI,QAAQ,WAAW,MAAM;AAC3B,iBAAO,MAAQ;AAAA,YACb,SAAS,QAAQ;AAAA,YACjB;AAAA,UACF,CAAC,EAAE,GAAG,KAAK;AAAA,QACb;AACA,eAAO,CAAC;AAAA,MACV,WAAW,SAAS;AAClB,eAAO,MAAQ;AAAA,UACb;AAAA,UACA;AAAA,QACF,CAAC,EAAE,GAAG,KAAK;AAAA,MACb;AACA,aAAO,CAAC;AAAA,IACV;AAAA,EACF;AACF;AAEA,IAAI,QAAQ,OAAO,aAAa,cAAc,gCAAkB;AAIhE,SAAS,UAAU,GAAG,GAAG;AACvB,MAAI,MAAM,GAAG;AACX,WAAO;AAAA,EACT;AACA,MAAI,OAAO,MAAM,OAAO,GAAG;AACzB,WAAO;AAAA,EACT;AACA,MAAI,OAAO,MAAM,cAAc,EAAE,SAAS,MAAM,EAAE,SAAS,GAAG;AAC5D,WAAO;AAAA,EACT;AACA,MAAI,QAAQ,GAAG;AACf,MAAI,KAAK,KAAK,OAAO,KAAK,UAAU;AAClC,QAAI,MAAM,QAAQ,CAAC,GAAG;AACpB,eAAS,EAAE;AACX,UAAI,UAAU,EAAE;AAAQ,eAAO;AAC/B,WAAK,IAAI,QAAQ,QAAQ,KAAI;AAC3B,YAAI,CAAC,UAAU,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG;AAC1B,iBAAO;AAAA,QACT;AAAA,MACF;AACA,aAAO;AAAA,IACT;AACA,WAAO,OAAO,KAAK,CAAC;AACpB,aAAS,KAAK;AACd,QAAI,WAAW,OAAO,KAAK,CAAC,EAAE,QAAQ;AACpC,aAAO;AAAA,IACT;AACA,SAAK,IAAI,QAAQ,QAAQ,KAAI;AAC3B,UAAI,CAAC,CAAC,EAAE,eAAe,KAAK,GAAG,KAAK,CAAC,CAAC,GAAG;AACvC,eAAO;AAAA,MACT;AAAA,IACF;AACA,SAAK,IAAI,QAAQ,QAAQ,KAAI;AAC3B,YAAM,MAAM,KAAK,CAAC;AAClB,UAAI,QAAQ,YAAY,EAAE,UAAU;AAClC;AAAA,MACF;AACA,UAAI,CAAC,UAAU,EAAE,GAAG,GAAG,EAAE,GAAG,CAAC,GAAG;AAC9B,eAAO;AAAA,MACT;AAAA,IACF;AACA,WAAO;AAAA,EACT;AACA,SAAO,MAAM,KAAK,MAAM;AAC1B;AAEA,SAAS,OAAO,SAAS;AACvB,MAAI,OAAO,WAAW,aAAa;AACjC,WAAO;AAAA,EACT;AACA,QAAM,MAAM,QAAQ,cAAc,eAAe;AACjD,SAAO,IAAI,oBAAoB;AACjC;AAEA,SAAS,WAAW,SAAS,OAAO;AAClC,QAAM,MAAM,OAAO,OAAO;AAC1B,SAAO,KAAK,MAAM,QAAQ,GAAG,IAAI;AACnC;AAEA,SAAS,aAAa,OAAO;AAC3B,QAAM,MAAY,cAAO,KAAK;AAC9B,QAAM,MAAM;AACV,QAAI,UAAU;AAAA,EAChB,CAAC;AACD,SAAO;AACT;AAMA,SAAS,YAAY,SAAS;AAC5B,MAAI,YAAY,QAAQ;AACtB,cAAU,CAAC;AAAA,EACb;AACA,QAAM;AAAA,IACJ,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,aAAa,CAAC;AAAA,IACd,UAAAC;AAAA,IACA,UAAU;AAAA,MACR,WAAW;AAAA,MACX,UAAU;AAAA,IACZ,IAAI,CAAC;AAAA,IACL,YAAY;AAAA,IACZ;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,CAAC,MAAM,OAAO,IAAU,gBAAS;AAAA,IACrC,GAAG;AAAA,IACH,GAAG;AAAA,IACH;AAAA,IACA;AAAA,IACA,gBAAgB,CAAC;AAAA,IACjB,cAAc;AAAA,EAChB,CAAC;AACD,QAAM,CAAC,kBAAkB,mBAAmB,IAAU,gBAAS,UAAU;AACzE,MAAI,CAAC,UAAU,kBAAkB,UAAU,GAAG;AAC5C,wBAAoB,UAAU;AAAA,EAChC;AACA,QAAM,CAAC,YAAY,aAAa,IAAU,gBAAS,IAAI;AACvD,QAAM,CAAC,WAAW,YAAY,IAAU,gBAAS,IAAI;AACrD,QAAM,eAAqB,mBAAY,UAAQ;AAC7C,QAAI,QAAQ,aAAa,SAAS;AAChC,mBAAa,UAAU;AACvB,oBAAc,IAAI;AAAA,IACpB;AAAA,EACF,GAAG,CAAC,aAAa,CAAC;AAClB,QAAM,cAAoB,mBAAY,UAAQ;AAC5C,QAAI,SAAS,YAAY,SAAS;AAChC,kBAAY,UAAU;AACtB,mBAAa,IAAI;AAAA,IACnB;AAAA,EACF,GAAG,CAAC,YAAY,CAAC;AACjB,QAAM,cAAc,qBAAqB;AACzC,QAAM,aAAa,oBAAoB;AACvC,QAAM,eAAqB,cAAO,IAAI;AACtC,QAAM,cAAoB,cAAO,IAAI;AACrC,QAAM,UAAgB,cAAO,IAAI;AACjC,QAAM,0BAA0B,aAAa,oBAAoB;AACjE,QAAM,cAAc,aAAaA,SAAQ;AACzC,QAAM,SAAe,mBAAY,MAAM;AACrC,QAAI,CAAC,aAAa,WAAW,CAAC,YAAY,SAAS;AACjD;AAAA,IACF;AACA,UAAM,SAAS;AAAA,MACb;AAAA,MACA;AAAA,MACA,YAAY;AAAA,IACd;AACA,QAAI,YAAY,SAAS;AACvB,aAAO,WAAW,YAAY;AAAA,IAChC;AACA,IAAAC,iBAAgB,aAAa,SAAS,YAAY,SAAS,MAAM,EAAE,KAAK,CAAAC,UAAQ;AAC9E,YAAM,WAAW;AAAA,QACf,GAAGA;AAAA,QACH,cAAc;AAAA,MAChB;AACA,UAAI,aAAa,WAAW,CAAC,UAAU,QAAQ,SAAS,QAAQ,GAAG;AACjE,gBAAQ,UAAU;AAClB,QAAS,mBAAU,MAAM;AACvB,kBAAQ,QAAQ;AAAA,QAClB,CAAC;AAAA,MACH;AAAA,IACF,CAAC;AAAA,EACH,GAAG,CAAC,kBAAkB,WAAW,UAAU,WAAW,CAAC;AACvD,QAAM,MAAM;AACV,QAAI,SAAS,SAAS,QAAQ,QAAQ,cAAc;AAClD,cAAQ,QAAQ,eAAe;AAC/B,cAAQ,CAAAA,WAAS;AAAA,QACf,GAAGA;AAAA,QACH,cAAc;AAAA,MAChB,EAAE;AAAA,IACJ;AAAA,EACF,GAAG,CAAC,IAAI,CAAC;AACT,QAAM,eAAqB,cAAO,KAAK;AACvC,QAAM,MAAM;AACV,iBAAa,UAAU;AACvB,WAAO,MAAM;AACX,mBAAa,UAAU;AAAA,IACzB;AAAA,EACF,GAAG,CAAC,CAAC;AACL,QAAM,MAAM;AACV,QAAI;AAAa,mBAAa,UAAU;AACxC,QAAI;AAAY,kBAAY,UAAU;AACtC,QAAI,eAAe,YAAY;AAC7B,UAAI,wBAAwB,SAAS;AACnC,eAAO,wBAAwB,QAAQ,aAAa,YAAY,MAAM;AAAA,MACxE,OAAO;AACL,eAAO;AAAA,MACT;AAAA,IACF;AAAA,EACF,GAAG,CAAC,aAAa,YAAY,QAAQ,uBAAuB,CAAC;AAC7D,QAAM,OAAa,eAAQ,OAAO;AAAA,IAChC,WAAW;AAAA,IACX,UAAU;AAAA,IACV;AAAA,IACA;AAAA,EACF,IAAI,CAAC,cAAc,WAAW,CAAC;AAC/B,QAAM,WAAiB,eAAQ,OAAO;AAAA,IACpC,WAAW;AAAA,IACX,UAAU;AAAA,EACZ,IAAI,CAAC,aAAa,UAAU,CAAC;AAC7B,QAAM,iBAAuB,eAAQ,MAAM;AACzC,UAAM,gBAAgB;AAAA,MACpB,UAAU;AAAA,MACV,MAAM;AAAA,MACN,KAAK;AAAA,IACP;AACA,QAAI,CAAC,SAAS,UAAU;AACtB,aAAO;AAAA,IACT;AACA,UAAM,IAAI,WAAW,SAAS,UAAU,KAAK,CAAC;AAC9C,UAAM,IAAI,WAAW,SAAS,UAAU,KAAK,CAAC;AAC9C,QAAI,WAAW;AACb,aAAO;AAAA,QACL,GAAG;AAAA,QACH,WAAW,eAAe,IAAI,SAAS,IAAI;AAAA,QAC3C,GAAI,OAAO,SAAS,QAAQ,KAAK,OAAO;AAAA,UACtC,YAAY;AAAA,QACd;AAAA,MACF;AAAA,IACF;AACA,WAAO;AAAA,MACL,UAAU;AAAA,MACV,MAAM;AAAA,MACN,KAAK;AAAA,IACP;AAAA,EACF,GAAG,CAAC,UAAU,WAAW,SAAS,UAAU,KAAK,GAAG,KAAK,CAAC,CAAC;AAC3D,SAAa,eAAQ,OAAO;AAAA,IAC1B,GAAG;AAAA,IACH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,CAAC,MAAM,QAAQ,MAAM,UAAU,cAAc,CAAC;AACpD;;;;AElQA,SAASC,0CAAQC,SAA6B;AAC5C,QAAM,CAACC,OAAMC,OAAP,QAAkBC,eAAAA,UAA8DC,MAA9D;AAExBC,4CAAgB,MAAM;AACpB,QAAIL,SAAS;AAEXE,cAAQ;QAAEI,OAAON,QAAQO;QAAaC,QAAQR,QAAQS;OAA/C;AAEP,YAAMC,iBAAiB,IAAIC,eAAgBC,CAAAA,YAAY;AACrD,YAAI,CAACC,MAAMC,QAAQF,OAAd;AACH;AAKF,YAAI,CAACA,QAAQG;AACX;AAGF,cAAMC,QAAQJ,QAAQ,CAAD;AACrB,YAAIN;AACJ,YAAIE;AAEJ,YAAI,mBAAmBQ,OAAO;AAC5B,gBAAMC,kBAAkBD,MAAM,eAAD;AAE7B,gBAAME,aAAaL,MAAMC,QAAQG,eAAd,IAAiCA,gBAAgB,CAAD,IAAMA;AACzEX,kBAAQY,WAAW,YAAD;AAClBV,mBAASU,WAAW,WAAD;eACd;AAGLZ,kBAAQN,QAAQO;AAChBC,mBAASR,QAAQS;;AAGnBP,gBAAQ;UAzChB;UAAA;SAyCe;OA5Bc;AA+BvBQ,qBAAeS,QAAQnB,SAAS;QAAEoB,KAAK;OAAvC;AAEA,aAAO,MAAMV,eAAeW,UAAUrB,OAAzB;;AAIbE,cAAQE,MAAD;KAER;IAACJ;GA5CW;AA8Cf,SAAOC;;;;AEnBT,IAAMqB,oCAAc;AAGpB,IAAM,CAACC,2CAAqBC,uCAAtB,IAA2CC,yCAAmBH,iCAAD;AAMnE,IAAM,CAACI,sCAAgBC,sCAAjB,IAAqCJ,0CAAwCD,iCAArB;AAK9D,IAAMM,4CAAiCC,CAAAA,UAAoC;AACzE,QAAM,EAAA,eAAA,SAAiBC,IAAaD;AACpC,QAAM,CAACE,QAAQC,SAAT,QAAsBC,eAAAA,UAAkC,IAAlC;AAC5B,SACE,mCAAAC,eAAC,sCADH;IACkB,OAAOC;IAAe;IAAgB,gBAAgBH;KACnEF,QADH;;AAYJ,IAAMM,oCAAc;AAQpB,IAAMC,2CAAeC,mCAAAA,YACnB,CAACC,OAAuCC,iBAAiB;AACvD,QAAM,EAAA,eAAA,YAA6B,GAAGC,YAAH,IAAmBF;AACtD,QAAMG,UAAUC,uCAAiBP,mCAAaQ,aAAd;AAChC,QAAMC,UAAMP,eAAAA,QAAkC,IAAlC;AACZ,QAAMQ,eAAeC,0CAAgBP,cAAcK,GAAf;AAEpCP,qBAAAA,WAAgB,MAAM;AAIpBI,YAAQM,gBAAeC,eAAU,QAAVA,eAAU,SAAV,SAAAA,WAAYC,YAAWL,IAAIK,OAAlD;GAJF;AAOA,SAAOD,aAAa,OAAO,mCAAAE,eAAC,0CAAU,KAAX,SAAA,CAAA,GAAmBV,aAA9C;IAA2D,KAAKK;GAArC,CAAA;CAdV;AAwBrB,IAAMM,qCAAe;AAUrB,IAAM,CAACC,6CAAuBC,uCAAxB,IACJC,0CAA+CH,kCAA5B;AAmBrB,IAAMI,2CAAgBC,mCAAAA,YACpB,CAACC,OAAwCC,iBAAiB;AAAA,MAAA,kBAAA,mBAAA,uBAAA,wBAAA,wBAAA,uBAAA,wBAAA;AACxD,QAAM,EAAA,eAAA,OAEG,UAFH,aAGS,GAHT,QAII,UAJJ,cAKU,GALV,eAMW,GANX,oBAOgB,CAAA,GACpBC,kBAAkBC,uBAAuB,GARrC,SASK,WATL,mBAUe,OAVf,kBAWc,MAXd,UAaJ,GAAGC,aAAH,IACEJ;AAEJ,QAAMK,UAAUC,uCAAiBZ,oCAAca,aAAf;AAEhC,QAAM,CAACC,SAASC,UAAV,QAAwBV,eAAAA,UAAsC,IAAtC;AAC9B,QAAMW,eAAeC;IAAgBV;IAAeW,CAAAA,SAASH,WAAWG,IAAD;EAAnC;AAEpC,QAAM,CAACC,QAAOC,QAAR,QAAoBf,eAAAA,UAAuC,IAAvC;AAC1B,QAAMgB,YAAYC,0CAAQH,MAAD;AACzB,QAAMI,cAAU,mBAAGF,cAAH,QAAGA,cAAH,SAAA,SAAGA,UAAWG,WAAd,QAAA,qBAAA,SAAA,mBAAuB;AACvC,QAAMC,eAAW,oBAAGJ,cAAH,QAAGA,cAAH,SAAA,SAAGA,UAAWK,YAAd,QAAA,sBAAA,SAAA,oBAAwB;AAEzC,QAAMC,mBAAoBC,QAAQC,UAAU,WAAW,MAAMA,QAAQ;AAErE,QAAMrB,mBACJ,OAAOC,yBAAyB,WAC5BA,uBACA;IAAEqB,KAAK;IAAGC,OAAO;IAAGC,QAAQ;IAAGC,MAAM;IAAG,GAAGxB;;AAEjD,QAAMyB,WAAWC,MAAMC,QAAQC,iBAAd,IAAmCA,oBAAoB;IAACA;;AACzE,QAAMC,wBAAwBJ,SAASK,SAAS;AAEhD,QAAMC,wBAAwB;IAC5BC,SAASjC;IACT0B,UAAUA,SAASQ,OAAOC,+BAAhB;;IAEVC,aAAaN;;AAGf,QAAM,EAAA,MAAA,gBAAA,WAAA,cAAA,eAAiDO,IAAmBC,YAAY;;IAEpFC,UAAU;IACVC,WAAWrB;IACXsB,sBAAsBC;IACtBC,UAAU;MACRC,WAAWzC,QAAQ0C;;IAErBC,YAAY;MACVC,OAAO;QAAEC,UAAUC,aAAahC;QAAaiC,eAAeC;OAAtD;MACNC,mBACEC,MAAM;QACJL,UAAU;QACVM,WAAW;QACXC,SAASC,WAAW,YAAYC,WAAU,IAAKC;QAC/C,GAAG1B;OAJA;MAMPoB,mBAAmBO,KAAK;QAAE,GAAG3B;OAAN;MACvB4B,KAAK;QACH,GAAG5B;QACH6B,OAAO,CAAC,EAAA,UAAA,OAAA,gBAAA,gBAAmCC,MAAsB;AAC/D,gBAAM,EAAE9C,OAAO+C,aAAa7C,QAAQ8C,aAAR9C,IAAyB+C,MAAMrB;AAC3D,gBAAMsB,eAAevB,SAASwB,SAASC;AACvCF,uBAAaG,YAAY,kCAAmC,GAAEC,kBAA9D;AACAJ,uBAAaG,YAAY,mCAAoC,GAAEP,mBAA/D;AACAI,uBAAaG,YAAY,+BAAgC,GAAEN,eAA3D;AACAG,uBAAaG,YAAY,gCAAiC,GAAEL,gBAA5D;;OARA;MAWJrD,UAAS4D,OAAgB;QAAEC,SAAS7D;QAAOsB,SAASwC;OAA5B;MACxBC,sCAAgB;;;OAAD;MACfC,oBAAoBC,KAAK;QAAErC,UAAU;OAAb;;GA/ByD;AAmCrF,QAAM,CAACsC,YAAYC,WAAb,IAA4BC,mDAA6BvC,SAAD;AAE9D,QAAMwC,eAAeC,0CAAeC,QAAD;AACnCC,4CAAgB,MAAM;AACpB,QAAIC;AACFJ,uBAAY,QAAZA,iBAAY,UAAZA,aAAY;KAEb;IAACI;IAAcJ;GAJH;AAMf,QAAMK,UAAM,wBAAGhD,eAAe1B,WAAlB,QAAA,0BAAA,SAAA,SAAG,sBAAsB2E;AACrC,QAAMC,UAAM,yBAAGlD,eAAe1B,WAAlB,QAAA,2BAAA,SAAA,SAAG,uBAAsB6E;AACrC,QAAMC,sBAAoB,yBAAApD,eAAe1B,WAAf,QAAA,2BAAA,SAAA,SAAA,uBAAsB+E,kBAAiB;AAEjE,QAAM,CAACC,eAAeC,gBAAhB,QAAoC/F,eAAAA,UAAA;AAC1CsF,4CAAgB,MAAM;AACpB,QAAI7E;AAASsF,uBAAiBC,OAAOC,iBAAiBxF,OAAxB,EAAiCyF,MAAlC;KAC5B;IAACzF;GAFW;AAIf,SACE,mCAAA0F,eADF,OAAA;IAEI,KAAKC,KAAKC;IACV,qCAAkC;IAClC,OAAO;MACL,GAAGC;MACHC,WAAWhB,eAAee,eAAeC,YAAY;;MACrDC,UAAU;MACVN,QAAQJ;MACR,CAAC,iCAAD,GAA4C;SAAA,wBAC1CtD,eAAeqC,qBAD2B,QAAA,0BAAA,SAAA,SAC1C,sBAAgCY;SADU,yBAE1CjD,eAAeqC,qBAF2B,QAAA,2BAAA,SAAA,SAE1C,uBAAgCc;QAChCc,KAAK,GAHqC;;IAQ9C,KAAKxG,MAAMyG;KAEX,mCAAAP,eAAC,6CAlBH;IAmBI,OAAO3F;IACP;IACA,eAAeO;IACf;IACA;IACA,iBAAiB6E;KAEjB,mCAAAO,eAAC,0CAAU,KARb,SAAA;IASI,aAAWnB;IACX,cAAYC;KACR5E,cAHN;IAIE,KAAKM;IACL,OAAO;MACL,GAAGN,aAAakE;;;MAGhBoC,WAAW,CAACpB,eAAe,SAAS1B;;MAEpC+C,UAAS,uBAAApE,eAAeuC,UAAf,QAAA,yBAAA,UAAA,qBAAqB8B,kBAAkB,IAAIhD;;GAXxD,CAAA,CARF,CAlBF;CAnGgB;AAuNtB,SAASiD,gCAAaC,OAA6B;AACjD,SAAOA,UAAU;;AAGnB,IAAMC,wCAAmBC,CAAAA,aAAsE;EAC7FC,MAAM;;EAENC,GAAGC,MAAM;AAAA,QAAA,wBAAA,wBAAA,wBAAA,wBAAA;AACP,UAAM,EAAA,WAAA,OAAA,eAAoBC,IAAmBD;AAE7C,UAAME,sBAAoB,yBAAAD,eAAeE,WAAf,QAAA,2BAAA,SAAA,SAAA,uBAAsBC,kBAAiB;AACjE,UAAMC,gBAAgBH;AACtB,UAAMI,aAAaD,gBAAgB,IAAIR,QAAQS;AAC/C,UAAMC,cAAcF,gBAAgB,IAAIR,QAAQU;AAEhD,UAAM,CAACC,YAAYC,WAAb,IAA4BC,mDAA6BC,SAAD;AAC9D,UAAMC,eAAe;MAAEC,OAAO;MAAMC,QAAQ;MAAOC,KAAK;MAASN,WAA5C;AAErB,UAAMO,iBAAe,0BAAA,yBAACf,eAAeE,WAAhB,QAAA,2BAAA,SAAA,SAAC,uBAAsBc,OAAvB,QAAA,2BAAA,SAAA,yBAA4B,KAAKX,aAAa;AACnE,UAAMY,iBAAe,0BAAA,yBAACjB,eAAeE,WAAhB,QAAA,2BAAA,SAAA,SAAC,uBAAsBgB,OAAvB,QAAA,2BAAA,SAAA,yBAA4B,KAAKZ,cAAc;AAEpE,QAAIU,IAAI;AACR,QAAIE,IAAI;AAER,QAAIX,eAAe,UAAU;AAC3BS,UAAIZ,gBAAgBO,eAAgB,GAAEI;AACtCG,UAAK,GAAE,CAACZ;eACCC,eAAe,OAAO;AAC/BS,UAAIZ,gBAAgBO,eAAgB,GAAEI;AACtCG,UAAK,GAAEC,MAAMC,SAASC,SAASf;eACtBC,eAAe,SAAS;AACjCS,UAAK,GAAE,CAACV;AACRY,UAAId,gBAAgBO,eAAgB,GAAEM;eAC7BV,eAAe,QAAQ;AAChCS,UAAK,GAAEG,MAAMC,SAASE,QAAQhB;AAC9BY,UAAId,gBAAgBO,eAAgB,GAAEM;;AAExC,WAAO;MAAElB,MAAM;;;;;;;AAInB,SAASU,mDAA6BC,WAAsB;AAC1D,QAAM,CAACa,MAAMC,QAAQ,QAAf,IAA2Bd,UAAUe,MAAM,GAAhB;AACjC,SAAO;IAACF;IAAcC;;;AAGxB,IAAME,4CAAOC;AACb,IAAMC,4CAASC;AACf,IAAMC,4CAAUC;;;;AExXhB,IAAMC,oCAAc;AACpB,IAAMC,sCAAgB;EAAEC,SAAS;EAAOC,YAAY;;AAMpD,IAAMC,mCAAa;AAGnB,IAAM,CAACC,kCAAYC,qCAAeC,2CAA5B,IAAqDC,0CAGzDJ,gCAHyE;AAM3E,IAAM,CAACK,qDAA+BC,wCAAhC,IAA+DC,yCACnEP,kCACA;EAACG;CAFoF;AAiCvF,IAAM,CAACK,2CAAqBC,2CAAtB,IACJJ,oDAAkDL,gCAArB;AAK/B,IAAMU,4CAAmBC,mCAAAA,YACvB,CAACC,OAA2CC,iBAAiB;AAC3D,SACE,mCAAAC,eAAC,iCAAW,UADd;IACuB,OAAOF,MAAMG;KAChC,mCAAAD,eAAC,iCAAW,MADd;IACmB,OAAOF,MAAMG;KAC5B,mCAAAD,eAAC,4CAAD,SAAA,CAAA,GAA0BF,OAD5B;IACmC,KAAKC;GAAtC,CAAA,CADF,CADF;CAHmB;AA2BzB,IAAMG,6CAAuBC,mCAAAA,YAG3B,CAACC,OAA+CC,iBAAiB;AACjE,QAAM,EAAA,yBAAA,aAAA,OAGG,OAHH,KAKJC,kBAAkBC,sBALd,yBAAA,0BAAA,cASJ,GAAGC,WAAH,IACEJ;AACJ,QAAMK,UAAMN,eAAAA,QAA0C,IAA1C;AACZ,QAAMO,eAAeC,0CAAgBN,cAAcI,GAAf;AACpC,QAAMG,YAAYC,0CAAaC,GAAD;AAC9B,QAAM,CAACR,mBAAmB,MAAMS,mBAA1B,IAAiDC,yCAAqB;IAC1EC,MAAMV;IACNW,aAAaC;IACbC,UAAUC;GAH+D;AAK3E,QAAM,CAACC,kBAAkBC,mBAAnB,QAA0CpB,eAAAA,UAAe,KAAf;AAChD,QAAMqB,mBAAmBC,0CAAeC,YAAD;AACvC,QAAMC,WAAWC,oCAAcC,uBAAD;AAC9B,QAAMC,sBAAkB3B,eAAAA,QAAa,KAAb;AACxB,QAAM,CAAC4B,qBAAqBC,sBAAtB,QAAgD7B,eAAAA,UAAe,CAAf;AAEtDA,qBAAAA,WAAgB,MAAM;AACpB,UAAM8B,OAAOxB,IAAIyB;AACjB,QAAID,MAAM;AACRA,WAAKE,iBAAiBC,mCAAaZ,gBAAnC;AACA,aAAO,MAAMS,KAAKI,oBAAoBD,mCAAaZ,gBAAtC;;KAEd;IAACA;GANJ;AAQA,SACE,mCAAAc,eAAC,2CADH;IAEI,OAAOT;IACP;IACA,KAAKjB;IACL;IACA;IACA,iBAAaT,eAAAA;MACVoC,CAAAA,cAAcxB,oBAAoBwB,SAAD;MAClC;QAACxB;;IAFU;IAIb,oBAAgBZ,eAAAA;MAAkB,MAAMoB,oBAAoB,IAAD;MAAQ,CAAA;IAAnD;IAChB,wBAAoBpB,eAAAA;MAClB,MAAM6B;QAAwBQ,CAAAA,cAAcA,YAAY;MAA5B;MAC5B,CAAA;IAFkB;IAIpB,2BAAuBrC,eAAAA;MACrB,MAAM6B;QAAwBQ,CAAAA,cAAcA,YAAY;MAA5B;MAC5B,CAAA;IAFqB;KAKvB,mCAAAF,eAAC,0CAAU,KApBb,SAAA;IAqBI,UAAUhB,oBAAoBS,wBAAwB,IAAI,KAAK;IAC/D,oBAAkBU;KACdjC,YAHN;IAIE,KAAKE;IACL,OAAO;MAAEgC,SAAS;MAAQ,GAAGtC,MAAMuC;;IACnC,aAAaC,0CAAqBxC,MAAMyC,aAAa,MAAM;AACzDf,sBAAgBI,UAAU;KADK;IAGjC,SAASU,0CAAqBxC,MAAM0C,SAAUC,CAAAA,UAAU;AAKtD,YAAMC,kBAAkB,CAAClB,gBAAgBI;AAEzC,UAAIa,MAAME,WAAWF,MAAMG,iBAAiBF,mBAAmB,CAAC1B,kBAAkB;AAChF,cAAM6B,kBAAkB,IAAIC,YAAYhB,mCAAaiB,mCAA7B;AACxBN,cAAMG,cAAcI,cAAcH,eAAlC;AAEA,YAAI,CAACA,gBAAgBI,kBAAkB;AACrC,gBAAMC,QAAQ7B,SAAQ,EAAG8B;YAAQC,CAAAA,SAASA,KAAKC;UAAjC;AACd,gBAAMC,aAAaJ,MAAMK;YAAMH,CAAAA,SAASA,KAAKI;UAA1B;AACnB,gBAAMC,cAAcP,MAAMK;YAAMH,CAAAA,SAASA,KAAKM,OAAO1D;UAAjC;AACpB,gBAAM2D,iBAAiB;YAACL;YAAYG;eAAgBP;YAAOC,OACzDS,OADqB;AAGvB,gBAAMC,iBAAiBF,eAAeG;YAAKV,CAAAA,SAASA,KAAKjD,IAAIyB;UAAtC;AACvBmC,2CAAWF,cAAD;;;AAIdrC,sBAAgBI,UAAU;KAvBC;IAyB7B,QAAQU;MAAqBxC,MAAMkE;MAAQ,MAAM/C,oBAAoB,KAAD;IAAxC;GAlC9B,CAAA,CApBF;CAtCyB;AAsG7B,IAAMgD,kCAAY;AAUlB,IAAMC,2CAAuBrE,mCAAAA,YAC3B,CAACC,OAA0CC,iBAAiB;AAC1D,QAAM,EAAA,yBAAA,YAEQ,MAFR,SAGK,OAHL,WAKJ,GAAGoE,UAAH,IACErE;AACJ,QAAMsE,SAASC,0CAAK;AACpB,QAAMX,KAAKzB,aAAamC;AACxB,QAAME,UAAUC,4CAAsBN,iCAAW1C,uBAAZ;AACrC,QAAMiD,mBAAmBF,QAAQtE,qBAAqB0D;AACtD,QAAMrC,WAAWC,oCAAcC,uBAAD;AAE9B,QAAM,EAAA,oBAAA,sBAAsBkD,IAA0BH;AAEtDzE,qBAAAA,WAAgB,MAAM;AACpB,QAAIwD,WAAW;AACbqB,yBAAkB;AAClB,aAAO,MAAMD,sBAAqB;;KAEnC;IAACpB;IAAWqB;IAAoBD;GALnC;AAOA,SACE,mCAAAzC,eAAC,iCAAW,UADd;IAEI,OAAOT;IACP;IACA;IACA;KAEA,mCAAAS,eAAC,0CAAU,MANb,SAAA;IAOI,UAAUwC,mBAAmB,IAAI;IACjC,oBAAkBF,QAAQnC;KACtBgC,WAHN;IAIE,KAAKpE;IACL,aAAauC,0CAAqBxC,MAAMyC,aAAcE,CAAAA,UAAU;AAG9D,UAAI,CAACY;AAAWZ,cAAMkC,eAAN;;AAEXL,gBAAQM,YAAYlB,EAApB;KAL0B;IAOjC,SAASpB;MAAqBxC,MAAM0C;MAAS,MAAM8B,QAAQM,YAAYlB,EAApB;IAAtB;IAC7B,WAAWpB,0CAAqBxC,MAAM+E,WAAYpC,CAAAA,UAAU;AAC1D,UAAIA,MAAMqC,QAAQ,SAASrC,MAAMsC,UAAU;AACzCT,gBAAQU,eAAR;AACA;;AAGF,UAAIvC,MAAME,WAAWF,MAAMG;AAAe;AAE1C,YAAMqC,cAAcC,qCAAezC,OAAO6B,QAAQnC,aAAamC,QAAQ9D,GAArC;AAElC,UAAIyE,gBAAgBE,QAAW;AAC7B1C,cAAMkC,eAAN;AACA,cAAMzB,QAAQ7B,SAAQ,EAAG8B;UAAQC,CAAAA,SAASA,KAAKC;QAAjC;AACd,YAAIQ,iBAAiBX,MAAMY;UAAKV,CAAAA,SAASA,KAAKjD,IAAIyB;QAA7B;AAErB,YAAIqD,gBAAgB;AAAQpB,yBAAeuB,QAAf;iBACnBH,gBAAgB,UAAUA,gBAAgB,QAAQ;AACzD,cAAIA,gBAAgB;AAAQpB,2BAAeuB,QAAf;AAC5B,gBAAMC,eAAexB,eAAeyB,QAAQ7C,MAAMG,aAA7B;AACrBiB,2BAAiBS,QAAQiB,OACrBC,gCAAU3B,gBAAgBwB,eAAe,CAAhC,IACTxB,eAAe4B,MAAMJ,eAAe,CAApC;;AAONK;UAAW,MAAM3B,iCAAWF,cAAD;QAAjB;;KA5BiB;GAbjC,CAAA,CANF;CAzBuB;AAsF7B,IAAM8B,gDAAuD;EAC3DC,WAAW;EAAQC,SAAS;EAC5BC,YAAY;EAAQC,WAAW;EAC/BC,QAAQ;EAASC,MAAM;EACvBC,UAAU;EAAQC,KAAK;;AAGzB,SAASC,2CAAqBC,KAAaC,KAAiB;AAC1D,MAAIA,QAAQ;AAAO,WAAOD;AAC1B,SAAOA,QAAQ,cAAc,eAAeA,QAAQ,eAAe,cAAcA;;AAKnF,SAASE,qCAAeC,OAA4BC,aAA2BH,KAAiB;AAC9F,QAAMD,MAAMD,2CAAqBI,MAAMH,KAAKC,GAAZ;AAChC,MAAIG,gBAAgB,cAAc;IAAC;IAAa;IAAcC,SAASL,GAArC;AAA2C,WAAOM;AACpF,MAAIF,gBAAgB,gBAAgB;IAAC;IAAW;IAAaC,SAASL,GAAlC;AAAwC,WAAOM;AACnF,SAAOhB,8CAAwBU,GAAD;;AAGhC,SAASO,iCAAWC,YAA2B;AAC7C,QAAMC,6BAA6BC,SAASC;AAC5C,aAAWC,aAAaJ,YAAY;AAElC,QAAII,cAAcH;AAA4B;AAC9CG,cAAUC,MAAV;AACA,QAAIH,SAASC,kBAAkBF;AAA4B;;;AAQ/D,SAASK,gCAAaC,OAAYC,YAAoB;AACpD,SAAOD,MAAME;IAAI,CAACC,GAAGC,WAAUJ,OAAOC,aAAaG,UAASJ,MAAMK,MAA9B;EAA7B;;AAGT,IAAMC,4CAAOC;AACb,IAAMC,4CAAOC;;;AEnTb,IAAMC,uCAAiB;EAAC;EAAS;;AACjC,IAAMC,mCAAa;EAAC;EAAa;EAAU;;AAC3C,IAAMC,kCAAY;EAAC;EAAW;EAAY;;AAC1C,IAAMC,wCAAkB;KAAIF;KAAeC;;AAC3C,IAAME,sCAA6C;EACjDC,KAAK;OAAIL;IAAgB;;EACzBM,KAAK;OAAIN;IAAgB;;;AAE3B,IAAMO,uCAA8C;EAClDF,KAAK;IAAC;;EACNC,KAAK;IAAC;;;AAOR,IAAME,kCAAY;AAGlB,IAAM,CAACC,kCAAYC,qCAAeC,2CAA5B,IAAqDC,0CAGzDJ,+BAHyE;AAM3E,IAAM,CAACK,yCAAmBC,yCAApB,IAAuCC,yCAAmBP,iCAAW;EACzEG;EACAK;EACAC;CAH6D;AAK/D,IAAMC,uCAAiBF,wCAAiB;AACxC,IAAMG,iDAA2BF,yCAA2B;AAS5D,IAAM,CAACG,oCAAcC,oCAAf,IAAiCR,wCAAoCL,+BAAnB;AASxD,IAAM,CAACc,wCAAkBC,wCAAnB,IAAyCV,wCAAwCL,+BAAvB;AAUhE,IAAMgB,4CAA6BC,CAAAA,UAAkC;AACnE,QAAM,EAAA,aAAA,OAAsB,OAAtB,UAAA,KAAA,cAAA,QAAkE,KAARC,IAAiBD;AACjF,QAAME,cAAcT,qCAAeU,WAAD;AAClC,QAAM,CAACC,SAASC,UAAV,QAAwBC,eAAAA,UAA0C,IAA1C;AAC9B,QAAMC,yBAAqBD,eAAAA,QAAa,KAAb;AAC3B,QAAME,mBAAmBC,0CAAeC,YAAD;AACvC,QAAMC,YAAYC,0CAAaC,GAAD;AAE9BP,qBAAAA,WAAgB,MAAM;AAGpB,UAAMQ,gBAAgB,MAAM;AAC1BP,yBAAmBQ,UAAU;AAC7BC,eAASC,iBAAiB,eAAeC,eAAe;QAAEC,SAAS;QAAMC,MAAM;OAA/E;AACAJ,eAASC,iBAAiB,eAAeC,eAAe;QAAEC,SAAS;QAAMC,MAAM;OAA/E;;AAEF,UAAMF,gBAAgB,MAAOX,mBAAmBQ,UAAU;AAC1DC,aAASC,iBAAiB,WAAWH,eAAe;MAAEK,SAAS;KAA/D;AACA,WAAO,MAAM;AACXH,eAASK,oBAAoB,WAAWP,eAAe;QAAEK,SAAS;OAAlE;AACAH,eAASK,oBAAoB,eAAeH,eAAe;QAAEC,SAAS;OAAtE;AACAH,eAASK,oBAAoB,eAAeH,eAAe;QAAEC,SAAS;OAAtE;;KAED,CAAA,CAfH;AAiBA,SACE,mCAAAG,eAAC,2CAAyBpB,aACxB,mCAAAoB,eAAC,oCAFL;IAGM,OAAOnB;IACP;IACA,cAAcK;IACd;IACA,iBAAiBH;KAEjB,mCAAAiB,eAAC,wCAPH;IAQI,OAAOnB;IACP,aAASG,eAAAA;MAAkB,MAAME,iBAAiB,KAAD;MAAS;QAACA;;IAAlD;IACT;IACA,KAAKG;IACL;KAECY,QAPH,CAPF,CADF;;AAkCJ,IAAMC,4CAAaC,mCAAAA,YACjB,CAACC,OAAqCC,iBAAiB;AACrD,QAAM,EAAA,aAAe,GAAGC,YAAH,IAAmBF;AACxC,QAAMG,cAAcC,qCAAeC,WAAD;AAClC,SAAO,mCAAAC,eAAC,2CAAD,SAAA,CAAA,GAA4BH,aAAiBD,aAApD;IAAiE,KAAKD;GAA/D,CAAA;CAJQ;AAcnB,IAAMM,oCAAc;AAGpB,IAAM,CAACC,sCAAgBC,sCAAjB,IAAqCC,wCAAsCH,mCAAa;EAC5FI,YAAYC;CAD8C;AAc5D,IAAMC,4CAAyCC,CAAAA,UAAwC;AACrF,QAAM,EAAA,aAAA,YAAA,UAAA,UAAqCC,IAAcD;AACzD,QAAME,UAAUC,qCAAeV,mCAAaW,WAAd;AAC9B,SACE,mCAAAC,eAAC,sCADH;IACkB,OAAOD;IAAa;KAClC,mCAAAC,eAAC,2CADH;IACY,SAASR,cAAcK,QAAQI;KACvC,mCAAAD,eAAC,2CADH;IACmB,SAAO;IAAC;KACtBE,QADH,CADF,CADF;;AAgBJ,IAAMC,qCAAe;AAUrB,IAAM,CAACC,2CAAqBC,2CAAtB,IACJC,wCAA2CH,kCAA1B;AAgBnB,IAAMI,4CAAcC,mCAAAA,YAClB,CAACC,OAAsCC,iBAAiB;AACtD,QAAMC,gBAAgBC,uCAAiBT,oCAAcM,MAAMI,WAArB;AACtC,QAAM,EAAA,aAAeF,cAAcG,YAAY,GAAGC,aAAH,IAAoBN;AACnE,QAAMO,UAAUC,qCAAed,oCAAcM,MAAMI,WAArB;AAC9B,QAAMK,cAAcC,yCAAmBhB,oCAAcM,MAAMI,WAArB;AAEtC,SACE,mCAAAO,eAAC,iCAAW,UADd;IACuB,OAAOX,MAAMI;KAChC,mCAAAO,eAAC,2CADH;IACY,SAASN,cAAcE,QAAQK;KACvC,mCAAAD,eAAC,iCAAW,MADd;IACmB,OAAOX,MAAMI;KAC3BK,YAAYI,QACX,mCAAAF,eAAC,4CAAD,SAAA,CAAA,GAA0BL,cAF9B;IAE4C,KAAKL;GAA7C,CAAA,IAEA,mCAAAU,eAAC,+CAAD,SAAA,CAAA,GAA6BL,cAF7B;IAE2C,KAAKL;GAAhD,CAAA,CAJJ,CADF,CADF;CARc;AA6BpB,IAAMa,6CAAuBf,mCAAAA,YAC3B,CAACC,OAA8CC,iBAAiB;AAC9D,QAAMM,UAAUC,qCAAed,oCAAcM,MAAMI,WAArB;AAC9B,QAAMW,UAAMhB,eAAAA,QAAyC,IAAzC;AACZ,QAAMiB,eAAeC,0CAAgBhB,cAAcc,GAAf;AAGpChB,qBAAAA,WAAgB,MAAM;AACpB,UAAMmB,UAAUH,IAAII;AACpB,QAAID;AAAS,aAAOE,WAAWF,OAAD;KAC7B,CAAA,CAHH;AAKA,SACE,mCAAAP,eAAC,uCAAD,SAAA,CAAA,GACMX,OAFR;IAGI,KAAKgB;IAGL,WAAWT,QAAQK;IAGnB,6BAA6BL,QAAQK;IACrC,sBAAoB;IAGpB,gBAAgBS;MACdrB,MAAMsB;MACLC,CAAAA,UAAUA,MAAMC,eAAN;MACX;QAAEC,0BAA0B;;IAHM;IAKpC,WAAW,MAAMlB,QAAQmB,aAAa,KAArB;GAjBnB,CAAA;CAbuB;AAoC7B,IAAMC,gDAA0B5B,mCAAAA,YAG9B,CAACC,OAA8CC,iBAAiB;AAChE,QAAMM,UAAUC,qCAAed,oCAAcM,MAAMI,WAArB;AAC9B,SACE,mCAAAO,eAAC,uCAAD,SAAA,CAAA,GACMX,OAFR;IAGI,KAAKC;IACL,WAAW;IACX,6BAA6B;IAC7B,sBAAsB;IACtB,WAAW,MAAMM,QAAQmB,aAAa,KAArB;GANnB,CAAA;CAN4B;AA+DhC,IAAME,wCAAkB7B,mCAAAA,YACtB,CAACC,OAA0CC,iBAAiB;AAC1D,QAAM,EAAA,aAAA,OAEG,OAFH,WAAA,iBAAA,kBAAA,6BAAA,cAAA,iBAAA,sBAAA,gBAAA,mBAAA,WAAA,sBAcJ,GAAGK,aAAH,IACEN;AACJ,QAAMO,UAAUC,qCAAed,oCAAcU,WAAf;AAC9B,QAAMK,cAAcC,yCAAmBhB,oCAAcU,WAAf;AACtC,QAAMyB,cAAcC,qCAAe1B,WAAD;AAClC,QAAM2B,wBAAwBC,+CAAyB5B,WAAD;AACtD,QAAM6B,WAAWC,oCAAc9B,WAAD;AAC9B,QAAM,CAAC+B,eAAeC,gBAAhB,QAAoCrC,eAAAA,UAA8B,IAA9B;AAC1C,QAAMsC,iBAAatC,eAAAA,QAA6B,IAA7B;AACnB,QAAMiB,eAAeC,0CAAgBhB,cAAcoC,YAAY9B,QAAQ+B,eAAnC;AACpC,QAAMC,eAAWxC,eAAAA,QAAa,CAAb;AACjB,QAAMyC,gBAAYzC,eAAAA,QAAa,EAAb;AAClB,QAAM0C,2BAAuB1C,eAAAA,QAAa,CAAb;AAC7B,QAAM2C,4BAAwB3C,eAAAA,QAAiC,IAAjC;AAC9B,QAAM4C,oBAAgB5C,eAAAA,QAAmB,OAAnB;AACtB,QAAM6C,sBAAkB7C,eAAAA,QAAa,CAAb;AAExB,QAAM8C,oBAAoBC,uBAAuBC,sBAAehD,eAAAA;AAChE,QAAMiD,yBAAyBF,uBAC3B;IAAEG,IAAIC;IAAMC,gBAAgB;MAC5BC;AAEJ,QAAMC,wBAAyBC,CAAAA,QAAgB;AAAA,QAAA,aAAA;AAC7C,UAAMC,SAASf,UAAUrB,UAAUmC;AACnC,UAAME,QAAQvB,SAAQ,EAAGwB;MAAQC,CAAAA,SAAS,CAACA,KAAKC;IAAlC;AACd,UAAMC,cAAcC,SAASC;AAC7B,UAAMC,gBAAY,cAAGP,MAAMQ;MAAMN,CAAAA,SAASA,KAAK3C,IAAII,YAAYyC;IAA1C,OAAH,QAAA,gBAAA,SAAA,SAAG,YAAwDK;AAC7E,UAAMC,SAASV,MAAMW;MAAKT,CAAAA,SAASA,KAAKO;IAAzB;AACf,UAAMG,YAAYC,mCAAaH,QAAQX,QAAQQ,YAAjB;AAC9B,UAAMO,WAAO,eAAGd,MAAMQ;MAAMN,CAAAA,SAASA,KAAKO,cAAcG;IAAxC,OAAH,QAAA,iBAAA,SAAA,SAAG,aAAoDrD,IAAII;AAGvE,KAAA,SAASoD,aAAaC,OAAe;AACpChC,gBAAUrB,UAAUqD;AACpBC,aAAOC,aAAanC,SAASpB,OAA7B;AACA,UAAIqD,UAAU;AAAIjC,iBAASpB,UAAUsD,OAAOE;UAAW,MAAMJ,aAAa,EAAD;UAAM;QAA1C;OACpChB,MAJH;AAMA,QAAIe;AAKFK;QAAW,MAAOL,QAAwBM,MAAzB;MAAP;;AAId7E,qBAAAA,WAAgB,MAAM;AACpB,WAAO,MAAM0E,OAAOC,aAAanC,SAASpB,OAA7B;KACZ,CAAA,CAFH;AAMA0D,4CAAc;AAEd,QAAMC,+BAA2B/E,eAAAA,aAAmBwB,CAAAA,UAA8B;AAAA,QAAA,uBAAA;AAChF,UAAMwD,kBAAkBpC,cAAcxB,cAAd,wBAA0BuB,sBAAsBvB,aAAhD,QAAA,0BAAA,SAAA,SAA0B,sBAA+B6D;AACjF,WAAOD,mBAAmBE,2CAAqB1D,QAAD,yBAAQmB,sBAAsBvB,aAA9B,QAAA,2BAAA,SAAA,SAAQ,uBAA+B+D,IAAvC;KAC7C,CAAA,CAH8B;AAKjC,SACE,mCAAAvE,eAAC,2CADH;IAEI,OAAOP;IACP;IACA,iBAAaL,eAAAA,aACVwB,CAAAA,UAAU;AACT,UAAIuD,yBAAyBvD,KAAD;AAASA,cAAMC,eAAN;OAEvC;MAACsD;KAJU;IAMb,iBAAa/E,eAAAA,aACVwB,CAAAA,UAAU;AAAA,UAAA;AACT,UAAIuD,yBAAyBvD,KAAD;AAAS;AACrC,OAAA,sBAAAc,WAAWlB,aAAX,QAAA,wBAAA,UAAA,oBAAoByD,MAApB;AACAxC,uBAAiB,IAAD;OAElB;MAAC0C;KANU;IAQb,oBAAgB/E,eAAAA,aACbwB,CAAAA,UAAU;AACT,UAAIuD,yBAAyBvD,KAAD;AAASA,cAAMC,eAAN;OAEvC;MAACsD;KAJa;IAMhB;IACA,gCAA4B/E,eAAAA,aAAmBoF,CAAAA,WAAW;AACxDzC,4BAAsBvB,UAAUgE;OAC/B,CAAA,CAFyB;KAI5B,mCAAAxE,eAAC,mBAAsBqC,wBACrB,mCAAArC,eAAC,2CA7BL;IA8BM,SAAO;IACP,SAASyE;IACT,kBAAkB/D,0CAAqBgE,iBAAkB9D,CAAAA,UAAU;AAAA,UAAA;AAGjEA,YAAMC,eAAN;AACA,OAAA,uBAAAa,WAAWlB,aAAX,QAAA,yBAAA,UAAA,qBAAoByD,MAApB;KAJoC;IAMtC,oBAAoBU;KAEpB,mCAAA3E,eAAC,2CAXH;IAYI,SAAO;IACP;IACA;IACA;IACA;IACA;IACA;KAEA,mCAAAA,eAAC,2CATH,SAAA;IAUI,SAAA;KACIoB,uBAFN;IAGE,KAAKtB,YAAY8E;IACjB,aAAY;IACZ;IACA,kBAAkBpD;IAClB,0BAA0BC;IAC1B,cAAcf,0CAAqBmE,cAAejE,CAAAA,UAAU;AAE1D,UAAI,CAACd,YAAYgF,mBAAmBtE;AAASI,cAAMC,eAAN;KAFb;GARpC,GAaE,mCAAAb,eAAC,2CAbH,SAAA;IAcI,MAAK;IACL,oBAAiB;IACjB,cAAY+E,mCAAanF,QAAQK,IAAT;IACxB,2BAAwB;IACxB,KAAKH,YAAY8E;KACb1D,aACAvB,cAPN;IAQE,KAAKU;IACL,OAAO;MAAE2E,SAAS;MAAQ,GAAGrF,aAAasF;;IAC1C,WAAWvE,0CAAqBf,aAAauF,WAAYtE,CAAAA,UAAU;AAEjE,YAAMuE,SAASvE,MAAMuE;AACrB,YAAMC,kBACJD,OAAOE,QAAQ,2BAAf,MAAgDzE,MAAM0E;AACxD,YAAMC,gBAAgB3E,MAAM4E,WAAW5E,MAAM6E,UAAU7E,MAAM8E;AAC7D,YAAMC,iBAAiB/E,MAAM+B,IAAIiD,WAAW;AAC5C,UAAIR,iBAAiB;AAEnB,YAAIxE,MAAM+B,QAAQ;AAAO/B,gBAAMC,eAAN;AACzB,YAAI,CAAC0E,iBAAiBI;AAAgBjD,gCAAsB9B,MAAM+B,GAAP;;AAG7D,YAAMpC,UAAUmB,WAAWlB;AAC3B,UAAII,MAAMuE,WAAW5E;AAAS;AAC9B,UAAI,CAACsF,sCAAgBC,SAASlF,MAAM+B,GAA/B;AAAqC;AAC1C/B,YAAMC,eAAN;AACA,YAAMgC,QAAQvB,SAAQ,EAAGwB;QAAQC,CAAAA,SAAS,CAACA,KAAKC;MAAlC;AACd,YAAM+C,iBAAiBlD,MAAMW;QAAKT,CAAAA,SAASA,KAAK3C,IAAII;MAA7B;AACvB,UAAIwF,gCAAUF,SAASlF,MAAM+B,GAAzB;AAA+BoD,uBAAeE,QAAf;AACnCC,uCAAWH,cAAD;KApBmB;IAsB/B,QAAQrF,0CAAqBrB,MAAM8G,QAASvF,CAAAA,UAAU;AAEpD,UAAI,CAACA,MAAM0E,cAAcc,SAASxF,MAAMuE,MAAnC,GAA4C;AAC/CrB,eAAOC,aAAanC,SAASpB,OAA7B;AACAqB,kBAAUrB,UAAU;;KAJI;IAO5B,eAAeE,0CACbrB,MAAMgH,eACNC,gCAAW1F,CAAAA,UAAU;AACnB,YAAMuE,SAASvE,MAAMuE;AACrB,YAAMoB,qBAAqBtE,gBAAgBzB,YAAYI,MAAM4F;AAI7D,UAAI5F,MAAM0E,cAAcc,SAASjB,MAA7B,KAAwCoB,oBAAoB;AAC9D,cAAME,SAAS7F,MAAM4F,UAAUvE,gBAAgBzB,UAAU,UAAU;AACnEwB,sBAAcxB,UAAUiG;AACxBxE,wBAAgBzB,UAAUI,MAAM4F;;KAT3B,CAFwB;GAvCrC,CAAA,CAbF,CATF,CAXF,CADF,CA5BF;CA7EkB;AAuNxB,IAAME,4CAAYC,mCAAAA,YAChB,CAACC,OAAoCC,iBAAiB;AACpD,QAAM,EAAA,aAAe,GAAGC,WAAH,IAAkBF;AACvC,SAAO,mCAAAG,eAAC,0CAAU,KAAlB,SAAA;IAAsB,MAAK;KAAYD,YAAhC;IAA4C,KAAKD;GAAjD,CAAA;CAHO;AAkBlB,IAAMG,4CAAYC,mCAAAA,YAChB,CAACC,OAAoCC,iBAAiB;AACpD,QAAM,EAAA,aAAe,GAAGC,WAAH,IAAkBF;AACvC,SAAO,mCAAAG,eAAC,0CAAU,KAAX,SAAA,CAAA,GAAmBD,YAA1B;IAAsC,KAAKD;GAApC,CAAA;CAHO;AAalB,IAAMG,kCAAY;AAClB,IAAMC,oCAAc;AAOpB,IAAMC,4CAAWC,mCAAAA,YACf,CAACC,OAAmCC,iBAAiB;AACnD,QAAM,EAAA,WAAa,OAAb,UAA8B,GAAGC,UAAH,IAAiBF;AACrD,QAAMG,UAAMJ,eAAAA,QAA6B,IAA7B;AACZ,QAAMK,cAAcC,yCAAmBT,iCAAWI,MAAMM,WAAlB;AACtC,QAAMC,iBAAiBC,4CAAsBZ,iCAAWI,MAAMM,WAAlB;AAC5C,QAAMG,eAAeC,0CAAgBT,cAAcE,GAAf;AACpC,QAAMQ,uBAAmBZ,eAAAA,QAAa,KAAb;AAEzB,QAAMa,eAAe,MAAM;AACzB,UAAMC,WAAWV,IAAIW;AACrB,QAAI,CAACC,YAAYF,UAAU;AACzB,YAAMG,kBAAkB,IAAIC,YAAYpB,mCAAa;QAAEqB,SAAS;QAAMC,YAAY;OAA1D;AACxBN,eAASO;QAAiBvB;QAAcwB,CAAAA,UAAUC,aAAX,QAAWA,aAAX,SAAA,SAAWA,SAAWD,KAAH;QAAW;UAAEE,MAAM;;MAA7E;AACAC,gDAA4BX,UAAUG,eAAX;AAC3B,UAAIA,gBAAgBS;AAClBd,yBAAiBG,UAAU;;AAE3BV,oBAAYsB,QAAZ;;;AAKN,SACE,mCAAAC,eAAC,oCAAD,SAAA,CAAA,GACMzB,WAFR;IAGI,KAAKO;IACL;IACA,SAASmB,0CAAqB5B,MAAM6B,SAASjB,YAAhB;IAC7B,eAAgBS,CAAAA,UAAU;AAAA,UAAA;AACxB,OAAA,uBAAArB,MAAM8B,mBAAN,QAAA,yBAAA,UAAA,qBAAA,KAAA9B,OAAsBqB,KAAjB;AACLV,uBAAiBG,UAAU;;IAE7B,aAAac,0CAAqB5B,MAAM+B,aAAcV,CAAAA,UAAU;AAAA,UAAA;AAI9D,UAAI,CAACV,iBAAiBG;AAAS,SAAA,uBAAAO,MAAMW,mBAAN,QAAA,yBAAA,UAAA,qBAAqBC,MAArB;KAJA;IAMjC,WAAWL,0CAAqB5B,MAAMkC,WAAYb,CAAAA,UAAU;AAC1D,YAAMc,gBAAgB5B,eAAe6B,UAAUtB,YAAY;AAC3D,UAAIC,YAAaoB,iBAAiBd,MAAMgB,QAAQ;AAAM;AACtD,UAAIC,qCAAeC,SAASlB,MAAMgB,GAA9B,GAAoC;AACtChB,cAAMW,cAAcC,MAApB;AAOAZ,cAAMmB,eAAN;;KAX2B;GAfjC,CAAA;CAxBW;AAoEjB,IAAMC,qCAAeC,mCAAAA,YACnB,CAACC,OAAuCC,iBAAiB;AACvD,QAAM,EAAA,aAAA,WAA0B,OAA1B,WAA4C,GAAGC,UAAH,IAAiBF;AACnE,QAAMG,iBAAiBC,4CAAsBC,iCAAWC,WAAZ;AAC5C,QAAMC,wBAAwBC,+CAAyBF,WAAD;AACtD,QAAMG,UAAMV,eAAAA,QAA6B,IAA7B;AACZ,QAAMW,eAAeC,0CAAgBV,cAAcQ,GAAf;AACpC,QAAM,CAACG,WAAWC,YAAZ,QAA4Bd,eAAAA,UAAe,KAAf;AAGlC,QAAM,CAACe,aAAaC,cAAd,QAAgChB,eAAAA,UAAe,EAAf;AACtCA,qBAAAA,WAAgB,MAAM;AACpB,UAAMiB,WAAWP,IAAIQ;AACrB,QAAID,UAAU;AAAA,UAAA;AACZD,uBAAe,wBAACC,SAASF,iBAAV,QAAA,0BAAA,SAAA,wBAAyB,IAAII,KAA7B,CAAD;;KAEf;IAAChB,UAAUiB;GALd;AAOA,SACE,mCAAAC,eAAC,iCAAW,UADd;IAEI,OAAOd;IACP;IACA,WAAWe,cAAF,QAAEA,cAAF,SAAEA,YAAaP;KAExB,mCAAAM,eAAC,2CALH,SAAA;IAKyB,SAAA;KAAYb,uBAAnC;IAA0D,WAAW,CAACe;GAAtE,GACE,mCAAAF,eAAC,0CAAU,KADb,SAAA;IAEI,MAAK;IACL,oBAAkBR,YAAY,KAAKW;IACnC,iBAAeD,YAAYC;IAC3B,iBAAeD,WAAW,KAAKC;KAC3BrB,WALN;IAME,KAAKQ;IAYL,eAAec,0CACbxB,MAAMyB,eACNC,gCAAWC,CAAAA,UAAU;AACnB,UAAIL;AACFnB,uBAAeyB,YAAYD,KAA3B;WACK;AACLxB,uBAAe0B,YAAYF,KAA3B;AACA,YAAI,CAACA,MAAMG,kBAAkB;AAC3B,gBAAMC,OAAOJ,MAAMK;AACnBD,eAAKE,MAAL;;;KAPG,CAFwB;IAcnC,gBAAgBT,0CACdxB,MAAMkC,gBACNR;MAAWC,CAAAA,UAAUxB,eAAeyB,YAAYD,KAA3B;IAAZ,CAFyB;IAIpC,SAASH;MAAqBxB,MAAMmC;MAAS,MAAMtB,aAAa,IAAD;IAAlC;IAC7B,QAAQW;MAAqBxB,MAAMoC;MAAQ,MAAMvB,aAAa,KAAD;IAAjC;GArC9B,CAAA,CADF,CALF;CAnBe;AAkHrB,IAAMwB,yCAAmB;AAEzB,IAAM,CAACC,0CAAoBC,0CAArB,IAA6CC,wCACjDH,wCACA;EAAEI,OAAOC;EAAWC,eAAe,MAAM;EAAA;CAFyB;AAkEpE,IAAMC,4CAAsB;AAI5B,IAAM,CAACC,6CAAuBC,6CAAxB,IAAmDC,wCACvDH,2CACA;EAAEI,SAAS;CAF6D;AAgD1E,IAAMC,4CAAgBC,mCAAAA,YACpB,CAACC,OAAwCC,iBAAiB;AACxD,QAAM,EAAA,aAAe,GAAGC,eAAH,IAAsBF;AAC3C,SACE,mCAAAG,eAAC,0CAAU,KADb,SAAA;IAEI,MAAK;IACL,oBAAiB;KACbD,gBAHN;IAIE,KAAKD;GAJP,CAAA;CAJgB;AAwCtB,IAAMG,iCAAW;AASjB,IAAM,CAACC,uCAAiBC,uCAAlB,IAAuCC,wCAAuCH,8BAAtB;AAmD9D,IAAMI,yCAAmB;AAKzB,IAAMC,4CAAiBC,mCAAAA,YACrB,CAACC,OAAyCC,iBAAiB;AACzD,QAAMC,UAAUC,qCAAeN,wCAAkBG,MAAMI,WAAzB;AAC9B,QAAMC,cAAcC,yCAAmBT,wCAAkBG,MAAMI,WAAzB;AACtC,QAAMG,aAAaC,wCAAkBX,wCAAkBG,MAAMI,WAAzB;AACpC,QAAMK,iBAAiBC,4CAAsBb,wCAAkBG,MAAMI,WAAzB;AAC5C,QAAMO,mBAAeZ,eAAAA,QAA4B,IAA5B;AACrB,QAAM,EAAA,sBAAA,2BAAwBa,IAA+BH;AAC7D,QAAMI,QAAQ;IAAET,aAAaJ,MAAMI;;AAEnC,QAAMU,qBAAiBf,eAAAA,aAAkB,MAAM;AAC7C,QAAIY,aAAaI;AAASC,aAAOC,aAAaN,aAAaI,OAAjC;AAC1BJ,iBAAaI,UAAU;KACtB,CAAA,CAHoB;AAKvBhB,qBAAAA;IAAgB,MAAMe;IAAgB;MAACA;;EAAvC;AAEAf,qBAAAA,WAAgB,MAAM;AACpB,UAAMmB,oBAAoBC,qBAAqBJ;AAC/C,WAAO,MAAM;AACXC,aAAOC,aAAaC,iBAApB;AACAN,iCAA2B,IAAD;;KAE3B;IAACO;IAAsBP;GAN1B;AAQA,SACE,mCAAAQ,eAAC,2CADH,SAAA;IACc,SAAA;KAAYP,KAAxB,GACE,mCAAAO,eAAC,oCADH,SAAA;IAEI,IAAIb,WAAWc;IACf,iBAAc;IACd,iBAAenB,QAAQoB;IACvB,iBAAef,WAAWgB;IAC1B,cAAYC,mCAAatB,QAAQoB,IAAT;KACpBtB,OANN;IAOE,KAAKyB,0CAAYxB,cAAcM,WAAWmB,eAA1B;IAGhB,SAAUC,CAAAA,UAAU;AAAA,UAAA;AAClB,OAAA,iBAAA3B,MAAM4B,aAAN,QAAA,mBAAA,UAAA,eAAA,KAAA5B,OAAgB2B,KAAX;AACL,UAAI3B,MAAM6B,YAAYF,MAAMG;AAAkB;AAM9CH,YAAMI,cAAcC,MAApB;AACA,UAAI,CAAC9B,QAAQoB;AAAMpB,gBAAQ+B,aAAa,IAArB;;IAErB,eAAeC,0CACblC,MAAMmC,eACNC,gCAAWT,CAAAA,UAAU;AACnBlB,qBAAe4B,YAAYV,KAA3B;AACA,UAAIA,MAAMG;AAAkB;AAC5B,UAAI,CAAC9B,MAAM6B,YAAY,CAAC3B,QAAQoB,QAAQ,CAACX,aAAaI,SAAS;AAC7DN,uBAAeG,2BAA2B,IAA1C;AACAD,qBAAaI,UAAUC,OAAOsB,WAAW,MAAM;AAC7CpC,kBAAQ+B,aAAa,IAArB;AACAnB,yBAAc;WACb,GAHoB;;KALlB,CAFwB;IAcnC,gBAAgBoB,0CACdlC,MAAMuC,gBACNH,gCAAWT,CAAAA,UAAU;AAAA,UAAA;AACnBb,qBAAc;AAEd,YAAM0B,eAAW,mBAAGtC,QAAQuC,aAAX,QAAA,qBAAA,SAAA,SAAG,iBAAiBC,sBAAjB;AACpB,UAAIF,aAAa;AAAA,YAAA;AAEf,cAAMG,QAAI,oBAAGzC,QAAQuC,aAAX,QAAA,sBAAA,SAAA,SAAG,kBAAiBG,QAAQD;AACtC,cAAME,YAAYF,SAAS;AAC3B,cAAMG,QAAQD,YAAY,KAAK;AAC/B,cAAME,kBAAkBP,YAAYK,YAAY,SAAS,OAAtB;AACnC,cAAMG,iBAAiBR,YAAYK,YAAY,UAAU,MAAvB;AAElCpC,uBAAeG,2BAA2B;UACxCqC,MAAM;;YAGJ;cAAEC,GAAGvB,MAAMwB,UAAUL;cAAOM,GAAGzB,MAAM0B;;YACrC;cAAEH,GAAGH;cAAiBK,GAAGZ,YAAYc;;YACrC;cAAEJ,GAAGF;cAAgBI,GAAGZ,YAAYc;;YACpC;cAAEJ,GAAGF;cAAgBI,GAAGZ,YAAYe;;YACpC;cAAEL,GAAGH;cAAiBK,GAAGZ,YAAYe;;;;SARzC;AAaAvC,eAAOC,aAAaE,qBAAqBJ,OAAzC;AACAI,6BAAqBJ,UAAUC,OAAOsB;UACpC,MAAM7B,eAAeG,2BAA2B,IAA1C;UACN;QAF6B;aAI1B;AACLH,uBAAe+C,eAAe7B,KAA9B;AACA,YAAIA,MAAMG;AAAkB;AAG5BrB,uBAAeG,2BAA2B,IAA1C;;KAnCK,CAFyB;IAyCpC,WAAWsB,0CAAqBlC,MAAMyD,WAAY9B,CAAAA,UAAU;AAC1D,YAAM+B,gBAAgBjD,eAAekD,UAAU5C,YAAY;AAC3D,UAAIf,MAAM6B,YAAa6B,iBAAiB/B,MAAMiC,QAAQ;AAAM;AAC5D,UAAIC,oCAAcxD,YAAYyD,GAAb,EAAkBC,SAASpC,MAAMiC,GAA9C,GAAoD;AAAA,YAAA;AACtD1D,gBAAQ+B,aAAa,IAArB;AAGA,SAAA,oBAAA/B,QAAQuC,aAAR,QAAA,sBAAA,UAAA,kBAAiBT,MAAjB;AAEAL,cAAMqC,eAAN;;KAT2B;GA5EjC,CAAA,CADF;CA1BiB;AA+HvB,IAAMC,yCAAmB;AAezB,IAAMC,4CAAiBC,mCAAAA,YACrB,CAACC,OAAyCC,iBAAiB;AACzD,QAAMC,gBAAgBC,uCAAiBC,oCAAcJ,MAAMK,WAArB;AACtC,QAAM,EAAA,aAAeH,cAAcI,YAAY,GAAGC,gBAAH,IAAuBP;AACtE,QAAMQ,UAAUC,qCAAeL,oCAAcJ,MAAMK,WAArB;AAC9B,QAAMK,cAAcC,yCAAmBP,oCAAcJ,MAAMK,WAArB;AACtC,QAAMO,aAAaC,wCAAkBhB,wCAAkBG,MAAMK,WAAzB;AACpC,QAAMS,UAAMf,eAAAA,QAAoC,IAApC;AACZ,QAAMgB,eAAeC,0CAAgBf,cAAca,GAAf;AACpC,SACE,mCAAAG,eAAC,iCAAW,UADd;IACuB,OAAOjB,MAAMK;KAChC,mCAAAY,eAAC,2CADH;IACY,SAASX,cAAcE,QAAQU;KACvC,mCAAAD,eAAC,iCAAW,MADd;IACmB,OAAOjB,MAAMK;KAC5B,mCAAAY,eAAC,uCADH,SAAA;IAEI,IAAIL,WAAWO;IACf,mBAAiBP,WAAWQ;KACxBb,iBAHN;IAIE,KAAKQ;IACL,OAAM;IACN,MAAML,YAAYW,QAAQ,QAAQ,SAAS;IAC3C,6BAA6B;IAC7B,sBAAsB;IACtB,WAAW;IACX,iBAAkBC,CAAAA,UAAU;AAAA,UAAA;AAE1B,UAAIZ,YAAYa,mBAAmBC;AAAS,SAAA,eAAAV,IAAIU,aAAJ,QAAA,iBAAA,UAAA,aAAaC,MAAb;AAC5CH,YAAMI,eAAN;;IAIF,kBAAmBJ,CAAAA,UAAUA,MAAMI,eAAN;IAC7B,gBAAgBC,0CAAqB3B,MAAM4B,gBAAiBN,CAAAA,UAAU;AAGpE,UAAIA,MAAMO,WAAWjB,WAAWkB;AAAStB,gBAAQuB,aAAa,KAArB;KAHP;IAKpC,iBAAiBJ,0CAAqB3B,MAAMgC,iBAAkBV,CAAAA,UAAU;AACtEZ,kBAAYuB,QAAZ;AAEAX,YAAMI,eAAN;KAHmC;IAKrC,WAAWC,0CAAqB3B,MAAMkC,WAAYZ,CAAAA,UAAU;AAE1D,YAAMa,kBAAkBb,MAAMc,cAAcC,SAASf,MAAMO,MAAnC;AACxB,YAAMS,aAAaC,qCAAe7B,YAAYW,GAAb,EAAkBmB,SAASlB,MAAMmB,GAA/C;AACnB,UAAIN,mBAAmBG,YAAY;AAAA,YAAA;AACjC9B,gBAAQuB,aAAa,KAArB;AAEA,SAAA,sBAAAnB,WAAWkB,aAAX,QAAA,wBAAA,UAAA,oBAAoBL,MAApB;AAEAH,cAAMI,eAAN;;KAT2B;GA5BjC,CAAA,CADF,CADF,CADF;CAViB;AAiEvB,SAASgB,mCAAaC,MAAe;AACnC,SAAOA,OAAO,SAAS;;AAWzB,SAASC,iCAAWC,YAA2B;AAC7C,QAAMC,6BAA6BC,SAASC;AAC5C,aAAWC,aAAaJ,YAAY;AAElC,QAAII,cAAcH;AAA4B;AAC9CG,cAAUC,MAAV;AACA,QAAIH,SAASC,kBAAkBF;AAA4B;;;AAQ/D,SAASK,gCAAaC,OAAYC,YAAoB;AACpD,SAAOD,MAAME;IAAI,CAACC,GAAGC,WAAUJ,OAAOC,aAAaG,UAASJ,MAAMK,MAA9B;EAA7B;;AAoBT,SAASC,mCAAaC,QAAkBC,QAAgBC,cAAuB;AAC7E,QAAMC,aAAaF,OAAOH,SAAS,KAAKM,MAAMC,KAAKJ,MAAX,EAAmBK;IAAOC,CAAAA,SAASA,SAASN,OAAO,CAAD;EAAlD;AACxC,QAAMO,mBAAmBL,aAAaF,OAAO,CAAD,IAAMA;AAClD,QAAMQ,oBAAoBP,eAAeF,OAAOU,QAAQR,YAAf,IAA+B;AACxE,MAAIS,gBAAgBnB,gCAAUQ,QAAQY,KAAKC,IAAIJ,mBAAmB,CAA5B,CAAT;AAC7B,QAAMK,sBAAsBN,iBAAiBV,WAAW;AACxD,MAAIgB;AAAqBH,oBAAgBA,cAAcI;MAAQC,CAAAA,MAAMA,MAAMd;IAAlC;AACzC,QAAMe,YAAYN,cAAcO;IAAMC,CAAAA,UACpCA,MAAMC,YAAN,EAAoBC,WAAWb,iBAAiBY,YAAjB,CAA/B;EADgB;AAGlB,SAAOH,cAAcf,eAAee,YAAYK;;AAUlD,SAASC,uCAAiBC,OAAcC,SAAkB;AACxD,QAAM,EAAA,GAAA,EAAKC,IAAMF;AACjB,MAAIG,SAAS;AACb,WAASC,IAAI,GAAGC,IAAIJ,QAAQ3B,SAAS,GAAG8B,IAAIH,QAAQ3B,QAAQ+B,IAAID,KAAK;AACnE,UAAME,KAAKL,QAAQG,CAAD,EAAIG;AACtB,UAAMC,KAAKP,QAAQG,CAAD,EAAIF;AACtB,UAAMO,KAAKR,QAAQI,CAAD,EAAIE;AACtB,UAAMG,KAAKT,QAAQI,CAAD,EAAIH;AAGtB,UAAMS,YAAcH,KAAKN,MAAQQ,KAAKR,KAAQK,KAAKE,KAAKH,OAAOJ,IAAIM,OAAOE,KAAKF,MAAMF;AACrF,QAAIK;AAAWR,eAAS,CAACA;;AAG3B,SAAOA;;AAGT,SAASS,2CAAqBC,OAA2BC,MAAgB;AACvE,MAAI,CAACA;AAAM,WAAO;AAClB,QAAMC,YAAY;IAAER,GAAGM,MAAMG;IAASd,GAAGW,MAAMI;;AAC/C,SAAOlB,uCAAiBgB,WAAWD,IAAZ;;AAGzB,SAASI,gCAAaC,SAAqE;AACzF,SAAQN,CAAAA,UAAWA,MAAMO,gBAAgB,UAAUD,QAAQN,KAAD,IAAUf;;AAGtE,IAAMuB,4CAAOC;AACb,IAAMC,4CAASC;AACf,IAAMC,4CAASC;AACf,IAAMC,4CAAUC;AAChB,IAAMC,4CAAQC;AACd,IAAMC,4CAAQC;AACd,IAAMC,4CAAOC;AAKb,IAAMC,4CAAYC;AAGlB,IAAMC,4CAAaC;AACnB,IAAMC,4CAAaC;;;AE/xCnB,IAAMC,2CAAqB;AAG3B,IAAM,CAACC,iDAA2BC,yCAA5B,IAAuDC,yCAC3DH,0CACA;EAACI;CAF4E;AAI/E,IAAMC,qCAAeD,0CAAe;AAYpC,IAAM,CAACE,4CAAsBC,4CAAvB,IACJN,gDAAoDD,wCAA3B;AAW3B,IAAMQ,4CAA6CC,CAAAA,UAA0C;AAC3F,QAAM,EAAA,qBAAA,UAAA,KAIJC,MAAMC,UAJF,aAAA,cAAA,QAOI,KAARC,IACEH;AACJ,QAAMI,YAAYR,mCAAaS,mBAAD;AAC9B,QAAMC,iBAAaC,eAAAA,QAAgC,IAAhC;AACnB,QAAM,CAACN,OAAO,OAAOO,OAAf,IAA0BC,yCAAqB;IACnDC,MAAMR;IACNS,aAAaC;IACbC,UAAUC;GAHwC;AAMpD,SACE,mCAAAC,eAAC,4CADH;IAEI,OAAOV;IACP,WAAWW,0CAAK;IAChB;IACA,WAAWA,0CAAK;IAChB;IACA,cAAcR;IACd,kBAAcD,eAAAA;MAAkB,MAAMC;QAASS,CAAAA,aAAa,CAACA;MAAhB;MAA2B;QAACT;;IAA3D;IACd;KAEA,mCAAAO,eAAC,2CAAD,SAAA,CAAA,GAAwBX,WAV1B;IAUqC;IAAY,cAAcI;IAAS;IAAU;GAAhF,GACGU,QADH,CAVF;;AAuBJ,IAAMC,qCAAe;AAMrB,IAAMC,4CAAsBC,mCAAAA,YAC1B,CAACC,OAA8CC,iBAAiB;AAC9D,QAAM,EAAA,qBAAA,WAAkC,OAAO,GAAGC,aAAH,IAAoBF;AACnE,QAAMG,UAAUC,6CAAuBP,oCAAcQ,mBAAf;AACtC,QAAMC,YAAYC,mCAAaF,mBAAD;AAC9B,SACE,mCAAAG,eAAC,2CADH,SAAA;IACwB,SAAA;KAAYF,SAAlC,GACE,mCAAAE,eAAC,0CAAU,QADb,SAAA;IAEI,MAAK;IACL,IAAIL,QAAQM;IACZ,iBAAc;IACd,iBAAeN,QAAQO;IACvB,iBAAeP,QAAQO,OAAOP,QAAQQ,YAAYC;IAClD,cAAYT,QAAQO,OAAO,SAAS;IACpC,iBAAeG,WAAW,KAAKD;IAC/B;KACIV,cATN;IAUE,KAAKY,0CAAYb,cAAcE,QAAQY,UAAvB;IAChB,eAAeC,0CAAqBhB,MAAMiB,eAAgBC,CAAAA,UAAU;AAGlE,UAAI,CAACL,YAAYK,MAAMC,WAAW,KAAKD,MAAME,YAAY,OAAO;AAC9DjB,gBAAQkB,aAAR;AAGA,YAAI,CAAClB,QAAQO;AAAMQ,gBAAMI,eAAN;;KAPY;IAUnC,WAAWN,0CAAqBhB,MAAMuB,WAAYL,CAAAA,UAAU;AAC1D,UAAIL;AAAU;AACd,UAAI;QAAC;QAAS;QAAKW,SAASN,MAAMO,GAA9B;AAAoCtB,gBAAQkB,aAAR;AACxC,UAAIH,MAAMO,QAAQ;AAAatB,gBAAQuB,aAAa,IAArB;AAG/B,UAAI;QAAC;QAAS;QAAK;QAAaF,SAASN,MAAMO,GAA3C;AAAiDP,cAAMI,eAAN;KANxB;GArBjC,CAAA,CADF;CANsB;AAqD5B,IAAMK,4CACJC,CAAAA,UACG;AACH,QAAM,EAAA,qBAAuB,GAAGC,YAAH,IAAmBD;AAChD,QAAME,YAAYC,mCAAaC,mBAAD;AAC9B,SAAO,mCAAAC,eAAC,2CAAD,SAAA,CAAA,GAA0BH,WAAeD,WAAzC,CAAA;;AAST,IAAMK,qCAAe;AAMrB,IAAMC,4CAAsBC,mCAAAA,YAC1B,CAACC,OAA8CC,iBAAiB;AAC9D,QAAM,EAAA,qBAAuB,GAAGC,aAAH,IAAoBF;AACjD,QAAMG,UAAUC,6CAAuBP,oCAAcQ,mBAAf;AACtC,QAAMC,YAAYC,mCAAaF,mBAAD;AAC9B,QAAMG,8BAA0BT,eAAAA,QAAa,KAAb;AAEhC,SACE,mCAAAU,eAAC,2CADH,SAAA;IAEI,IAAIN,QAAQO;IACZ,mBAAiBP,QAAQQ;KACrBL,WACAJ,cAJN;IAKE,KAAKD;IACL,kBAAkBW,0CAAqBZ,MAAMa,kBAAmBC,CAAAA,UAAU;AAAA,UAAA;AACxE,UAAI,CAACN,wBAAwBO;AAAS,SAAA,wBAAAZ,QAAQa,WAAWD,aAAnB,QAAA,0BAAA,UAAA,sBAA4BE,MAA5B;AACtCT,8BAAwBO,UAAU;AAElCD,YAAMI,eAAN;KAJoC;IAMtC,mBAAmBN,0CAAqBZ,MAAMmB,mBAAoBL,CAAAA,UAAU;AAC1E,YAAMM,gBAAgBN,MAAMO,OAAOD;AACnC,YAAME,gBAAgBF,cAAcG,WAAW,KAAKH,cAAcI,YAAY;AAC9E,YAAMC,eAAeL,cAAcG,WAAW,KAAKD;AACnD,UAAI,CAACnB,QAAQuB,SAASD;AAAcjB,gCAAwBO,UAAU;KAJjC;IAMvC,OAAO;MACL,GAAGf,MAAM2B;MAGP,kDACE;MACF,iDAAiD;MACjD,kDACE;MACF,uCAAuC;MACvC,wCAAwC;;GA5B9C,CAAA;CARsB;AAwD5B,IAAMC,4CAAoBC,mCAAAA,YACxB,CAACC,OAA4CC,iBAAiB;AAC5D,QAAM,EAAA,qBAAuB,GAAGC,WAAH,IAAkBF;AAC/C,QAAMG,YAAYC,mCAAaC,mBAAD;AAC9B,SAAO,mCAAAC,eAAC,2CAAD,SAAA,CAAA,GAAyBH,WAAeD,YAA/C;IAA2D,KAAKD;GAAzD,CAAA;CAJe;AAoB1B,IAAMM,4CAAoBC,mCAAAA,YACxB,CAACC,OAA4CC,iBAAiB;AAC5D,QAAM,EAAA,qBAAuB,GAAGC,WAAH,IAAkBF;AAC/C,QAAMG,YAAYC,mCAAaC,mBAAD;AAC9B,SAAO,mCAAAC,eAAC,2CAAD,SAAA,CAAA,GAAyBH,WAAeD,YAA/C;IAA2D,KAAKD;GAAzD,CAAA;CAJe;AAoB1B,IAAMM,4CAAmBC,mCAAAA,YACvB,CAACC,OAA2CC,iBAAiB;AAC3D,QAAM,EAAA,qBAAuB,GAAGC,UAAH,IAAiBF;AAC9C,QAAMG,YAAYC,mCAAaC,mBAAD;AAC9B,SAAO,mCAAAC,eAAC,2CAAD,SAAA,CAAA,GAAwBH,WAAeD,WAA9C;IAAyD,KAAKD;GAAvD,CAAA;CAJc;AAwGzB,IAAMM,4CAAwBC,mCAAAA,YAG5B,CAACC,OAAgDC,iBAAiB;AAClE,QAAM,EAAA,qBAAuB,GAAGC,eAAH,IAAsBF;AACnD,QAAMG,YAAYC,mCAAaC,mBAAD;AAC9B,SAAO,mCAAAC,eAAC,2CAAD,SAAA,CAAA,GAA6BH,WAAeD,gBAAnD;IAAmE,KAAKD;GAAjE,CAAA;CANqB;AAsE9B,IAAMM,4CAAyBC,mCAAAA,YAG7B,CAACC,OAAiDC,iBAAiB;AACnE,QAAM,EAAA,qBAAuB,GAAGC,gBAAH,IAAuBF;AACpD,QAAMG,YAAYC,mCAAaC,mBAAD;AAC9B,SAAO,mCAAAC,eAAC,2CAAD,SAAA,CAAA,GAA8BH,WAAeD,iBAApD;IAAqE,KAAKD;GAAnE,CAAA;CANsB;AAqB/B,IAAMM,4CAAyBC,mCAAAA,YAG7B,CAACC,OAAiDC,iBAAiB;AACnE,QAAM,EAAA,qBAAuB,GAAGC,gBAAH,IAAuBF;AACpD,QAAMG,YAAYC,mCAAaC,mBAAD;AAE9B,SACE,mCAAAC,eAAC,2CAAD,SAAA,CAAA,GACMH,WACAD,iBAHR;IAII,KAAKD;IACL,OAAO;MACL,GAAGD,MAAMO;MAGP,kDAAkD;MAClD,iDAAiD;MACjD,kDAAkD;MAClD,uCAAuC;MACvC,wCAAwC;;GAZ9C,CAAA;CAR2B;AA+B/B,IAAMC,4CAAOC;AACb,IAAMC,4CAAUC;AAChB,IAAMC,4CAASC;AACf,IAAMC,4CAAUC;AAChB,IAAMC,4CAAQC;AACd,IAAMC,4CAAQC;AACd,IAAMC,4CAAOC;AAKb,IAAMC,4CAAYC;AAGlB,IAAMC,4CAAaC;AACnB,IAAMC,4CAAaC;;;AjBndf,IAAAC,0BAAA;AAxCJ,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,yCAA2C,EAAE;AAAA,EACtF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAoC;AACpC,cAAY,IAAI,eAAe;AACjC;AAWA,IAAM,eAAqC;AAC3C,IAAM,sBAA4C;AAClD,IAAM,oBAA0C;AAIhD,IAAM,yBAAyB,eAAAC,QAAM,WAAWC,OAAK,CAAC;AAAA,EACpD;AAAA,EACA;AAAA,EACA;AAAA,EACA,GAAG;AACL,GAAG,QAAQ,oDAAuB,2CAAtB,EAAiC,KAAU,WAAW,GAAG,wIAAwI,SAAS,QAAQ,SAAS,GAAI,GAAG,OACzO;AAAA;AAAA,EACD,oDAAC,QAAK,MAAK,iBAAgB,WAAU,qBAArC;AAAA;AAAA;AAAA;AAAA,SAAuD;AAAA,KAFhD;AAAA;AAAA;AAAA;AAAA,OAGT,CAAmC;AACrCC,OAAM;AACN,uBAAuB,cAAoC,0CAAW;AACtE,IAAM,yBAAyB,eAAAF,QAAM,WAAWG,OAAM,CAAC;AAAA,EACrD;AAAA,EACA,GAAG;AACL,GAAG,QAAQ,oDAAuB,2CAAtB,EAAiC,KAAU,WAAW,GAAG,ybAAyb,SAAS,GAAI,GAAG,SAAngB;AAAA;AAAA;AAAA;AAAA,OAA0gB,CAAE;AACvhBC,OAAM;AACN,uBAAuB,cAAoC,0CAAW;AACtE,IAAM,sBAAsB,eAAAJ,QAAM,WAAWK,OAAM,CAAC;AAAA,EAClD;AAAA,EACA,aAAa;AAAA,EACb,GAAG;AACL,GAAG,QAAQ,oDAAuB,2CAAtB,EACR,8DAAuB,2CAAtB,EAA8B,KAAU,YAAwB,WAAW,GAAG,ybAAyb,SAAS,GAAI,GAAG,SAAxhB;AAAA;AAAA;AAAA;AAAA,OAA+hB,KADxhB;AAAA;AAAA;AAAA;AAAA,OAET,CAA+B;AACjCC,OAAM;AACN,oBAAoB,cAAoC,0CAAQ;AAChE,IAAM,mBAAmB,eAAAN,QAAM,WAAWO,OAAM,CAAC;AAAA,EAC/C;AAAA,EACA;AAAA,EACA,GAAG;AACL,GAAG,QAAQ,oDAAuB,2CAAtB,EAA2B,KAAU,WAAW,GAAG,0OAA0O,SAAS,QAAQ,SAAS,GAAI,GAAG,SAA/T;AAAA;AAAA;AAAA;AAAA,OAAsU,CAAE;AACnVC,OAAM;AACN,iBAAiB,cAAoC,0CAAK;AAC1D,IAAM,oBAAoB,eAAAR,QAAM,WAAWS,OAAM,CAAC;AAAA,EAChD;AAAA,EACA;AAAA,EACA,GAAG;AACL,GAAG,QAAQ,oDAAuB,2CAAtB,EAA4B,KAAU,WAAW,GAAG,qCAAqC,SAAS,QAAQ,SAAS,GAAI,GAAG,SAA3H;AAAA;AAAA;AAAA;AAAA,OAAkI,CAAE;AAC/IC,QAAO;AACP,kBAAkB,cAAoC,0CAAM;AAC5D,IAAM,wBAAwB,eAAAV,QAAM,WAAWW,QAAO,CAAC;AAAA,EACrD;AAAA,EACA,GAAG;AACL,GAAG,QAAQ,oDAAuB,2CAAtB,EAAgC,KAAU,WAAW,GAAG,4BAA4B,SAAS,GAAI,GAAG,SAArG;AAAA;AAAA;AAAA;AAAA,OAA4G,CAAE;AACzHC,QAAO;AACP,sBAAsB,cAAoC,0CAAU;AACpE,IAAM,uBAAuB,CAAC;AAAA,EAC5B;AAAA,EACA,GAAG;AACL,MAAM;AACJ,SAAO,oDAAC,UAAK,WAAW,GAAG,8CAA8C,SAAS,GAAI,GAAG,SAAlF;AAAA;AAAA;AAAA;AAAA,SAAyF;AAClG;AACAC,QAAO;AACP,qBAAqB,cAAc;AAEnC,IAAIC;AAAJ,IAAQC;AAAR,IAAaC;AAAb,IAAkBC;AAAlB,IAAuBC;AAAvB,IAA4BC;AAA5B,IAAiCC;AAAjC,IAAsCC;AAAtC,IAA2CC;AAA3C,IAAgDC;AAAhD,IAAsDC;AAAtD,IAA4DC;AAA5D,IAAkEC;AAClE,aAAaZ,MAAI,yCAAyC;AAC1D,aAAaC,MAAK,wBAAwB;AAC1C,aAAaC,MAAK,yCAAyC;AAC3D,aAAaC,MAAK,wBAAwB;AAC1C,aAAaC,MAAK,sCAAsC;AACxD,aAAaC,MAAK,qBAAqB;AACvC,aAAaC,MAAK,mCAAmC;AACrD,aAAaC,MAAK,kBAAkB;AACpC,aAAaC,MAAK,oCAAoC;AACtD,aAAaC,OAAM,mBAAmB;AACtC,aAAaC,OAAM,wCAAwC;AAC3D,aAAaC,OAAM,uBAAuB;AAC1C,aAAaC,OAAM,sBAAsB;AAEzC,OAAO,eAAe;AACtB,OAAO,eAAe;;;AkBvGtB,IAAI,aAAa;AACjB,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EACA;AACA,cAAY,IAAI,eAAe;AAC/B;AAuBO,SAAS,SAAS,SAAiB;AACxC,QAAM,oBAAoB;AAE1B,QAAM,QAAQ,QAAQ,MAAM,iBAAiB;AAC7C,MAAI,CAAC;AAAO,WAAO;AAEnB,SAAO,GAAG,MAAM,CAAC,UAAK,MAAM,CAAC;AAC/B;;;AnCkEQ,IAAAC,0BAAA;AAvGR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,mBAAqB,EAAE;AAAA,EAChE;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAIC,MAAK,aAAa;AAAtB,IACEC,OAAM,aAAa;AAErB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAc;AAChB;AAmCO,IAAM,QAAQ,MAAM,CAAC;AAAA,EAC1B,KAAK;AAAA,EACL,MAAM;AACR,GAAG;AAAA,EACD,KAAK;AAAA,EACL,MAAM;AACR,GAAG;AAAA,EACD,KAAK;AAAA,EACL,MAAM;AACR,GAAG;AAAA,EACD,KAAK;AAAA,EACL,MAAM;AACR,GAAG,GAAI,gBAAgB,CAAC;AAAA,EACtB,KAAK;AAAA,EACL,MAAM;AACR,CAAC,IAAI,CAAC,CAAE;AACO,SAAR,MAAuB;AAC5B,EAAAD,IAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,YAAY;AAChB,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACF,IAAI,YAAY,WAAS,KAAK;AAG9B,QAAM,CAAC,WAAW,YAAY,IAAI,eAAAE,QAAM,SAAS,KAAK;AAGtD,iBAAAA,QAAM,UAAU,MAAM;AACpB,UAAM,aAAa,QAAQ,gCAAmB;AAC9C,QAAI,YAAY;AACd,eAAS,UAAU;AAAA,IACrB;AAAA,EACF,GAAG,CAAC,CAAC;AAGL,iBAAAA,QAAM,UAAU,MAAM;AACpB,QAAI,wBAAsB;AACxB,eAAS,qBAAqB,MAAM,EAAE,CAAC,EAAE,UAAU,IAAI,MAAM;AAAA,IAC/D,OAAO;AACL,eAAS,qBAAqB,MAAM,EAAE,CAAC,EAAE,UAAU,OAAO,MAAM;AAAA,IAClE;AACA,iBAAa,IAAI;AAAA,EACnB,GAAG,CAAC,SAAS,KAAK,CAAC;AACnB,QAAM,aAAa,eAAAA,QAAM,QAAQ,MAAM;AACrC,WAAO,SAAS,WAAW,QAAQ,KAAK,SAAS,WAAW,SAAS;AAAA,EACvE,GAAG,CAAC,QAAQ,CAAC;AACb,SAAO,oDAAC,UAAK,MAAK,MACd;AAAA,wDAAC,UACC;AAAA,0DAAC,UAAK,SAAQ,WAAd;AAAA;AAAA;AAAA;AAAA,aAAsB;AAAA,MACtB,oDAAC,UAAK,MAAK,YAAW,SAAQ,wCAA9B;AAAA;AAAA;AAAA;AAAA,aAAmE;AAAA,MACnE,oDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,aAAM;AAAA,MACN,oDAAC,WAAD;AAAA;AAAA;AAAA;AAAA,aAAO;AAAA,SAJT;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,IACA,oDAAC,UAAK,WAAU,iCACb;AAAA,kBAAY,aAAa,oDAAC,YAAD;AAAA;AAAA;AAAA;AAAA,aAAQ,IAAK,oDAAC,aAClC,8DAAC,YAAD;AAAA;AAAA;AAAA;AAAA,aAAQ,KADyB;AAAA;AAAA;AAAA;AAAA,aAEnC,IAAe;AAAA,MAEnB,oDAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,aAAc;AAAA,MACd,oDAAC,uBAAD;AAAA;AAAA;AAAA;AAAA,aAAmB;AAAA,MACnB,oDAAC,aAAD;AAAA;AAAA;AAAA;AAAA,aAAS;AAAA,MACT,oDAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,aAAY;AAAA,SARd;AAAA;AAAA;AAAA;AAAA,WASA;AAAA,OAhBG;AAAA;AAAA;AAAA;AAAA,SAiBL;AACJ;AACAF,IAAG,KAAK,gCAAgC,OAAO,WAAY;AACzD,SAAO,CAAC,aAAa,WAAW;AAClC,CAAC;AACDG,OAAK;AACL,SAAS,UAAU;AAAA,EACjB;AACF,GAAG;AACD,SAAO,oDAAC,SAAI,WAAU,iBAClB;AAAA,wDAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,WAAc;AAAA,IACd,oDAAC,eAAD;AAAA;AAAA;AAAA;AAAA,WAAW;AAAA,IAEX,oDAAC,UAAK,WAAU,uCAAuC,YAAvD;AAAA;AAAA;AAAA;AAAA,WAAgE;AAAA,IAEhE,oDAAC,eAAD;AAAA;AAAA;AAAA;AAAA,WAAW;AAAA,OANR;AAAA;AAAA;AAAA;AAAA,SAOL;AACJ;AACAC,OAAM;AACN,SAAS,YAAY;AACnB,SAAO,oDAAC,YAAO,WAAU,0IACrB,8DAAC,aACC,8DAAC,SAAI,WAAU,kEACb;AAAA,wDAAC,WAAQ,IAAG,KAAI,WAAU,QACxB,8DAAC,iBAAM,KAAK,OAAO,MAAM,KAAI,YAAW,OAAO,KAAK,QAAQ,IAAI,WAAU,aAA1E;AAAA;AAAA;AAAA;AAAA,WAAoF,KADtF;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,IAEA,oDAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,WAAe;AAAA,IAEf,oDAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,WAAY;AAAA,OARd;AAAA;AAAA;AAAA;AAAA,SASA,KAVF;AAAA;AAAA;AAAA;AAAA,SAWA,KAZG;AAAA;AAAA;AAAA;AAAA,SAaL;AACJ;AACAC,OAAM;AACN,SAAS,eAAe;AACtB,SAAO,oDAAC,YAAO,WAAU,0IACrB,8DAAC,aACC,8DAAC,SAAI,WAAU,kEACb;AAAA,wDAAC,WAAQ,IAAG,KAAI,WAAU,QACxB,8DAAC,iBAAM,KAAK,OAAO,MAAM,KAAI,mBAAkB,OAAO,KAAK,QAAQ,MAAnE;AAAA;AAAA;AAAA;AAAA,WAAuE,KADzE;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,IACA,oDAAC,SACC,8DAAC,cACE,gBAAM,oDAAC,SACJ;AAAA,0DAAC,gBACC,8DAAC,SAAI,WAAU,QACb;AAAA,4DAAC,kBAAO,SAAQ,UAAS,MAAK,UAAS,OAAM,gBAAe,WAAU,iBAEpE,8DAAC,QAAK,MAAK,YAAX;AAAA;AAAA;AAAA;AAAA,eAAoB,KAFtB;AAAA;AAAA;AAAA;AAAA,eAGA;AAAA,QACA,oDAAC,kBAAO,SAAQ,UAAS,MAAK,UAAS,OAAM,gBAAe,WAAU,iBAEpE,8DAAC,QAAK,MAAK,eAAX;AAAA;AAAA;AAAA;AAAA,eAAuB,KAFzB;AAAA;AAAA;AAAA;AAAA,eAGA;AAAA,WARF;AAAA;AAAA;AAAA;AAAA,aASA,KAVF;AAAA;AAAA;AAAA;AAAA,aAWA;AAAA,MAEA,oDAAC,gBACC;AAAA,4DAAC,eACC,8DAAC,cAAW,oBAAZ;AAAA;AAAA;AAAA;AAAA,eAAgB,KADlB;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,oDAAC,SAAI,WAAU,oCACb,8DAAC,WAAQ,IAAG,KAAI,WAAU,QACxB,8DAAC,iBAAM,KAAK,OAAO,MAAM,KAAI,mBAAkB,OAAO,KAAK,QAAQ,MAAnE;AAAA;AAAA;AAAA;AAAA,eAAuE,KADzE;AAAA;AAAA;AAAA;AAAA,eAGA,KAJF;AAAA;AAAA;AAAA;AAAA,eAKA;AAAA,QACA,oDAAC,eACC,8DAAC,SAAI,WAAU,kEACb;AAAA,8DAAC,eAAD;AAAA;AAAA;AAAA;AAAA,iBAAW;AAAA,UACX,oDAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,iBAAe;AAAA,UACf,oDAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,iBAAY;AAAA,aAHd;AAAA;AAAA;AAAA;AAAA,eAIA,KALF;AAAA;AAAA;AAAA;AAAA,eAMA;AAAA,WAhBF;AAAA;AAAA;AAAA;AAAA,aAiBA;AAAA,SA/BG;AAAA;AAAA;AAAA;AAAA,WAgCL,KAjCJ;AAAA;AAAA;AAAA;AAAA,WAmCA,KApCF;AAAA;AAAA;AAAA;AAAA,WAqCA;AAAA,OA1CF;AAAA;AAAA;AAAA;AAAA,SA2CA,KA5CF;AAAA;AAAA;AAAA;AAAA,SA6CA,KA9CG;AAAA;AAAA;AAAA;AAAA,SA+CL;AACJ;AACAC,OAAM;AACN,SAAS,gBAAgB;AACvB,SAAO,oDAAC,SAAI,MAAK,cAAa,WAAU,6BACpC;AAAA,wDAAC,qBAAkB,OAAM,QAAO,MAAK,OAArC;AAAA;AAAA;AAAA;AAAA,WAAyC;AAAA,IACzC,oDAAC,qBAAkB,OAAM,YAAW,MAAK,eAAzC;AAAA;AAAA;AAAA;AAAA,WAAqD;AAAA,IACrD,oDAAC,qBAAkB,OAAM,WAAU,MAAK,cAAxC;AAAA;AAAA;AAAA;AAAA,WAAmD;AAAA,OAHhD;AAAA;AAAA;AAAA;AAAA,SAIL;AACJ;AACAC,OAAM;AACN,SAAS,kBAAkB;AAAA,EACzB;AAAA,EACA;AACF,GAAG;AACD,SAAO,oDAAC,WAAQ,IAAI,MAAM,WAAW,CAAC;AAAA,IACpC;AAAA,EACF,MAAM,GAAG,mEAAmE;AAAA,IAC1E,4CAA4C,CAAC;AAAA,IAC7C,+JAA+J;AAAA,EACjK,CAAC,GAGI,mBARE;AAAA;AAAA;AAAA;AAAA,SASL;AACJ;AACAC,OAAM;AACN,SAAS,aAAa;AACpB,EAAAP,KAAI;AACJ,QAAM,OAAO,YAAY,WAAS,MAAM,KAAK;AAC7C,QAAM,WAAW,YAAY;AAC7B,QAAM,OAAO,aAAa,QAAQ,SAAS;AAC3C,QAAM,YAAY,aAAa,QAAQ,OAAO;AAC9C,QAAM,eAAe,MAAM;AACzB,iBAAa,WAAW,SAAS;AACjC,iBAAa,WAAW,OAAO;AAC/B,aAAS,QAAQ;AAAA,EACnB;AACA,SAAO,oDAAC,SAAI,WAAU,4CASjB,iBAAO,oDAAC,eAAAC,QAAM,UAAN,EACL;AAAA,wDAAC,kBAAO,MAAK,UAAS,OAAM,8CAA6C,SAAQ,SAAQ,WAAU,uFAEhG,mBAAS,4CAA4C,KAFxD;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,IAEA,oDAAC,gBACC;AAAA,0DAAC,uBACC,8DAAC,kBAAO,MAAK,UAAS,OAAM,cAAa,SAAQ,aAAY,WAAU,mBAAkB;AAAA;AAAA,QAGvF,oDAAC,QAAK,MAAK,kBAAX;AAAA;AAAA;AAAA;AAAA,eAA0B;AAAA,WAH5B;AAAA;AAAA;AAAA;AAAA,aAIA,KALF;AAAA;AAAA;AAAA;AAAA,aAMA;AAAA,MAEA,oDAAC,uBACC;AAAA,4DAAC,qBAAkB,0BAAnB;AAAA;AAAA;AAAA;AAAA,eAA6B;AAAA,QAC7B,oDAAC,2BAAD;AAAA;AAAA;AAAA;AAAA,eAAuB;AAAA,QACvB,oDAAC,qBACC;AAAA,8DAAC,oBACC,8DAAC,QAAK,IAAG,YAAW,WAAU,oBAC5B,8DAAC,UAAK,uBAAN;AAAA;AAAA;AAAA;AAAA,iBAAa,KADf;AAAA;AAAA;AAAA;AAAA,iBAEA,KAHF;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,UACA,oDAAC,oBACC,8DAAC,QAAK,IAAG,cAAa,WAAU,oBAC9B,8DAAC,UAAK,yBAAN;AAAA;AAAA;AAAA;AAAA,iBAAe,KADjB;AAAA;AAAA;AAAA;AAAA,iBAEA,KAHF;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,UACA,oDAAC,oBACC,8DAAC,SAAI,SAAS,cAAc,MAAK,UAAS,WAAU,2CAElD;AAAA,gEAAC,QAAK,MAAK,WAAU,WAAU,aAA/B;AAAA;AAAA;AAAA;AAAA,mBAAyC;AAAA,YAAE;AAAA,eAF7C;AAAA;AAAA;AAAA;AAAA,iBAIA,KALF;AAAA;AAAA;AAAA;AAAA,iBAMA;AAAA,aAjBF;AAAA;AAAA;AAAA;AAAA,eAkBA;AAAA,WArBF;AAAA;AAAA;AAAA;AAAA,aAsBA;AAAA,SA/BF;AAAA;AAAA;AAAA;AAAA,WAgCA;AAAA,OAtCI;AAAA;AAAA;AAAA;AAAA,SAuCN,IAAoB,oDAAC,WAAQ,IAAG,UAAS,WAAU,kIAAiI,gCAAhK;AAAA;AAAA;AAAA;AAAA,SAGpB,KAnDC;AAAA;AAAA;AAAA;AAAA,SAqDL;AACJ;AACAD,KAAI,YAAY,gCAAgC,OAAO,WAAY;AACjE,SAAO,CAAC,aAAa,WAAW;AAClC,CAAC;AACDQ,OAAM;AACN,SAAS,YAAY;AACnB,SAAO,oDAAC,YAAO,WAAU,kEACrB,8DAAC,aACC,8DAAC,SAAI,WAAU,wBAEb;AAAA,wDAAC,SAAI,WAAU,6EAEb;AAAA,0DAAC,SAAI,WAAU,oDACb,8DAAC,SAAI,WAAU,yBACb;AAAA,4DAAC,WAAQ,IAAG,KAAI,WAAU,QACxB,8DAAC,iBAAM,KAAK,OAAO,MAAM,KAAI,YAAW,OAAO,KAAK,QAAQ,MAA5D;AAAA;AAAA;AAAA;AAAA,eAAgE,KADlE;AAAA;AAAA;AAAA;AAAA,eAGA;AAAA,QAEA,oDAAC,OAAE,WAAU,6CAA4C,4FAAzD;AAAA;AAAA;AAAA;AAAA,eAGA;AAAA,WATF;AAAA;AAAA;AAAA;AAAA,aAUA,KAXF;AAAA;AAAA;AAAA;AAAA,aAYA;AAAA,MAGA,oDAAC,SAAI,MAAK,cAAa,WAAU,0DAE9B,iBAAO,QAAQ,oBAAW,YAAY,EAAE,IAAI,CAAC,CAAC,KAAK,MAAM,GAAGC,WAAU,oDAAC,SAAgB,WAAU,uCAE5F;AAAA,4DAAC,QAAG,WAAU,oCAAoC,iBAAlD;AAAA;AAAA;AAAA;AAAA,eAAsD;AAAA,QAEtD,oDAAC,QAAG,WAAU,yBACX,iBAAO,IAAI,CAAC,GAAG,MAAM,oDAAC,QAAa,IAAI,EAAE,MAAM,QAAQ,EAAE,QAAQ,KAAK,EAAE,WAAW,WAAW,yBAAyB,IAAI,WAAU,kGAEjI,YAAE,SAF0B,GAAX;AAAA;AAAA;AAAA;AAAA,eAGpB,CAAO,KAJX;AAAA;AAAA;AAAA;AAAA,eAKA;AAAA,WAT2EA,QAAV;AAAA;AAAA;AAAA;AAAA,aAUnE,CAAM,KAZZ;AAAA;AAAA;AAAA;AAAA,aAaA;AAAA,SA9BF;AAAA;AAAA;AAAA;AAAA,WA+BA;AAAA,IAGA,oDAAC,SAAI,WAAU,mJACb;AAAA,0DAAC,SAAI;AAAA;AAAA,QACI;AAAA,QAAK;AAAA,QAAE;AAAA,QAAK;AAAA,WADrB;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAEA,oDAAC,SAAI,WAAU,6BACb;AAAA,4DAAC,QAAK,IAAG,2DAA0D,QAAO,UAAS,KAAI,wBAAuB,WAAU,wDAAuD,0BAA/K;AAAA;AAAA;AAAA;AAAA,eAGA;AAAA,QACA,oDAAC,QAAK,IAAG,iEAAgE,QAAO,UAAS,KAAI,wBAAuB,WAAU,wDAAuD,8BAArL;AAAA;AAAA;AAAA;AAAA,eAGA;AAAA,QACA,oDAAC,QAAK,IAAG,8DAA6D,QAAO,UAAS,KAAI,wBAAuB,WAAU,wDAAuD,kCAAlL;AAAA;AAAA;AAAA;AAAA,eAGA;AAAA,WAZF;AAAA;AAAA;AAAA;AAAA,aAaA;AAAA,SAlBF;AAAA;AAAA;AAAA;AAAA,WAmBA;AAAA,OAvDF;AAAA;AAAA;AAAA;AAAA,SAwDA,KAzDF;AAAA;AAAA;AAAA;AAAA,SA0DA,KA3DG;AAAA;AAAA;AAAA;AAAA,SA4DL;AACJ;AACAC,OAAM;AACN,IAAIR;AAAJ,IAAQC;AAAR,IAAaC;AAAb,IAAkBC;AAAlB,IAAuBC;AAAvB,IAA4BC;AAA5B,IAAiCC;AAAjC,IAAsCE;AACtC,aAAaR,MAAI,KAAK;AACtB,aAAaC,MAAK,WAAW;AAC7B,aAAaC,MAAK,WAAW;AAC7B,aAAaC,MAAK,cAAc;AAChC,aAAaC,MAAK,eAAe;AACjC,aAAaC,MAAK,mBAAmB;AACrC,aAAaC,MAAK,YAAY;AAC9B,aAAaE,MAAK,WAAW;AAE7B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["import_react", "React", "import_react", "createCollection", "name", "PROVIDER_NAME", "createCollectionContext", "createCollectionScope", "createContextScope", "CollectionProviderImpl", "useCollectionContext", "collectionRef", "current", "itemMap", "Map", "CollectionProvider", "props", "children", "ref", "React", "useRef", "$6vYhU$react", "COLLECTION_SLOT_NAME", "CollectionSlot", "forwardRef", "forwardedRef", "context", "scope", "composedRefs", "useComposedRefs", "ITEM_SLOT_NAME", "ITEM_DATA_ATTR", "CollectionItemSlot", "itemData", "useEffect", "set", "delete", "useCollection", "getItems", "useCallback", "collectionNode", "orderedNodes", "Array", "from", "querySelectorAll", "items", "values", "orderedItems", "sort", "a", "b", "indexOf", "Provider", "Slot", "ItemSlot", "VisuallyHidden", "React", "props", "forwardedRef", "$kVwnw$createElement", "position", "border", "width", "height", "padding", "margin", "overflow", "clip", "whiteSpace", "wordWrap", "style", "PROVIDER_NAME", "Collection", "useCollection", "createCollectionScope", "createCollection", "createToastContext", "createToastScope", "createContextScope", "ToastProviderProvider", "useToastProviderContext", "ToastProvider", "props", "children", "viewport", "setViewport", "React", "toastCount", "setToastCount", "isFocusedToastEscapeKeyDownRef", "isClosePausedRef", "$eyrYI$createElement", "__scopeToast", "prevCount", "propTypes", "label", "trim", "error", "Error", "VIEWPORT_NAME", "VIEWPORT_DEFAULT_HOTKEY", "VIEWPORT_PAUSE", "VIEWPORT_RESUME", "ToastViewport", "React", "props", "forwardedRef", "viewportProps", "context", "useToastProviderContext", "__scopeToast", "getItems", "useCollection", "wrapperRef", "headFocusProxyRef", "tailFocusProxyRef", "ref", "composedRefs", "useComposedRefs", "onViewportChange", "hotkeyLabel", "hotkey", "join", "replace", "hasToasts", "toastCount", "handleKeyDown", "event", "isHotkeyPressed", "every", "key", "code", "current", "focus", "document", "addEventListener", "removeEventListener", "wrapper", "viewport", "handlePause", "isClosePausedRef", "pauseEvent", "CustomEvent", "dispatchEvent", "handleResume", "resumeEvent", "handleFocusOutResume", "isFocusMovingOutside", "contains", "relatedTarget", "handlePointerLeaveResume", "isFocusInside", "activeElement", "window", "getSortedTabbableCandidates", "tabbingDirection", "toastItems", "tabbableCandidates", "map", "toastItem", "toastNode", "toastTabbableCandidates", "getTabbableCandidates", "reverse", "flat", "isMetaKey", "altKey", "ctrlKey", "metaKey", "isTabKey", "focusedElement", "isTabbingBackwards", "shiftKey", "targetIsViewport", "target", "sortedCandidates", "index", "findIndex", "candidate", "focusFirst", "slice", "preventDefault", "$eyrYI$createElement", "label", "pointerEvents", "undefined", "FOCUS_PROXY_NAME", "FocusProxy", "React", "props", "forwardedRef", "proxyProps", "context", "useToastProviderContext", "__scopeToast", "$eyrYI$createElement", "position", "event", "prevFocusedElement", "relatedTarget", "isFocusFromOutsideViewport", "viewport", "contains", "onFocusFromOutsideViewport", "TOAST_NAME", "TOAST_SWIPE_START", "TOAST_SWIPE_MOVE", "TOAST_SWIPE_CANCEL", "TOAST_SWIPE_END", "Toast", "React", "props", "forwardedRef", "open", "openProp", "toastProps", "setOpen", "useControllableState", "prop", "defaultProp", "defaultOpen", "onChange", "onOpenChange", "$eyrYI$createElement", "forceMount", "useCallbackRef", "onPause", "onResume", "composeEventHandlers", "onSwipeStart", "event", "currentTarget", "setAttribute", "onSwipeMove", "y", "detail", "delta", "style", "setProperty", "x", "onSwipeCancel", "removeProperty", "onSwipeEnd", "ToastInteractiveProvider", "useToastInteractiveContext", "createToastContext", "TOAST_NAME", "onClose", "ToastImpl", "React", "props", "forwardedRef", "duration", "durationProp", "toastProps", "context", "useToastProviderContext", "__scopeToast", "node", "setNode", "composedRefs", "useComposedRefs", "pointerStartRef", "swipeDeltaRef", "closeTimerStartTimeRef", "closeTimerRemainingTimeRef", "closeTimerRef", "onToastRemove", "handleClose", "useCallbackRef", "isFocusInToast", "contains", "document", "activeElement", "viewport", "focus", "startTimer", "Infinity", "window", "clearTimeout", "current", "Date", "getTime", "setTimeout", "handleResume", "onResume", "handlePause", "elapsedTime", "onPause", "addEventListener", "VIEWPORT_PAUSE", "VIEWPORT_RESUME", "removeEventListener", "open", "isClosePausedRef", "onToastAdd", "announceTextContent", "getAnnounceTextContent", "$eyrYI$createElement", "$eyrYI$Fragment", "type", "ReactDOM", "composeEventHandlers", "onEscapeKeyDown", "isFocusedToastEscapeKeyDownRef", "swipeDirection", "userSelect", "touchAction", "style", "onKeyDown", "event", "key", "nativeEvent", "defaultPrevented", "onPointerDown", "button", "x", "clientX", "y", "clientY", "onPointerMove", "hasSwipeMoveStarted", "Boolean", "isHorizontalSwipe", "includes", "clamp", "Math", "min", "max", "clampedX", "clampedY", "moveStartBuffer", "pointerType", "delta", "eventDetail", "originalEvent", "handleAndDispatchCustomEvent", "TOAST_SWIPE_MOVE", "onSwipeMove", "discrete", "isDeltaInDirection", "TOAST_SWIPE_START", "onSwipeStart", "target", "setPointerCapture", "pointerId", "abs", "onPointerUp", "hasPointerCapture", "releasePointerCapture", "toast", "currentTarget", "swipeThreshold", "TOAST_SWIPE_END", "onSwipeEnd", "TOAST_SWIPE_CANCEL", "onSwipeCancel", "preventDefault", "once", "propTypes", "error", "Error", "ToastAnnounce", "announceProps", "renderAnnounceText", "setRenderAnnounceText", "isAnnounced", "setIsAnnounced", "useNextFrame", "timer", "label", "children", "ToastTitle", "React", "props", "forwardedRef", "titleProps", "$eyrYI$createElement", "ToastDescription", "React", "props", "forwardedRef", "descriptionProps", "$eyrYI$createElement", "ACTION_NAME", "ToastAction", "React", "props", "forwardedRef", "actionProps", "altText", "$eyrYI$createElement", "propTypes", "Error", "CLOSE_NAME", "ToastClose", "React", "props", "forwardedRef", "closeProps", "interactiveContext", "useToastInteractiveContext", "__scopeToast", "$eyrYI$createElement", "composeEventHandlers", "onClick", "onClose", "ToastAnnounceExclude", "React", "props", "forwardedRef", "announceExcludeProps", "$eyrYI$createElement", "altText", "undefined", "getAnnounceTextContent", "container", "textContent", "childNodes", "Array", "from", "forEach", "node", "nodeType", "TEXT_NODE", "push", "isHTMLElement", "isHidden", "ariaHidden", "hidden", "style", "display", "isExcluded", "dataset", "radixToastAnnounceExclude", "radixToastAnnounceAlt", "handleAndDispatchCustomEvent", "name", "handler", "detail", "discrete", "currentTarget", "originalEvent", "event", "CustomEvent", "bubbles", "cancelable", "addEventListener", "once", "dispatchDiscreteCustomEvent", "dispatchEvent", "isDeltaInDirection", "delta", "direction", "threshold", "deltaX", "Math", "abs", "x", "deltaY", "y", "isDeltaX", "useNextFrame", "callback", "fn", "useCallbackRef", "useLayoutEffect", "raf1", "raf2", "window", "requestAnimationFrame", "cancelAnimationFrame", "ELEMENT_NODE", "getTabbableCandidates", "nodes", "walker", "document", "createTreeWalker", "NodeFilter", "SHOW_ELEMENT", "acceptNode", "isHiddenInput", "tagName", "type", "disabled", "FILTER_SKIP", "tabIndex", "FILTER_ACCEPT", "nextNode", "currentNode", "focusFirst", "candidates", "previouslyFocusedElement", "activeElement", "some", "candidate", "focus", "Provider", "ToastProvider", "Viewport", "ToastViewport", "Root", "Toast", "Title", "ToastTitle", "Description", "ToastDescription", "Action", "ToastAction", "Close", "ToastClose", "import_jsx_dev_runtime", "React", "_c", "_c2", "_c", "_c2", "import_react", "React", "React", "toast", "props", "index", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "_c", "import_react", "import_jsx_dev_runtime", "_c", "React", "_c2", "_c3", "_c4", "_c5", "_c6", "_c7", "_c8", "_c9", "_c10", "_c11", "_c", "_c2", "_c3", "_c4", "_c5", "_c6", "_c7", "_c8", "_c9", "_c10", "_c11", "import_react", "DirectionContext", "React", "undefined", "useDirection", "localDir", "globalDir", "React", "DirectionContext", "platform", "max", "offset", "platform", "placements", "sides", "side", "placement", "overflow", "platform", "x", "y", "min", "max", "offset", "window", "computePosition", "React", "import_react", "arrow", "platform", "computePosition", "data", "useSize", "element", "size", "setSize", "React", "undefined", "useLayoutEffect", "width", "offsetWidth", "height", "offsetHeight", "resizeObserver", "ResizeObserver", "entries", "Array", "isArray", "length", "entry", "borderSizeEntry", "borderSize", "observe", "box", "unobserve", "POPPER_NAME", "createPopperContext", "createPopperScope", "createContextScope", "PopperProvider", "usePopperContext", "Popper", "props", "children", "anchor", "setAnchor", "React", "$kY93V$createElement", "__scopePopper", "ANCHOR_NAME", "PopperAnchor", "React", "props", "forwardedRef", "anchorProps", "context", "usePopperContext", "__scopePopper", "ref", "composedRefs", "useComposedRefs", "onAnchorChange", "virtualRef", "current", "$kY93V$createElement", "CONTENT_NAME", "PopperContentProvider", "useContentContext", "createPopperContext", "PopperContent", "React", "props", "forwardedRef", "collisionPadding", "collisionPaddingProp", "contentProps", "context", "usePopperContext", "__scopePopper", "content", "setContent", "composedRefs", "useComposedRefs", "node", "arrow", "setArrow", "arrowSize", "useSize", "arrowWidth", "width", "arrowHeight", "height", "desiredPlacement", "side", "align", "top", "right", "bottom", "left", "boundary", "Array", "isArray", "collisionBoundary", "hasExplicitBoundaries", "length", "detectOverflowOptions", "padding", "filter", "isNotNull", "altBoundary", "middlewareData", "useFloating", "strategy", "placement", "whileElementsMounted", "autoUpdate", "elements", "reference", "anchor", "middleware", "offset", "mainAxis", "sideOffset", "alignmentAxis", "alignOffset", "avoidCollisions", "shift", "crossAxis", "limiter", "sticky", "limitShift", "undefined", "flip", "size", "apply", "availableHeight", "anchorWidth", "anchorHeight", "rects", "contentStyle", "floating", "style", "setProperty", "availableWidth", "floatingUIarrow", "element", "arrowPadding", "transformOrigin", "hideWhenDetached", "hide", "placedSide", "placedAlign", "getSideAndAlignFromPlacement", "handlePlaced", "useCallbackRef", "onPlaced", "useLayoutEffect", "isPositioned", "arrowX", "x", "arrowY", "y", "cannotCenterArrow", "centerOffset", "contentZIndex", "setContentZIndex", "window", "getComputedStyle", "zIndex", "$kY93V$createElement", "refs", "setFloating", "floatingStyles", "transform", "minWidth", "join", "dir", "animation", "opacity", "referenceHidden", "isNotNull", "value", "transformOrigin", "options", "name", "fn", "data", "middlewareData", "cannotCenterArrow", "arrow", "centerOffset", "isArrowHidden", "arrowWidth", "arrowHeight", "placedSide", "placedAlign", "getSideAndAlignFromPlacement", "placement", "noArrowAlign", "start", "center", "end", "arrowXCenter", "x", "arrowYCenter", "y", "rects", "floating", "height", "width", "side", "align", "split", "Root", "Popper", "Anchor", "PopperAnchor", "Content", "PopperContent", "ENTRY_FOCUS", "EVENT_OPTIONS", "bubbles", "cancelable", "GROUP_NAME", "Collection", "useCollection", "createCollectionScope", "createCollection", "createRovingFocusGroupContext", "createRovingFocusGroupScope", "createContextScope", "RovingFocusProvider", "useRovingFocusContext", "RovingFocusGroup", "React", "props", "forwardedRef", "$98Iye$createElement", "__scopeRovingFocusGroup", "RovingFocusGroupImpl", "React", "props", "forwardedRef", "currentTabStopId", "currentTabStopIdProp", "groupProps", "ref", "composedRefs", "useComposedRefs", "direction", "useDirection", "dir", "setCurrentTabStopId", "useControllableState", "prop", "defaultProp", "defaultCurrentTabStopId", "onChange", "onCurrentTabStopIdChange", "isTabbingBackOut", "setIsTabbingBackOut", "handleEntryFocus", "useCallbackRef", "onEntryFocus", "getItems", "useCollection", "__scopeRovingFocusGroup", "isClickFocusRef", "focusableItemsCount", "setFocusableItemsCount", "node", "current", "addEventListener", "ENTRY_FOCUS", "removeEventListener", "$98Iye$createElement", "tabStopId", "prevCount", "orientation", "outline", "style", "composeEventHandlers", "onMouseDown", "onFocus", "event", "isKeyboardFocus", "target", "currentTarget", "entryFocusEvent", "CustomEvent", "EVENT_OPTIONS", "dispatchEvent", "defaultPrevented", "items", "filter", "item", "focusable", "activeItem", "find", "active", "currentItem", "id", "candidateItems", "Boolean", "candidateNodes", "map", "focusFirst", "onBlur", "ITEM_NAME", "RovingFocusGroupItem", "itemProps", "autoId", "useId", "context", "useRovingFocusContext", "isCurrentTabStop", "onFocusableItemRemove", "onFocusableItemAdd", "preventDefault", "onItemFocus", "onKeyDown", "key", "shiftKey", "onItemShiftTab", "focusIntent", "getFocusIntent", "undefined", "reverse", "currentIndex", "indexOf", "loop", "wrapArray", "slice", "setTimeout", "MAP_KEY_TO_FOCUS_INTENT", "ArrowLeft", "ArrowUp", "ArrowRight", "ArrowDown", "PageUp", "Home", "PageDown", "End", "getDirectionAwareKey", "key", "dir", "getFocusIntent", "event", "orientation", "includes", "undefined", "focusFirst", "candidates", "PREVIOUSLY_FOCUSED_ELEMENT", "document", "activeElement", "candidate", "focus", "wrapArray", "array", "startIndex", "map", "_", "index", "length", "Root", "RovingFocusGroup", "Item", "RovingFocusGroupItem", "SELECTION_KEYS", "FIRST_KEYS", "LAST_KEYS", "FIRST_LAST_KEYS", "SUB_OPEN_KEYS", "ltr", "rtl", "SUB_CLOSE_KEYS", "MENU_NAME", "Collection", "useCollection", "createCollectionScope", "createCollection", "createMenuContext", "createMenuScope", "createContextScope", "createPopperScope", "createRovingFocusGroupScope", "usePopperScope", "useRovingFocusGroupScope", "MenuProvider", "useMenuContext", "MenuRootProvider", "useMenuRootContext", "Menu", "props", "modal", "popperScope", "__scopeMenu", "content", "setContent", "React", "isUsingKeyboardRef", "handleOpenChange", "useCallbackRef", "onOpenChange", "direction", "useDirection", "dir", "handleKeyDown", "current", "document", "addEventListener", "handlePointer", "capture", "once", "removeEventListener", "$epM9y$createElement", "children", "MenuAnchor", "React", "props", "forwardedRef", "anchorProps", "popperScope", "usePopperScope", "__scopeMenu", "$epM9y$createElement", "PORTAL_NAME", "PortalProvider", "usePortalContext", "createMenuContext", "forceMount", "undefined", "MenuPortal", "props", "container", "context", "useMenuContext", "__scopeMenu", "$epM9y$createElement", "open", "children", "CONTENT_NAME", "MenuContentProvider", "useMenuContentContext", "createMenuContext", "MenuContent", "React", "props", "forwardedRef", "portalContext", "usePortalContext", "__scopeMenu", "forceMount", "contentProps", "context", "useMenuContext", "rootContext", "useMenuRootContext", "$epM9y$createElement", "open", "modal", "MenuRootContentModal", "ref", "composedRefs", "useComposedRefs", "content", "current", "hideOthers", "composeEventHandlers", "onFocusOutside", "event", "preventDefault", "checkForDefaultPrevented", "onOpenChange", "MenuRootContentNonModal", "MenuContentImpl", "popperScope", "usePopperScope", "rovingFocusGroupScope", "useRovingFocusGroupScope", "getItems", "useCollection", "currentItemId", "setCurrentItemId", "contentRef", "onContentChange", "timerRef", "searchRef", "pointerGraceTimerRef", "pointerGraceIntentRef", "pointerDirRef", "lastPointerXRef", "ScrollLockWrapper", "disableOutsideScroll", "RemoveScroll", "scrollLockWrapperProps", "as", "Slot", "allowPinchZoom", "undefined", "handleTypeaheadSearch", "key", "search", "items", "filter", "item", "disabled", "currentItem", "document", "activeElement", "currentMatch", "find", "textValue", "values", "map", "nextMatch", "getNextMatch", "newItem", "updateSearch", "value", "window", "clearTimeout", "setTimeout", "focus", "useFocusGuards", "isPointerMovingToSubmenu", "isMovingTowards", "side", "isPointerInGraceArea", "area", "intent", "trapFocus", "onOpenAutoFocus", "onCloseAutoFocus", "dir", "onEntryFocus", "isUsingKeyboardRef", "getOpenState", "outline", "style", "onKeyDown", "target", "isKeyDownInside", "closest", "currentTarget", "isModifierKey", "ctrlKey", "altKey", "metaKey", "isCharacterKey", "length", "FIRST_LAST_KEYS", "includes", "candidateNodes", "LAST_KEYS", "reverse", "focusFirst", "onBlur", "contains", "onPointerMove", "whenMouse", "pointerXHasChanged", "clientX", "newDir", "MenuGroup", "React", "props", "forwardedRef", "groupProps", "$epM9y$createElement", "MenuLabel", "React", "props", "forwardedRef", "labelProps", "$epM9y$createElement", "ITEM_NAME", "ITEM_SELECT", "MenuItem", "React", "props", "forwardedRef", "itemProps", "ref", "rootContext", "useMenuRootContext", "__scopeMenu", "contentContext", "useMenuContentContext", "composedRefs", "useComposedRefs", "isPointerDownRef", "handleSelect", "menuItem", "current", "disabled", "itemSelectEvent", "CustomEvent", "bubbles", "cancelable", "addEventListener", "event", "onSelect", "once", "dispatchDiscreteCustomEvent", "defaultPrevented", "onClose", "$epM9y$createElement", "composeEventHandlers", "onClick", "onPointerDown", "onPointerUp", "currentTarget", "click", "onKeyDown", "isTypingAhead", "searchRef", "key", "SELECTION_KEYS", "includes", "preventDefault", "MenuItemImpl", "React", "props", "forwardedRef", "itemProps", "contentContext", "useMenuContentContext", "ITEM_NAME", "__scopeMenu", "rovingFocusGroupScope", "useRovingFocusGroupScope", "ref", "composedRefs", "useComposedRefs", "isFocused", "setIsFocused", "textContent", "setTextContent", "menuItem", "current", "trim", "children", "$epM9y$createElement", "textValue", "disabled", "undefined", "composeEventHandlers", "onPointerMove", "whenMouse", "event", "onItemLeave", "onItemEnter", "defaultPrevented", "item", "currentTarget", "focus", "onPointerLeave", "onFocus", "onBlur", "RADIO_GROUP_NAME", "RadioGroupProvider", "useRadioGroupContext", "createMenuContext", "value", "undefined", "onValueChange", "ITEM_INDICATOR_NAME", "ItemIndicatorProvider", "useItemIndicatorContext", "createMenuContext", "checked", "MenuSeparator", "React", "props", "forwardedRef", "separatorProps", "$epM9y$createElement", "SUB_NAME", "MenuSubProvider", "useMenuSubContext", "createMenuContext", "SUB_TRIGGER_NAME", "MenuSubTrigger", "React", "props", "forwardedRef", "context", "useMenuContext", "__scopeMenu", "rootContext", "useMenuRootContext", "subContext", "useMenuSubContext", "contentContext", "useMenuContentContext", "openTimerRef", "onPointerGraceIntentChange", "scope", "clearOpenTimer", "current", "window", "clearTimeout", "pointerGraceTimer", "pointerGraceTimerRef", "$epM9y$createElement", "triggerId", "open", "contentId", "getOpenState", "composeRefs", "onTriggerChange", "event", "onClick", "disabled", "defaultPrevented", "currentTarget", "focus", "onOpenChange", "composeEventHandlers", "onPointerMove", "whenMouse", "onItemEnter", "setTimeout", "onPointerLeave", "contentRect", "content", "getBoundingClientRect", "side", "dataset", "rightSide", "bleed", "contentNearEdge", "contentFarEdge", "area", "x", "clientX", "y", "clientY", "top", "bottom", "onTriggerLeave", "onKeyDown", "isTypingAhead", "searchRef", "key", "SUB_OPEN_KEYS", "dir", "includes", "preventDefault", "SUB_CONTENT_NAME", "MenuSubContent", "React", "props", "forwardedRef", "portalContext", "usePortalContext", "CONTENT_NAME", "__scopeMenu", "forceMount", "subContentProps", "context", "useMenuContext", "rootContext", "useMenuRootContext", "subContext", "useMenuSubContext", "ref", "composedRefs", "useComposedRefs", "$epM9y$createElement", "open", "contentId", "triggerId", "dir", "event", "isUsingKeyboardRef", "current", "focus", "preventDefault", "composeEventHandlers", "onFocusOutside", "target", "trigger", "onOpenChange", "onEscapeKeyDown", "onClose", "onKeyDown", "isKeyDownInside", "currentTarget", "contains", "isCloseKey", "SUB_CLOSE_KEYS", "includes", "key", "getOpenState", "open", "focusFirst", "candidates", "PREVIOUSLY_FOCUSED_ELEMENT", "document", "activeElement", "candidate", "focus", "wrapArray", "array", "startIndex", "map", "_", "index", "length", "getNextMatch", "values", "search", "currentMatch", "isRepeated", "Array", "from", "every", "char", "normalizedSearch", "currentMatchIndex", "indexOf", "wrappedValues", "Math", "max", "excludeCurrentMatch", "filter", "v", "nextMatch", "find", "value", "toLowerCase", "startsWith", "undefined", "isPointInPolygon", "point", "polygon", "y", "inside", "i", "j", "xi", "x", "yi", "xj", "yj", "intersect", "isPointerInGraceArea", "event", "area", "cursorPos", "clientX", "clientY", "whenMouse", "handler", "pointerType", "Root", "Menu", "Anchor", "MenuAnchor", "Portal", "MenuPortal", "Content", "MenuContent", "Group", "MenuGroup", "Label", "MenuLabel", "Item", "MenuItem", "Separator", "MenuSeparator", "SubTrigger", "MenuSubTrigger", "SubContent", "MenuSubContent", "DROPDOWN_MENU_NAME", "createDropdownMenuContext", "createDropdownMenuScope", "createContextScope", "createMenuScope", "useMenuScope", "DropdownMenuProvider", "useDropdownMenuContext", "DropdownMenu", "props", "open", "openProp", "modal", "menuScope", "__scopeDropdownMenu", "triggerRef", "React", "setOpen", "useControllableState", "prop", "defaultProp", "defaultOpen", "onChange", "onOpenChange", "$9kmUS$createElement", "useId", "prevOpen", "children", "TRIGGER_NAME", "DropdownMenuTrigger", "React", "props", "forwardedRef", "triggerProps", "context", "useDropdownMenuContext", "__scopeDropdownMenu", "menuScope", "useMenuScope", "$9kmUS$createElement", "triggerId", "open", "contentId", "undefined", "disabled", "composeRefs", "triggerRef", "composeEventHandlers", "onPointerDown", "event", "button", "ctrlKey", "onOpenToggle", "preventDefault", "onKeyDown", "includes", "key", "onOpenChange", "DropdownMenuPortal", "props", "portalProps", "menuScope", "useMenuScope", "__scopeDropdownMenu", "$9kmUS$createElement", "CONTENT_NAME", "DropdownMenuContent", "React", "props", "forwardedRef", "contentProps", "context", "useDropdownMenuContext", "__scopeDropdownMenu", "menuScope", "useMenuScope", "hasInteractedOutsideRef", "$9kmUS$createElement", "contentId", "triggerId", "composeEventHandlers", "onCloseAutoFocus", "event", "current", "triggerRef", "focus", "preventDefault", "onInteractOutside", "originalEvent", "detail", "ctrlLeftClick", "button", "ctrlKey", "isRightClick", "modal", "style", "DropdownMenuGroup", "React", "props", "forwardedRef", "groupProps", "menuScope", "useMenuScope", "__scopeDropdownMenu", "$9kmUS$createElement", "DropdownMenuLabel", "React", "props", "forwardedRef", "labelProps", "menuScope", "useMenuScope", "__scopeDropdownMenu", "$9kmUS$createElement", "DropdownMenuItem", "React", "props", "forwardedRef", "itemProps", "menuScope", "useMenuScope", "__scopeDropdownMenu", "$9kmUS$createElement", "DropdownMenuSeparator", "React", "props", "forwardedRef", "separatorProps", "menuScope", "useMenuScope", "__scopeDropdownMenu", "$9kmUS$createElement", "DropdownMenuSubTrigger", "React", "props", "forwardedRef", "subTriggerProps", "menuScope", "useMenuScope", "__scopeDropdownMenu", "$9kmUS$createElement", "DropdownMenuSubContent", "React", "props", "forwardedRef", "subContentProps", "menuScope", "useMenuScope", "__scopeDropdownMenu", "$9kmUS$createElement", "style", "Root", "DropdownMenu", "Trigger", "DropdownMenuTrigger", "Portal", "DropdownMenuPortal", "Content", "DropdownMenuContent", "Group", "DropdownMenuGroup", "Label", "DropdownMenuLabel", "Item", "DropdownMenuItem", "Separator", "DropdownMenuSeparator", "SubTrigger", "DropdownMenuSubTrigger", "SubContent", "DropdownMenuSubContent", "import_jsx_dev_runtime", "React", "_c", "_c2", "_c3", "_c4", "_c5", "_c6", "_c7", "_c8", "_c9", "_c10", "_c11", "_c12", "_c13", "_c", "_c2", "_c3", "_c4", "_c5", "_c6", "_c7", "_c8", "_c9", "_c10", "_c11", "_c12", "_c13", "import_jsx_dev_runtime", "_s", "_s2", "React", "_c", "_c2", "_c3", "_c4", "_c5", "_c6", "_c7", "index", "_c8"]
}
