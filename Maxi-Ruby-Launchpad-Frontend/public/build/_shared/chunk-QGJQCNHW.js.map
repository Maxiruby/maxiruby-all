{
  "version": 3,
  "sources": ["../../../app/components/shared/Image.tsx", "../../../app/config/images.config.ts", "../../../app/config/meta.config.ts", "../../../app/config/index.ts"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/shared/Image.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/shared/Image.tsx\");\n  import.meta.hot.lastModified = \"1691945345601.3015\";\n}\n// REMIX HMR END\n\nimport React, { useEffect } from \"react\";\n\n// utils\nimport { cn } from \"~/utils/cn\";\n/**\n * @param {string} src - source of image\n * @param {string} alt - alternate text\n * @param {string} loading - load method [default: lazy]\n * @param {string} objectFit - render behaviour of image\n * @param {number | string} width - width of image\n * @param {number | string} height - height of image\n * @param {function} onLoad - callback function on image load\n * @returns {node} <img /> element\n */\nconst Image = _s(React.memo(_c = _s(function Image({\n  src,\n  alt,\n  loading = \"lazy\",\n  objectFit,\n  width,\n  height,\n  onLoad\n}) {\n  _s();\n  const id = React.useId();\n  const image = React.useRef(null);\n  const [imageLoaded, setImageLoaded] = React.useState(true);\n  const handleImageLoaded = () => {\n    setImageLoaded(true);\n    if (typeof onLoad === \"function\") {\n      onLoad();\n    }\n  };\n\n  // loaded control on mount because if image is already in cache\n  // onLoad function not trigger again\n  useEffect(() => {\n    if (!image.current) return;\n    if (image.current.complete) {\n      handleImageLoaded();\n    }\n  }, [image.current]);\n  const props = {\n    src,\n    alt,\n    loading,\n    ...(width && {\n      width\n    }),\n    ...(height && {\n      height\n    })\n  };\n\n  // fix: onLoad not working\n\n  return <img ref={image} key={id} id={id} className={cn(\"opacity-0 transition-opacity duration-75\", {\n    \"!opacity-100\": imageLoaded,\n    \"max-w-full\": !width,\n    \"object-cover\": objectFit === \"cover\",\n    \"object-contain\": objectFit === \"contain\",\n    \"object-fill\": objectFit === \"fill\"\n  })} style={width && height ? {\n    width,\n    height\n  } : {}} onLoad={handleImageLoaded} {...props} />;\n}, \"uFAAyTGojiCHhdfei0Xce7uKXko=\", false, function () {\n  return [React.useId];\n})), \"uFAAyTGojiCHhdfei0Xce7uKXko=\", false, function () {\n  return [React.useId];\n});\n_c2 = Image;\nexport default Image;\n/**\n * container for image component.\n * can be used for image loading placeholders.\n * usage: wrap your Image component by ImageContainer.\n * @param {string} className css classnames\n * @param {node} children <Image /> element\n * @returns <span /> element\n */\nexport function ImageContainer({\n  className,\n  children\n}) {\n  return <span className={cn(\"flex flex-1 bg-gray-100 dark:bg-gray-800 animate-pulse\", className)}>\n      {children}\n    </span>;\n}\n_c3 = ImageContainer;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Image$React.memo\");\n$RefreshReg$(_c2, \"Image\");\n$RefreshReg$(_c3, \"ImageContainer\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/config/images.config.ts\"\n);\nimport.meta.hot.lastModified = \"1691945345602.1763\";\n}\n// REMIX HMR END\n\nimport Logo from \"~/static/images/maxiruby.svg\";\nimport HomeBackground from \"~/static/images/home-bg.svg\";\nimport FCFS from \"~/static/images/fcfs.png\";\nimport FCFS_BG from \"~/static/images/fcfs-bg.svg\";\nimport Brave from \"~/static/images/brave.png\";\nimport Circle from \"~/static/images/circle.png\";\nimport Discord from \"~/static/images/discord.png\";\nimport Google from \"~/static/images/google.png\";\nimport Jump from \"~/static/images/jump.png\";\nimport Lolla from \"~/static/images/lolla.png\";\nimport MagicEden from \"~/static/images/magiceden.png\";\nimport GoogleG from \"~/static/images/google.svg\";\nimport Twitter from \"~/static/images/twitter.svg\";\nimport EmailSuccess from \"~/static/images/email-success.svg\";\n\nexport const Images = {\n  Logo,\n  HomeBackground,\n  FCFS,\n  FCFS_BG,\n  Brave,\n  Circle,\n  Discord,\n  Google,\n  Jump,\n  Lolla,\n  MagicEden,\n  GoogleG,\n  Twitter,\n  EmailSuccess,\n};\n", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/config/meta.config.ts\"\n);\nimport.meta.hot.lastModified = \"1691945345602.4\";\n}\n// REMIX HMR END\n\n// types\nimport type { Feature, SocialMediaLink, Tier } from \"~/types/meta.types\";\nimport { Images } from \"./images.config\";\n\nexport const Social: SocialMediaLink[] = [\n  {\n    id: 7,\n    title: \"Discord\",\n    icon: \"discord\",\n    path: \"https://discord.com/\",\n  },\n  {\n    id: 6,\n    title: \"Telegram\",\n    icon: \"telegram\",\n    path: \"https://telegram.com/\",\n  },\n  {\n    id: 5,\n    title: \"Twitter\",\n    icon: \"twitter\",\n    path: \"https://twitter.com/\",\n  },\n  {\n    id: 0,\n    title: \"Reddit\",\n    icon: \"reddit\",\n    path: \"https://reddit.com/\",\n  },\n  {\n    id: 4,\n    title: \"Instagram\",\n    icon: \"instagram\",\n    path: \"https://instagram.com/\",\n  },\n  {\n    id: 3,\n    title: \"Linkedin\",\n    icon: \"linkedin\",\n    path: \"https://linkedin.com/\",\n  },\n  {\n    id: 1,\n    title: \"Medium\",\n    icon: \"medium\",\n    path: \"https://reddit.com/\",\n  },\n];\n\nexport const HelpfulLinks = {\n  \"about us\": [\n    {\n      title: \"Whitepaper\",\n      path: \"#\",\n      target: \"_blank\",\n    },\n    {\n      title: \"Blog\",\n      path: \"#\",\n      target: \"_blank\",\n    },\n    {\n      title: \"Terms of Use\",\n      path: \"#\",\n      target: \"_blank\",\n    },\n    {\n      title: \"Privacy Policy\",\n      path: \"#\",\n      target: \"_blank\",\n    },\n  ],\n  support: [\n    {\n      title: \"Help & Support\",\n      path: \"#\",\n      target: \"_blank\",\n    },\n    {\n      title: \"Author Profile\",\n      path: \"#\",\n      target: \"_blank\",\n    },\n    {\n      title: \"Contact\",\n      path: \"#\",\n      target: \"_blank\",\n    },\n  ],\n  community: [\n    {\n      title: \"Twitter\",\n      path: \"#\",\n      target: \"_blank\",\n    },\n    {\n      title: \"Telegram\",\n      path: \"#\",\n      target: \"_blank\",\n    },\n    {\n      title: \"Discord\",\n      path: \"#\",\n      target: \"_blank\",\n    },\n  ],\n};\n\nexport const Features: Feature[] = [\n  {\n    title: \"Selective Curation of Valuable Projects\",\n    description:\n      \"MaxiRuby Launchpad offers meticulously curated projects to provide the community access to the most valuable opportunities. This curation ensures secure and profitable investment opportunities for investors.\",\n    count: \"000000\",\n    mark: \"XXXXXXX\",\n  },\n  {\n    title: \"Fast and Secure Token Purchase\",\n    description:\n      \"MaxiRuby facilitates swift and secure token purchases through smart contracts and reliable payment methods. Participants can easily acquire tokens with a high level of security.\",\n    count: \"000000\",\n    mark: \"XXXXXXX\",\n  },\n  {\n    title: \"Accessibility with Low Gas Fees\",\n    description:\n      \"Get big, quick. Solana is made to handle thousands of transactions per second, and fees for both developers and users remain less than $0.01.\",\n    count: \"000000\",\n    mark: \"XXXXXXX\",\n  },\n  {\n    title: \"Community-Centric Interaction\",\n    description:\n      \"MaxiRuby Launchpad fosters interaction between the community, projects, and teams. Users can contribute to project developments, ask questions, and provide feedback. The community plays a pivotal role in the success of projects.\",\n    count: \"000000\",\n    mark: \"XXXXXXX\",\n  },\n];\n\nexport const Tiers: Tier[] = [\n  {\n    tier: \"bronze\",\n    staking_requirement: \"0\",\n    staking_length_required: \"0\",\n    whitelist_requirement: \"0\",\n    lottery_ticket: \"0\",\n  },\n  {\n    tier: \"silver\",\n    staking_requirement: \"0\",\n    staking_length_required: \"0\",\n    whitelist_requirement: \"0\",\n    lottery_ticket: \"0\",\n  },\n  {\n    tier: \"gold\",\n    staking_requirement: \"0\",\n    staking_length_required: \"0\",\n    whitelist_requirement: \"0\",\n    lottery_ticket: \"0\",\n  },\n  {\n    tier: \"platinum\",\n    staking_requirement: \"0\",\n    staking_length_required: \"0\",\n    whitelist_requirement: \"0\",\n    lottery_ticket: \"0\",\n  },\n  {\n    tier: \"diamond\",\n    staking_requirement: \"0\",\n    staking_length_required: \"0\",\n    whitelist_requirement: \"0\",\n    lottery_ticket: \"0\",\n  },\n  {\n    tier: \"blue diamond\",\n    staking_requirement: \"0\",\n    staking_length_required: \"0\",\n    whitelist_requirement: \"0\",\n    lottery_ticket: \"0\",\n  },\n];\n\nexport const Partners = [\n  {\n    partner: \"brave\",\n    source: Images.Brave,\n  },\n  {\n    partner: \"circle\",\n    source: Images.Circle,\n  },\n  {\n    partner: \"discord\",\n    source: Images.Discord,\n  },\n  {\n    partner: \"google\",\n    source: Images.Google,\n  },\n  {\n    partner: \"jump\",\n    source: Images.Jump,\n  },\n  {\n    partner: \"lolla\",\n    source: Images.Lolla,\n  },\n  {\n    partner: \"magiceden\",\n    source: Images.MagicEden,\n  },\n];\n", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/config/index.ts\"\n);\nimport.meta.hot.lastModified = \"1691945345602.246\";\n}\n// REMIX HMR END\n\nimport { Images } from \"~/config/images.config\";\nimport { Constants } from \"~/config/constants.config\";\nimport * as Blockchain from \"~/config/blockchain.config\";\nimport * as Meta from \"~/config/meta.config\";\n\nexport { Images, Constants, Blockchain, Meta };\n"],
  "mappings": "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",
  "names": ["React", "Image", "google_default"]
}
